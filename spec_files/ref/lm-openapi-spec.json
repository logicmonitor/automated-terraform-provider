{
    "basePath": "/santaba/rest",
    "definitions": {
        "AccessLogPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/AuditLog"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AckCollectorDown": {
            "properties": {
                "comment": {
                    "example": "Collector Down Acknowledged",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Admin": {
            "properties": {
                "acceptEULA": {
                    "description": "Whether or not the user is required to accept the EULA (end user license agreement)",
                    "example": true,
                    "type": "boolean"
                },
                "acceptEULAOn": {
                    "description": "The time, in epoch format, that the user accepted the EULA (if required to)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "apionly": {
                    "description": "Whether it is a API only user",
                    "example": false,
                    "type": "boolean"
                },
                "apiTokens": {
                    "description": "Any API Tokens associated with the user",
                    "items": {
                        "$ref": "#/definitions/APIToken"
                    },
                    "type": "array"
                },
                "contactMethod": {
                    "description": "email | smsemail",
                    "example": "email",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Who created the user. This may be another user, SAML or LogicMonitor",
                    "example": "Chief Admin",
                    "type": "string"
                },
                "email": {
                    "description": "The email address associated with the user",
                    "example": "john.doe@logicmonitor.com",
                    "type": "string"
                },
                "firstName": {
                    "description": "The first name associated with the user",
                    "example": "John",
                    "type": "string"
                },
                "forcePasswordChange": {
                    "description": "Whether or not the user should be forced to change their password on the next login",
                    "example": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "The Id of the user",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastAction": {
                    "description": "The last action taken by the user",
                    "readOnly": true,
                    "type": "string"
                },
                "lastActionOn": {
                    "description": "The time, in epoch format, of the user's last action",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastActionOnLocal": {
                    "description": "The time, in local format, of the user's last action",
                    "readOnly": true,
                    "type": "string"
                },
                "lastLoginOn": {
                    "description": "The time that the user last logged in, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastName": {
                    "description": "The last name associated with the user",
                    "example": "Doe",
                    "type": "string"
                },
                "note": {
                    "description": "Any notes assocaited with the user",
                    "example": "John Doe is an Admin on this Portal",
                    "type": "string"
                },
                "password": {
                    "description": "The password associated with the user",
                    "example": "JohnDoe1",
                    "type": "string"
                },
                "phone": {
                    "description": "The phone number associated with the user",
                    "example": "8054445555",
                    "type": "string"
                },
                "roles": {
                    "description": "The roles assigned to the user",
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "smsEmail": {
                    "description": "The sms email address associated with the user",
                    "example": "8054445555@logicmonitor.com",
                    "type": "string"
                },
                "smsEmailFormat": {
                    "description": "sms | fullText, where sms = 160 characters and fullText= all characters",
                    "example": "sms",
                    "type": "string"
                },
                "status": {
                    "description": "The user's status. Should be one of active and suspended",
                    "example": "active",
                    "type": "string"
                },
                "timezone": {
                    "description": "The timezone of the user",
                    "example": "America/Los Angeles",
                    "type": "string"
                },
                "trainingEmail": {
                    "description": "The email address for user's Training account",
                    "readOnly": true,
                    "type": "string"
                },
                "twoFAEnabled": {
                    "description": "Whether or not two factor authentication is enabled for the user",
                    "example": false,
                    "type": "boolean"
                },
                "username": {
                    "description": "The username associated with the user",
                    "example": "John",
                    "type": "string"
                },
                "viewPermission": {
                    "description": "The account tabs that will be visible to the user",
                    "example": "{\n\n\"Hosts\" : true,\n\"Services\" : true,\n\"Reports\" : true,\n\"Dashboards\" : true,\n\"Alerts\" : true,\n\"Settings\" : true\n}",
                    "type": "object"
                }
            },
            "required": [
                "email",
                "password",
                "roles",
                "username"
            ],
            "type": "object"
        },
        "AdminPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Admin"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AggregateCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "Alert": {
            "properties": {
                "ackComment": {
                    "description": "The comment submitted with the acknowledgement",
                    "readOnly": true,
                    "type": "string"
                },
                "acked": {
                    "description": "Whether or not the alert has been acknowledged",
                    "readOnly": true,
                    "type": "boolean"
                },
                "ackedBy": {
                    "description": "The user that acknowledged the alert",
                    "readOnly": true,
                    "type": "string"
                },
                "ackedEpoch": {
                    "description": "The time (in epoch format) that the alert was acknowledged",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "alertValue": {
                    "description": "The value that triggered the alert",
                    "readOnly": true,
                    "type": "string"
                },
                "chain": {
                    "description": "The escalation chain the alert was routed to",
                    "readOnly": true,
                    "type": "string"
                },
                "chainId": {
                    "description": "The id of the escalation chain the alert was routed to",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "cleared": {
                    "description": "Whether or not the alert has cleared",
                    "readOnly": true,
                    "type": "boolean"
                },
                "clearValue": {
                    "description": "The value that cleared the alert",
                    "readOnly": true,
                    "type": "string"
                },
                "customColumns": {
                    "description": "The property or token values that should display with the alert details. Note that if referencing tokens, you'll need to URL encode the # symbol.",
                    "readOnly": true,
                    "type": "object"
                },
                "dataPointId": {
                    "description": "The id of the datapoint in alert",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointName": {
                    "description": "The name of the datapoint in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "detailMessage": {
                    "description": "The alert message, if needMessage=true is included in the query parameters",
                    "readOnly": true,
                    "type": "object"
                },
                "enableAnomalyAlertGeneration": {
                    "type": "string"
                },
                "enableAnomalyAlertSuppression": {
                    "type": "string"
                },
                "endEpoch": {
                    "description": "The time (in epoch format) that the alert ended",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "description": "The alert id",
                    "readOnly": true,
                    "type": "string"
                },
                "instanceDescription": {
                    "description": "The description of the instance in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "instanceId": {
                    "description": "The id of the instance in alert",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instanceName": {
                    "description": "The name of the instance in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "internalId": {
                    "description": "The internal id for the alert",
                    "readOnly": true,
                    "type": "string"
                },
                "monitorObjectGroups": {
                    "description": "Information about the groups the object is a member of",
                    "readOnly": true,
                    "type": "object"
                },
                "monitorObjectId": {
                    "description": "The id of the object that the alert is associated with",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "monitorObjectName": {
                    "description": "The name of the object that the alert is associated with",
                    "readOnly": true,
                    "type": "string"
                },
                "monitorObjectType": {
                    "readOnly": true,
                    "type": "string"
                },
                "nextRecipient": {
                    "description": "The next recipient in the escalation chain for this alert",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "receivedList": {
                    "description": "The recipients that have received the alert",
                    "readOnly": true,
                    "type": "string"
                },
                "resourceId": {
                    "description": "The device specific LogicModule Id",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "resourceTemplateId": {
                    "description": "The id of the datasource in alert",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "resourceTemplateName": {
                    "description": "The name of the datasource in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "resourceTemplateType": {
                    "description": "The type of the logicmodule in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "rule": {
                    "description": "The rule the alert matches",
                    "readOnly": true,
                    "type": "string"
                },
                "ruleId": {
                    "description": "The id of the rule the alert matches",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "SDT": {
                    "description": "The active SDT, if one exists",
                    "readOnly": true,
                    "type": "object"
                },
                "sdted": {
                    "description": "Whether or not the alert was triggered during an SDT",
                    "readOnly": true,
                    "type": "boolean"
                },
                "severity": {
                    "description": "The alert severity, where 2=warning, 3=error and 4=critical",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "startEpoch": {
                    "description": "The time (in epoch format) that the alert started",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "subChainId": {
                    "description": "The id of the sub time based chain",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "threshold": {
                    "description": "The threshold associated with the object in alert",
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "description": "The type of alert",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AlertAck": {
            "properties": {
                "ackComment": {
                    "description": "your comment on the alert",
                    "example": "looking into this alert",
                    "type": "string"
                }
            },
            "required": [
                "ackComment"
            ],
            "type": "object"
        },
        "AlertFilters": {
            "properties": {
                "acked": {
                    "description": "Displayed alerts must have an acknowledgement status that satisfies this criteria",
                    "type": "string"
                },
                "chain": {
                    "description": "Displayed alerts must be routed to an escalation chain that satisfies this filter. Glob is accepted, and * and an empty string both match all escalation chains",
                    "type": "string"
                },
                "cleared": {
                    "description": "Displayed alerts must be active if cleared=no,  display alerts must be closed if cleared=yes, and must have cleared in the past 7 days if cleared=all",
                    "type": "string"
                },
                "dataPoint": {
                    "description": "Displayed alerts must be associated with datapoints that meet this filter criteria. Glob is accepted, and * and an empty string both match all datapoints",
                    "type": "string"
                },
                "dataSource": {
                    "description": "Displayed alerts must be associated with datasources that meet this filter criteria. Glob is accepted, and * and an empty string both indicate all datasources",
                    "type": "string"
                },
                "group": {
                    "description": "Displayed alerts must be associated with groups that meet this filter criteria. Glob is accepted, and * and an empty string both indicate all groups",
                    "type": "string"
                },
                "host": {
                    "description": "Displayed alerts must be associated with devices that meet this filter criteria. Glob is accepted, and * and an empty string both indicate all devices",
                    "type": "string"
                },
                "instance": {
                    "description": "Displayed alerts must be associated with instances that meet this filter criteria. Glob is accepted, and * and an empty string both match all instances",
                    "type": "string"
                },
                "keyword": {
                    "description": "The key word for free search",
                    "type": "string"
                },
                "rule": {
                    "description": "Displayed alerts must match a rule that satisfies this filter. Glob is accepted, and * and an empty string both match all rules",
                    "type": "string"
                },
                "sdted": {
                    "description": "Displayed alerts must have an SDT status that meets this criteria",
                    "type": "string"
                },
                "severity": {
                    "description": "Displayed alerts must have a severity that satisfies this criteria. Multiple severities are separated by commas",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AlertForecastingReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "algorithm": {
                            "description": "Forecast method for the report. Acceptable values are: Linear, ARIMA",
                            "type": "string"
                        },
                        "columns": {
                            "description": "The columns displayed in the report",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "confidenceLevel": {
                            "description": "The confidence level when do forecasting",
                            "format": "int32",
                            "type": "integer"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "hostsVal": {
                            "description": "The group or device name selected for the report",
                            "type": "string"
                        },
                        "hostsValType": {
                            "description": "The type of the resource selection. Acceptable values are: host, group",
                            "type": "string"
                        },
                        "metrics": {
                            "description": "The datapoints that needs to do forecasting",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            },
                            "type": "array"
                        },
                        "sortedBy": {
                            "description": "The sort option for the alert forecast report",
                            "format": "int32",
                            "type": "integer"
                        },
                        "top10Only": {
                            "description": "true | false\nfalse: CPU metrics will be displayed for all selected devices or groups\ntrue: CPU metrics will only be displayed for the top ten device or groups",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "confidenceLevel",
                        "hostsValType",
                        "metrics"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert forecasting"
        },
        "AlertPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Alert"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AlertReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "ackFilter": {
                            "description": "all | acked | nonacked\nall: both acknowledged and non-acknowledged alerts that meet the report criteria will be displayed\nacked: only acknowledged alerts that meet the report criteria will be displayed\nnonacked: only non-acknowledged alerts that meet the report criteria will be displayed",
                            "type": "string"
                        },
                        "activeOnly": {
                            "description": "true: only alerts that are still alerting (i.e. haven't yet cleared) will be displayed in the report\nfalse: active alerts and cleared alerts will both be displayed in the report",
                            "type": "boolean"
                        },
                        "chain": {
                            "description": "All alerts displayed in the report must have been routed to the Escalation Chains specified in this filter",
                            "type": "string"
                        },
                        "columns": {
                            "description": "The columns that will be displayed in the report. You should specify the columns in the order in which you'd like them to be displayed. All column names need to be included in this object, but each column should have an associated isHidden field that indicates whether it is displayed or not. NOTE that if summaryOnly is set to true you can only include these columns: Alerts, Group, Device, Instance, Datapoint. If summaryOnly is set to false you can include these columns: Severity, Group, Device, Instance, Datapoint, Thresholds, Value, Began, End, Rule, Chain, Acked, Acked By, Acked On, Notes, In SDT",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "dataPoint": {
                            "description": "The group filter used to determine which alerts will appear in the report. Glob expression supported",
                            "type": "string"
                        },
                        "dataSource": {
                            "description": "All alerts displayed in the report must have been triggered for the Datasources specified in this filter",
                            "type": "string"
                        },
                        "dataSourceInstanceName": {
                            "description": "The instance filter used to determine which alerts will appear in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report. Options include: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "description": "The device filter used to determine which alerts will appear in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "groupFullPath": {
                            "description": "The group filter used to determine which alerts will appear in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "includePreexist": {
                            "description": "true: alerts that started prior to the specified dateRange but that meet all other criteria will be displayed in the report\nfalse: only alerts that started during the specified dateRange will be displayed in the report\nthe default value is true",
                            "type": "boolean"
                        },
                        "level": {
                            "description": "all | error | critical\nall: alerts of all severity levels will be displayed if they match the filter criteria\nerror: only error and critical alerts that match the filter criteria will be displayed\ncritical: only critical alerts that match the filter criteria will be displayed",
                            "type": "string"
                        },
                        "rule": {
                            "description": "All alerts displayed in the report must have been routed to the Rules specified in this filter",
                            "type": "string"
                        },
                        "sdtFilter": {
                            "description": "all | sdt | nonsdt\nall: alerts that are in SDT and that aren't in SDT that meet the report criteria will be displayed\nsdt: only alerts that are in SDT and that meet the report criteria will be displayed\nnonsdt: only alerts that aren't in SDT and that meet the report criteria will be displayed",
                            "type": "string"
                        },
                        "sortedBy": {
                            "description": "count | host | dataPoint | level | startOn | ackedOn. How displayed alerts will be sorted in the report. Note that if summaryOnly is set to true, you are limited to sortedBy= count | host | dataPoint. If summaryOnly is set to false, you cannot set sortedBy = count",
                            "type": "string"
                        },
                        "summaryOnly": {
                            "description": "true: a column will be added to the report detailing the number of times each alert occurred\nfalse: the number of times each alert occurred will not be displayed in the report",
                            "type": "boolean"
                        },
                        "timing": {
                            "description": "overlap | start - Any alerts active during the specified dateRange will be displayed in the report if time=overlap. If time=start, only alerts that started during the specified dateRange will be displayed in the report",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert"
        },
        "AlertRule": {
            "properties": {
                "datapoint": {
                    "description": "The datapoint the alert rule is configured to match",
                    "example": "*",
                    "type": "string"
                },
                "datasource": {
                    "description": "The datasource the alert rule is configured to match",
                    "example": "Port-",
                    "type": "string"
                },
                "deviceGroups": {
                    "description": "The device groups and service groups the alert rule is configured to match",
                    "example": "[ \"Devices by Type\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "devices": {
                    "description": "The device names and service names the alert rule is configured to match",
                    "example": "[\"Cisco Router\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "escalatingChain": {
                    "description": "The escalation chain associated with the alert rule",
                    "readOnly": true,
                    "type": "object"
                },
                "escalatingChainId": {
                    "description": "The id of the escalation chain associated with the alert rule",
                    "example": 12,
                    "format": "int32",
                    "type": "integer"
                },
                "escalationInterval": {
                    "description": "The escalation interval associated with the alert rule, in minutes",
                    "example": 15,
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The Id of the alert rule",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instance": {
                    "description": "The instance the alert rule is configured to match",
                    "example": "*",
                    "type": "string"
                },
                "levelStr": {
                    "description": "The alert severity levels the alert rule is configured to match. Acceptable values are: All, Warn, Error, Critical",
                    "example": "Warn",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the alert rule",
                    "example": "Warning",
                    "type": "string"
                },
                "priority": {
                    "description": "The priority associated with the alert rule",
                    "example": 100,
                    "format": "int32",
                    "type": "integer"
                },
                "suppressAlertAckSdt": {
                    "description": "Whether or not status notifications for acknowledgements and SDTs should be sent to the alert rule",
                    "example": true,
                    "type": "boolean"
                },
                "suppressAlertClear": {
                    "description": "Whether or not alert clear notifications should be sent to the alert rule",
                    "example": true,
                    "type": "boolean"
                }
            },
            "required": [
                "escalatingChainId",
                "name",
                "priority"
            ],
            "type": "object"
        },
        "AlertRulePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/AlertRule"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AlertSlaReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "alertLevel": {
                            "description": "Warn | Error | Critical. The minimum severity of the alert statuses you’d like to evaluate for the specified devices and device groups",
                            "type": "string"
                        },
                        "alertRule": {
                            "description": "The name of the Alert Rule that the datapoint alert you’re evaluating will be routed to. Note that if you do not select the correct alert rule, no matching alerts will be displayed",
                            "type": "string"
                        },
                        "dataPoint": {
                            "description": "The datapoints selected for the report, where multiple datapoints are separated by commas",
                            "type": "string"
                        },
                        "dataSource": {
                            "description": "The datasource instance selected for the report, in the format DatasourceName-InstanceName (If it is a single instance datasource you can just leave it at DatasourceName)",
                            "type": "string"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "hostsVal": {
                            "description": "The devices OR groups (use full path) selected for the report, where multiple entities are separated by commas. Note that glob is supported",
                            "type": "string"
                        },
                        "hostsValType": {
                            "description": "host | group. The type of entities specified in the hostsVal field",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert sla"
        },
        "AlertThresholdReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns that will be displayed in the report. You should specify the columns in the order in which you'd like them to be displayed",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "dataPoint": {
                            "description": "The datapoint to be included in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "dataSourceInstanceName": {
                            "description": "The name of the datasource instance to be included in the report, where the syntax should be dataSourceDisplayName-InstanceName. If you're referencing a single instance datasource, you can just specify dataSourceDisplayName. Glob expressions supported",
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "description": "The display name of the device(s) to be included in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "excludeGlobal": {
                            "description": "true: only variations from the global thresholds will be displayed\nfalse: all thresholds will be displayed, including global thresholds an custom group and instance level thresholds\nthe default value is true",
                            "type": "boolean"
                        },
                        "groupFullPath": {
                            "description": "The full path of the group whose member devices you are going to include in the report. Glob expressions supported",
                            "type": "string"
                        },
                        "sortedBy": {
                            "description": "host | datasource | datapoint\nhost: displayed thresholds will be sorted by device\ndatasource: displayed thresholds will be sorted by datasource instance\ndatapoint: displayed thresholds will be sorted by datapoint (metric)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert threshold"
        },
        "AlertTrendsMetric": {
            "properties": {
                "itemType": {
                    "type": "string"
                },
                "itemVal": {
                    "type": "string"
                }
            },
            "required": [
                "itemType",
                "itemVal"
            ],
            "type": "object"
        },
        "AlertTrendsReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "metrics": {
                            "description": "The devices and groups that will be included in the report, where each device/group should be represented with two fields: itemType and itemVal",
                            "items": {
                                "$ref": "#/definitions/AlertTrendsMetric"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "metrics"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert trends"
        },
        "AlertWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "filters": {
                            "$ref": "#/definitions/AlertFilters",
                            "description": "The filter for the alert table"
                        },
                        "parsedFilters": {
                            "$ref": "#/definitions/AlertFilters"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert"
        },
        "AlertWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Alert"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "searchId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "total": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "alert"
        },
        "ApiPerfMetrics": {
            "properties": {
                "api": {
                    "description": "api name",
                    "example": "10",
                    "readOnly": true,
                    "type": "string"
                },
                "maxNanoTime": {
                    "description": "Max time taken to process a request",
                    "example": 10,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "summary": {
                    "description": "api's summary defined in swagger.json",
                    "example": "get alert list",
                    "readOnly": true,
                    "type": "string"
                },
                "tags": {
                    "description": "api tags",
                    "example": "Devices, Device Groups",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "totalProcessedRequests": {
                    "description": "total processed requests",
                    "example": 10,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "totalRequests": {
                    "description": "total requests",
                    "example": 10,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "totalWaitingRequests": {
                    "description": "total waiting requests",
                    "example": 10,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "totNanoTime": {
                    "description": "total time taken to process requests",
                    "example": 10,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "APIToken": {
            "properties": {
                "accessId": {
                    "description": "The access Id associated with the API Tokens",
                    "readOnly": true,
                    "type": "string"
                },
                "accessKey": {
                    "description": "The secret key associated with the API Tokens",
                    "readOnly": true,
                    "type": "string"
                },
                "adminId": {
                    "description": "The id of the user associated with the API Tokens",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "adminName": {
                    "description": "The name of the user associated with the API Tokens",
                    "readOnly": true,
                    "type": "string"
                },
                "createdBy": {
                    "description": "The user who is the API Tokens created by",
                    "readOnly": true,
                    "type": "string"
                },
                "createdOn": {
                    "description": "The epoch at which the API Tokens were created",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "description": "The id of the API Token",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastUsedOn": {
                    "description": "The epoch at which the API Tokens were last used",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "note": {
                    "description": "The note associated with the API Tokens",
                    "example": "John Doe's API Token",
                    "type": "string"
                },
                "roles": {
                    "description": "The roles assigned to the user that is associated with the API Tokens",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array",
                    "uniqueItems": true
                },
                "status": {
                    "description": "1 | 2 - Whether or not the API Tokens are enabled, where 2 = enabled",
                    "example": 2,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ApiTokenPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/APIToken"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppliesToFunction": {
            "properties": {
                "code": {
                    "description": "The AppliesTo Function code. Note that special characters may need to be escaped.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the AppliesTo Function",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the AppliesTo Function",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the AppliesTo Function",
                    "type": "string"
                }
            },
            "required": [
                "code",
                "name"
            ],
            "type": "object"
        },
        "Assignment": {
            "properties": {
                "action": {
                    "description": "Whether or not specified devices should be included or excluded",
                    "example": "Include",
                    "type": "string"
                },
                "disableAlerting": {
                    "description": "Whether or not alerting should be disabled for discovered devices",
                    "example": false,
                    "type": "boolean"
                },
                "group": {
                    "description": "The ID of the group that discovered devices should be added into",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "groupName": {
                    "description": "The name of the group that discovered devices should be added into",
                    "example": "qapr",
                    "type": "string"
                },
                "tagKey": {
                    "type": "string"
                },
                "tagValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuditLog": {
            "properties": {
                "description": {
                    "description": "The description of the action recorded in the access log entry",
                    "readOnly": true,
                    "type": "string"
                },
                "happenedOn": {
                    "description": "The time, in epoch seconds, that the action recorded in the access log entry occurred",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "happenedOnLocal": {
                    "description": "The date and time that the action recorded in the access log entry occured",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the access log entry",
                    "readOnly": true,
                    "type": "string"
                },
                "ip": {
                    "description": "The IP address that the action was performed from",
                    "readOnly": true,
                    "type": "string"
                },
                "username": {
                    "description": "The username associated with the user that performed the action recorded in the access log entry\t",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuditLogReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns displayed in the report",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "filter": {
                            "description": "The filter setting for the report",
                            "type": "string"
                        },
                        "sortedBy": {
                            "description": "The sort option for the repor",
                            "type": "string"
                        },
                        "username": {
                            "description": "The user name of the user filter setting for the report",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "audit log"
        },
        "Authentication": {
            "discriminator": "type",
            "properties": {
                "password": {
                    "type": "string"
                },
                "type": {
                    "example": "basic",
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "required": [
                "password",
                "type",
                "userName"
            ],
            "type": "object"
        },
        "AutoDiscoveryConfiguration": {
            "properties": {
                "dataSourceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "deleteInactiveInstance": {
                    "type": "boolean"
                },
                "disableInstance": {
                    "type": "boolean"
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/AutoDiscoveryFilter"
                    },
                    "type": "array"
                },
                "instanceAutoGroupMethod": {
                    "type": "string"
                },
                "instanceAutoGroupMethodParams": {
                    "type": "string"
                },
                "method": {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                "persistentInstance": {
                    "type": "boolean"
                },
                "scheduleInterval": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "method"
            ],
            "type": "object"
        },
        "AutoDiscoveryFilter": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "attribute",
                "operation"
            ],
            "type": "object"
        },
        "AutoDiscoveryMethod": {
            "discriminator": "name",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "AutomaticUpgradeInfo": {
            "properties": {
                "createdBy": {
                    "readOnly": true,
                    "type": "string"
                },
                "dayOfWeek": {
                    "example": "MON",
                    "type": "string"
                },
                "description": {
                    "example": "regular MGD updates",
                    "type": "string"
                },
                "hour": {
                    "example": 15,
                    "format": "int32",
                    "type": "integer"
                },
                "level": {
                    "readOnly": true,
                    "type": "string"
                },
                "minute": {
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                },
                "occurrence": {
                    "example": "Any",
                    "type": "string"
                },
                "timezone": {
                    "example": "Americas/Los Angeles",
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "version": {
                    "example": "MGD",
                    "type": "string"
                }
            },
            "required": [
                "dayOfWeek",
                "hour",
                "minute",
                "occurrence",
                "version"
            ],
            "type": "object"
        },
        "AwsAccountTestResult": {
            "properties": {
                "detailLink": {
                    "type": "string"
                },
                "nonPermissionErrors": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "noPermissionServices": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "AwsAutoScalingServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsautoscalingservicelimits"
        },
        "AwsBillingCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsbilling"
        },
        "AwsBillingReportCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsbillingreport"
        },
        "AwsBillingReportDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "awsBillingReportAttribute": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "awsBillingReportAttribute"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsbillingreport"
        },
        "AwsClassicElbServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsclassicelbservicelimits"
        },
        "AwsCloudWatchCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awscloudwatch"
        },
        "AwsDynamodbCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "awsAttributeName": {
                            "type": "string"
                        },
                        "awsDynamodbAttrType": {
                            "type": "string"
                        },
                        "awsKeyValue": {
                            "type": "string"
                        },
                        "awsQueryIndexName": {
                            "type": "string"
                        },
                        "awsQueryIndexType": {
                            "type": "string"
                        },
                        "awsQueryKeyValue": {
                            "type": "string"
                        },
                        "awsQueryRangeOp": {
                            "type": "string"
                        },
                        "awsQueryRangeValue": {
                            "type": "string"
                        },
                        "awsRangeValue": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsdynamodb"
        },
        "AwsEC2ReservedInstanceCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsec2reservedinstance"
        },
        "AwsEC2ReservedInstanceCoverageCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsec2reservedinstancecoverage"
        },
        "AwsEC2ReservedInstanceCoverageDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsec2reservedinstancecoverage"
        },
        "AwsEC2ReservedInstanceDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "instanceName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "instanceName"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsec2reservedinstance"
        },
        "AwsEC2ScheduledEventsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsec2scheduledevents"
        },
        "AwsEc2ServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsec2servicelimits"
        },
        "AwsEcsServiceDetailsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsecsservicedetails"
        },
        "AwsEcsServiceDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsecsservice"
        },
        "AwsElastiCacheDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awselasticache"
        },
        "AwsExternalId": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AwsLBTargetGroupDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awslbtargetgroups"
        },
        "AWSNetscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "accessId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "accountId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "assumedRoleArn": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "awsAZ": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "awsService": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "externalId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "rootName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "secretKey": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "aws"
        },
        "AwsRedShiftDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsredshift"
        },
        "AwsRssEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "schedule": {
                            "description": "The polling interval for the EventSource",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsrss"
        },
        "AwsS3CollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awss3"
        },
        "AwsServiceLimitsFromTrustedAdvisorCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "awsServiceName": {
                            "type": "string"
                        },
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awsservicelimitsfromtrustedadvisor"
        },
        "AwsServiceRegionDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "awsServiceName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "awsServiceName"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsserviceregion"
        },
        "AwsSesServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awssesservicelimits"
        },
        "AwsSqsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "awsSqsMessageNum": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "awsSqsMessageSize": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "awssqs"
        },
        "AzureAccountTestResult": {
            "properties": {
                "detailLink": {
                    "readOnly": true,
                    "type": "object"
                },
                "noPermissionServices": {
                    "readOnly": true,
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AzureBillingCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azurebilling"
        },
        "AzureBillingDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "azureBillingType": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "azureBillingType"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_azurebilling"
        },
        "AzureInsightsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azureinsights"
        },
        "AzureNetscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "azureAZ": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "azureService": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "clientId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "rootName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "secretKey": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "subscriptionIds": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "tenantId": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azure"
        },
        "AzureNetworkServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azurenetworkservicelimits"
        },
        "AzureRedisCacheDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_azurerediscache"
        },
        "AzureResourceHealthCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azureresourcehealth"
        },
        "AzureRssEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "schedule": {
                            "description": "The polling interval for the EventSource",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azurerss"
        },
        "AzureServiceRegionDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_azureserviceregion"
        },
        "AzureStorageServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azurestorageservicelimits"
        },
        "AzureSubscriptionDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_azuresubscription"
        },
        "AzureVMServiceLimitsCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "azurevmservicelimits"
        },
        "BasicAuthentication": {
            "allOf": [
                {
                    "$ref": "#/definitions/Authentication"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "basic"
        },
        "BatchJobExecutionItem": {
            "properties": {
                "alertLevel": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "bjName": {
                    "readOnly": true,
                    "type": "string"
                },
                "cmdline": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceBatchJobId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "executionNo": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "exitCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "finishedOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "finishedOnLocal": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "startedOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "startedOnLocal": {
                    "readOnly": true,
                    "type": "string"
                },
                "stderr": {
                    "readOnly": true,
                    "type": "string"
                },
                "stdout": {
                    "readOnly": true,
                    "type": "string"
                },
                "userData": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchJobWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "batchJobId": {
                            "description": "The id of the batchjob definition in LogicMonitor",
                            "format": "int32",
                            "type": "integer"
                        },
                        "batchJobName": {
                            "description": "The name of the batchjob definition in LogicMonitor",
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "description": "The display name of the device in LogicMonitor that the batchjob is running on",
                            "type": "string"
                        },
                        "groupDisplayName": {
                            "description": "The display name of the device group in LogicMonitor that the batchjob is running on",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "batchjob"
        },
        "BatchJobWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/BatchJobExecutionItem"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "batchjob"
        },
        "BatchScriptCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "type": "string"
                        },
                        "linuxCmdline": {
                            "type": "string"
                        },
                        "linuxScript": {
                            "type": "string"
                        },
                        "scriptType": {
                            "type": "string"
                        },
                        "windowsCmdline": {
                            "type": "string"
                        },
                        "windowsScript": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "batchscript"
        },
        "BigNumberData": {
            "properties": {
                "bottomLabel": {
                    "readOnly": true,
                    "type": "string"
                },
                "colorLevel": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "errorMessage": {
                    "readOnly": true,
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "rightLabel": {
                    "readOnly": true,
                    "type": "string"
                },
                "rounding": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "useCommaSeparators": {
                    "type": "boolean"
                },
                "value": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "required": [
                "useCommaSeparators"
            ],
            "type": "object"
        },
        "BigNumberDataPoint": {
            "properties": {
                "aggregateFunction": {
                    "type": "string"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "type": "string"
                },
                "deviceGroupFullPath": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "deviceDisplayName",
                "deviceGroupFullPath",
                "instanceName",
                "name"
            ],
            "type": "object"
        },
        "BigNumberInfo": {
            "properties": {
                "bigNumberItems": {
                    "description": "The datapoints and virtual datapoints whose values should be displayed in the big number widget",
                    "items": {
                        "$ref": "#/definitions/BigNumberItem"
                    },
                    "type": "array"
                },
                "counters": {
                    "description": "The counter is used for saving applyTo expression, it's mainly used for count device",
                    "items": {
                        "$ref": "#/definitions/Counter"
                    },
                    "type": "array"
                },
                "dataPoints": {
                    "description": "The datapoints included in the widget. Note that a datapoint must be referenced in the bigNumberItems object in order to be displayed",
                    "items": {
                        "$ref": "#/definitions/BigNumberDataPoint"
                    },
                    "type": "array"
                },
                "virtualDataPoints": {
                    "description": "The virtual datapoints included in the widget. Note that a virtual datapoint must be referenced in the bigNumberItems object in order to be displayed",
                    "items": {
                        "$ref": "#/definitions/VirtualDataPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "bigNumberItems",
                "dataPoints"
            ],
            "type": "object"
        },
        "BigNumberItem": {
            "properties": {
                "bottomLabel": {
                    "type": "string"
                },
                "colorThresholds": {
                    "items": {
                        "$ref": "#/definitions/ColorThreshold"
                    },
                    "type": "array"
                },
                "dataPointName": {
                    "type": "string"
                },
                "position": {
                    "format": "int32",
                    "type": "integer"
                },
                "rightLabel": {
                    "type": "string"
                },
                "rounding": {
                    "format": "int32",
                    "type": "integer"
                },
                "useCommaSeparators": {
                    "type": "boolean"
                }
            },
            "required": [
                "dataPointName",
                "useCommaSeparators"
            ],
            "type": "object"
        },
        "BigNumberWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "bigNumberInfo": {
                            "$ref": "#/definitions/BigNumberInfo",
                            "description": "BigNumber widget configuration info"
                        }
                    },
                    "required": [
                        "bigNumberInfo"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "bignumber"
        },
        "BigNumberWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/BigNumberData"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "bignumber"
        },
        "CellData": {
            "properties": {
                "alertSeverity": {
                    "type": "string"
                },
                "alertStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "daysUntilAlertList": {
                    "items": {
                        "$ref": "#/definitions/DaysUntilAlert"
                    },
                    "type": "array"
                },
                "forecastDay": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instanceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instanceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Chain": {
            "properties": {
                "period": {
                    "$ref": "#/definitions/Period"
                },
                "stages": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/Recipient"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "single",
                    "type": "string"
                }
            },
            "required": [
                "stages",
                "type"
            ],
            "type": "object"
        },
        "CIMAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "cimClass": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "property": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "cimClass",
                        "namespace",
                        "property"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_cim"
        },
        "CIMCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "fields": {
                            "items": {
                                "$ref": "#/definitions/DataSourceAttribute"
                            },
                            "type": "array"
                        },
                        "ip": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "queryClass": {
                            "type": "string"
                        },
                        "queryIndex": {
                            "type": "string"
                        },
                        "queryValue": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "cim"
        },
        "CloudWatchAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "clusterDimension": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "nodeDimension": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "clusterDimension",
                        "namespace",
                        "nodeDimension"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_cloudwatch"
        },
        "Collector": {
            "properties": {
                "ackComment": {
                    "description": "The comment associated with the Collector acknowledgement (if it is in alert and acknowledged)",
                    "readOnly": true,
                    "type": "string"
                },
                "acked": {
                    "description": "Whether or not the Collector is currently acknowledged",
                    "readOnly": true,
                    "type": "boolean"
                },
                "ackedBy": {
                    "description": "The user that acknowledged the Collector (if it is in alert)",
                    "readOnly": true,
                    "type": "string"
                },
                "ackedOn": {
                    "description": "The epoch at which the Collector was acknowledged (if it is in alert)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "ackedOnLocal": {
                    "description": "The time that the Collector was acknowledged (if it is in alert), in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "arch": {
                    "description": "The collector architecture (Windows | Linux platform followed by 32 | 64 bit)",
                    "readOnly": true,
                    "type": "string"
                },
                "automaticUpgradeInfo": {
                    "$ref": "#/definitions/AutomaticUpgradeInfo",
                    "description": "The details of the Collector's automatic upgrade schedule, if one exists"
                },
                "backupAgentId": {
                    "description": "The Id of the backup Collector assigned to the Collector",
                    "example": 75,
                    "format": "int32",
                    "type": "integer"
                },
                "build": {
                    "description": "The Collector version",
                    "readOnly": true,
                    "type": "string"
                },
                "canDowngrade": {
                    "description": "Whether the collector can be downgraded to a lower version",
                    "readOnly": true,
                    "type": "boolean"
                },
                "canDowngradeReason": {
                    "description": "The reason why the collector can be downgraded",
                    "readOnly": true,
                    "type": "string"
                },
                "clearSent": {
                    "description": "Whether or not an alert clear notifcation has been sent for this Collector",
                    "readOnly": true,
                    "type": "boolean"
                },
                "collectorConf": {
                    "description": "The Collector's configuration file",
                    "readOnly": true,
                    "type": "string"
                },
                "collectorDeviceId": {
                    "description": "The device id of the collector device",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "collectorGroupId": {
                    "description": "The Id of the group the Collector is in",
                    "example": 10,
                    "format": "int32",
                    "type": "integer"
                },
                "collectorGroupName": {
                    "description": "The name of the group the Collector is in",
                    "readOnly": true,
                    "type": "string"
                },
                "collectorSize": {
                    "description": "The size of the collector",
                    "readOnly": true,
                    "type": "string"
                },
                "confVersion": {
                    "description": "The version of the agent.conf configuration file",
                    "readOnly": true,
                    "type": "string"
                },
                "createdOn": {
                    "description": "The time that the Collector was created, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "createdOnLocal": {
                    "description": "The time that the Collector was created, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "customProperties": {
                    "description": "The custom properties defined for the Collector",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The Collector's description",
                    "example": "Linux Collector",
                    "type": "string"
                },
                "ea": {
                    "description": "Whether the collector is in EA version",
                    "readOnly": true,
                    "type": "boolean"
                },
                "enableFailBack": {
                    "description": "Whether or not automatic failback is enabled for the Collector, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "enableFailOverOnCollectorDevice": {
                    "description": "Whether or not the device the Collector is installed on is enabled for fail over",
                    "example": true,
                    "type": "boolean"
                },
                "escalatingChainId": {
                    "description": "The Id of the escalation chain associated with this Collector",
                    "example": 80,
                    "format": "int32",
                    "type": "integer"
                },
                "hasFailOverDevice": {
                    "description": "Whether the collector has failover devices",
                    "readOnly": true,
                    "type": "boolean"
                },
                "hostname": {
                    "description": "The hostname of the device the Collector is installed on",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The id of the Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDT": {
                    "description": "The SDT status of the collector",
                    "readOnly": true,
                    "type": "boolean"
                },
                "isDown": {
                    "description": "Whether or not the Collector is currently down",
                    "readOnly": true,
                    "type": "boolean"
                },
                "lastSentNotificationOn": {
                    "description": "The time, in epoch format, that a notification was last sent for the Collector",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastSentNotificationOnLocal": {
                    "description": "The time that a notification was last sent for this Collector, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "needAutoCreateCollectorDevice": {
                    "description": "Whether to create a collector device when instance collector, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "netscanVersion": {
                    "description": "The Netscan version associated with the Collector",
                    "readOnly": true,
                    "type": "string"
                },
                "nextRecipient": {
                    "description": "The Id of the next recipient to which alert notifications will be sent",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nextUpgradeInfo": {
                    "$ref": "#/definitions/NextUpgradeInfo",
                    "description": "The details of the Collector's next upgrade, if one has been scheduled",
                    "readOnly": true
                },
                "numberOfHosts": {
                    "description": "The number of devices monitored by the Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numberOfInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "numberOfWebsites": {
                    "description": "The number of websites monitored by the Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "onetimeDowngradeInfo": {
                    "$ref": "#/definitions/OnetimeUpgradeInfo",
                    "description": "The details of the Collector's automatic downgrade schedule, if one exists"
                },
                "onetimeUpgradeInfo": {
                    "$ref": "#/definitions/OnetimeUpgradeInfo",
                    "description": "The details of the Collector's one time upgrade, if one has been scheduled"
                },
                "platform": {
                    "description": "The OS of the Collector device (e.g. Linux, Windows)",
                    "readOnly": true,
                    "type": "string"
                },
                "predefinedConfig": {
                    "description": "Collector configurations",
                    "readOnly": true,
                    "type": "object"
                },
                "previousVersion": {
                    "description": "The previous version of the collector, used for downgrading",
                    "readOnly": true,
                    "type": "string"
                },
                "resendIval": {
                    "description": "The interval, in minutes, after which alert notifications for the Collector will be resent",
                    "example": 15,
                    "format": "int32",
                    "type": "integer"
                },
                "sbproxyConf": {
                    "description": "The Proxy's configuration",
                    "readOnly": true,
                    "type": "string"
                },
                "specifiedCollectorDeviceGroupId": {
                    "description": "The device group id when create a new collector device",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "description": "The registration status of the Collector. Acceptable values are: 0= unregistered, 1= registered, 2= stopped, 3= suspended",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "suppressAlertClear": {
                    "description": "Whether alert clear notifications are suppressed for the Collector",
                    "example": true,
                    "type": "boolean"
                },
                "updatedOn": {
                    "description": "The time that the Collector was last updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "updatedOnLocal": {
                    "description": "The time that the Collector was last updated, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "upTime": {
                    "description": "The time the Collector has been up, in seconds",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userChangeOn": {
                    "description": "The last time the Collector was updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userChangeOnLocal": {
                    "description": "The last time the Collector was updated, in the account time zone",
                    "readOnly": true,
                    "type": "string"
                },
                "userPermission": {
                    "description": "The permission level of the user that made the API request to get Collector information",
                    "readOnly": true,
                    "type": "string"
                },
                "userVisibleHostsNum": {
                    "description": "The number of devices monitored by the Collector and visible to the user that made the query",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userVisibleWebsitesNum": {
                    "description": "The number of websites monitored by the Collector and visible to the user that made the query",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "watchdogConf": {
                    "description": "The Watchdog's configuration",
                    "readOnly": true,
                    "type": "string"
                },
                "watchdogUpdatedOn": {
                    "description": "The time that the Watchdog Services was last updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "watchdogUpdatedOnLocal": {
                    "description": "The time that the Collector Watchdog was last updated, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "websiteConf": {
                    "description": "Whether or not the device the Collector is installed on is enabled for fail over",
                    "readOnly": true,
                    "type": "string"
                },
                "wrapperConf": {
                    "description": "The java service wrapper's configuration",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CollectorAttribute": {
            "discriminator": "name",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "CollectorAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "collectorId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "collectorId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_collector"
        },
        "CollectorBase": {
            "properties": {
                "ackComment": {
                    "description": "The comment associated with the Collector acknowledgement (if it is in alert and acknowledged)",
                    "readOnly": true,
                    "type": "string"
                },
                "acked": {
                    "description": "Whether or not the Collector is currently acknowledged",
                    "readOnly": true,
                    "type": "boolean"
                },
                "ackedBy": {
                    "description": "The user that acknowledged the Collector (if it is in alert)",
                    "readOnly": true,
                    "type": "string"
                },
                "ackedOn": {
                    "description": "The epoch at which the Collector was acknowledged (if it is in alert)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "ackedOnLocal": {
                    "description": "The time that the Collector was acknowledged (if it is in alert), in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "arch": {
                    "description": "The collector architecture (Windows | Linux platform followed by 32 | 64 bit)",
                    "readOnly": true,
                    "type": "string"
                },
                "automaticUpgradeInfo": {
                    "$ref": "#/definitions/AutomaticUpgradeInfo",
                    "description": "The details of the Collector's automatic upgrade schedule, if one exists"
                },
                "backupAgentId": {
                    "description": "The Id of the backup Collector assigned to the Collector",
                    "example": 75,
                    "format": "int32",
                    "type": "integer"
                },
                "build": {
                    "description": "The Collector version",
                    "readOnly": true,
                    "type": "string"
                },
                "canDowngrade": {
                    "description": "Whether the collector can be downgraded to a lower version",
                    "readOnly": true,
                    "type": "boolean"
                },
                "canDowngradeReason": {
                    "description": "The reason why the collector can be downgraded",
                    "readOnly": true,
                    "type": "string"
                },
                "clearSent": {
                    "description": "Whether or not an alert clear notifcation has been sent for this Collector",
                    "readOnly": true,
                    "type": "boolean"
                },
                "collectorConf": {
                    "description": "The Collector's configuration file",
                    "readOnly": true,
                    "type": "string"
                },
                "collectorDeviceId": {
                    "description": "The device id of the collector device",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "collectorGroupId": {
                    "description": "The Id of the group the Collector is in",
                    "example": 10,
                    "format": "int32",
                    "type": "integer"
                },
                "collectorGroupName": {
                    "description": "The name of the group the Collector is in",
                    "readOnly": true,
                    "type": "string"
                },
                "collectorSize": {
                    "description": "The size of the collector",
                    "readOnly": true,
                    "type": "string"
                },
                "confVersion": {
                    "description": "The version of the agent.conf configuration file",
                    "readOnly": true,
                    "type": "string"
                },
                "createdOn": {
                    "description": "The time that the Collector was created, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "createdOnLocal": {
                    "description": "The time that the Collector was created, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "customProperties": {
                    "description": "The custom properties defined for the Collector",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The Collector's description",
                    "example": "Linux Collector",
                    "type": "string"
                },
                "ea": {
                    "description": "Whether the collector is in EA version",
                    "readOnly": true,
                    "type": "boolean"
                },
                "enableFailBack": {
                    "description": "Whether or not automatic failback is enabled for the Collector, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "enableFailOverOnCollectorDevice": {
                    "description": "Whether or not the device the Collector is installed on is enabled for fail over",
                    "example": true,
                    "type": "boolean"
                },
                "escalatingChainId": {
                    "description": "The Id of the escalation chain associated with this Collector",
                    "example": 80,
                    "format": "int32",
                    "type": "integer"
                },
                "hasFailOverDevice": {
                    "description": "Whether the collector has failover devices",
                    "readOnly": true,
                    "type": "boolean"
                },
                "hostname": {
                    "description": "The hostname of the device the Collector is installed on",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The id of the Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDT": {
                    "description": "The SDT status of the collector",
                    "readOnly": true,
                    "type": "boolean"
                },
                "isDown": {
                    "description": "Whether or not the Collector is currently down",
                    "readOnly": true,
                    "type": "boolean"
                },
                "lastSentNotificationOn": {
                    "description": "The time, in epoch format, that a notification was last sent for the Collector",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastSentNotificationOnLocal": {
                    "description": "The time that a notification was last sent for this Collector, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "needAutoCreateCollectorDevice": {
                    "description": "Whether to create a collector device when instance collector, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "netscanVersion": {
                    "description": "The Netscan version associated with the Collector",
                    "readOnly": true,
                    "type": "string"
                },
                "nextRecipient": {
                    "description": "The Id of the next recipient to which alert notifications will be sent",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nextUpgradeInfo": {
                    "$ref": "#/definitions/NextUpgradeInfo",
                    "description": "The details of the Collector's next upgrade, if one has been scheduled",
                    "readOnly": true
                },
                "numberOfHosts": {
                    "description": "The number of devices monitored by the Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numberOfInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "onetimeDowngradeInfo": {
                    "$ref": "#/definitions/OnetimeUpgradeInfo",
                    "description": "The details of the Collector's automatic downgrade schedule, if one exists"
                },
                "onetimeUpgradeInfo": {
                    "$ref": "#/definitions/OnetimeUpgradeInfo",
                    "description": "The details of the Collector's one time upgrade, if one has been scheduled"
                },
                "platform": {
                    "description": "The OS of the Collector device (e.g. Linux, Windows)",
                    "readOnly": true,
                    "type": "string"
                },
                "predefinedConfig": {
                    "description": "Collector configurations",
                    "readOnly": true,
                    "type": "object"
                },
                "previousVersion": {
                    "description": "The previous version of the collector, used for downgrading",
                    "readOnly": true,
                    "type": "string"
                },
                "resendIval": {
                    "description": "The interval, in minutes, after which alert notifications for the Collector will be resent",
                    "example": 15,
                    "format": "int32",
                    "type": "integer"
                },
                "sbproxyConf": {
                    "description": "The Proxy's configuration",
                    "readOnly": true,
                    "type": "string"
                },
                "specifiedCollectorDeviceGroupId": {
                    "description": "The device group id when create a new collector device",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "description": "The registration status of the Collector. Acceptable values are: 0= unregistered, 1= registered, 2= stopped, 3= suspended",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "suppressAlertClear": {
                    "description": "Whether alert clear notifications are suppressed for the Collector",
                    "example": true,
                    "type": "boolean"
                },
                "updatedOn": {
                    "description": "The time that the Collector was last updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "updatedOnLocal": {
                    "description": "The time that the Collector was last updated, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "upTime": {
                    "description": "The time the Collector has been up, in seconds",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userChangeOn": {
                    "description": "The last time the Collector was updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userChangeOnLocal": {
                    "description": "The last time the Collector was updated, in the account time zone",
                    "readOnly": true,
                    "type": "string"
                },
                "userPermission": {
                    "description": "The permission level of the user that made the API request to get Collector information",
                    "readOnly": true,
                    "type": "string"
                },
                "userVisibleHostsNum": {
                    "description": "The number of devices monitored by the Collector and visible to the user that made the query",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "watchdogConf": {
                    "description": "The Watchdog's configuration",
                    "readOnly": true,
                    "type": "string"
                },
                "watchdogUpdatedOn": {
                    "description": "The time that the Watchdog Services was last updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "watchdogUpdatedOnLocal": {
                    "description": "The time that the Collector Watchdog was last updated, in local time format",
                    "readOnly": true,
                    "type": "string"
                },
                "wrapperConf": {
                    "description": "The java service wrapper's configuration",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CollectorGroup": {
            "properties": {
                "autoBalance": {
                    "description": "if the collector is autoBalance set as true or false",
                    "type": "string"
                },
                "autoBalanceInstanceCountThreshold": {
                    "description": "threshold for instance count strategy to check if a collector has high load",
                    "format": "int32",
                    "type": "integer"
                },
                "autoBalanceStrategy": {
                    "description": "the auto balance strategy ",
                    "type": "string"
                },
                "createOn": {
                    "description": "The time at which the group was created, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "customProperties": {
                    "description": "The custom properties defined for the Collector group",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The description of the Collector Group",
                    "example": "Group for collectors dedicated to Network Devices",
                    "type": "string"
                },
                "id": {
                    "description": "The id of the Collector Group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the Collector Group",
                    "example": "Collector (Network Devices)",
                    "type": "string"
                },
                "numOfCollectors": {
                    "description": "The number of Collectors that belong to the group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userPermission": {
                    "description": "The permission level of the user that made the API request",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "CollectorGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/CollectorGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CollectorPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/CollectorBase"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CollectorSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "collectorDescription": {
                            "description": "The description of the collector that the SDT will be associated with",
                            "readOnly": true,
                            "type": "string"
                        },
                        "collectorId": {
                            "description": "The id of the collector that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "collectorId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "collectorsdt"
        },
        "CollectorVersion": {
            "properties": {
                "has32bitLinux": {
                    "description": "True if Linux collector available",
                    "readOnly": true,
                    "type": "boolean"
                },
                "has32bitWindows": {
                    "description": "True if Windows collector available",
                    "readOnly": true,
                    "type": "boolean"
                },
                "majorVersion": {
                    "description": "The collector major version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "mandatory": {
                    "description": "True if collector is a required release",
                    "readOnly": true,
                    "type": "boolean"
                },
                "minorVersion": {
                    "description": "The collector minor version",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "releaseEpoch": {
                    "description": "Release Epoch for official releases",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "stable": {
                    "description": "False for early release. True for general release",
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CollectorVersionPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/CollectorVersion"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ColorThreshold": {
            "properties": {
                "level": {
                    "format": "int32",
                    "type": "integer"
                },
                "relation": {
                    "type": "string"
                },
                "threshold": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "level",
                "relation",
                "threshold"
            ],
            "type": "object"
        },
        "ColumnHeader": {
            "properties": {
                "displayType": {
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "needForecast": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "unitLabel": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConversationFilter": {
            "properties": {
                "fromEndpoint": {
                    "type": "string"
                },
                "fromOperator": {
                    "type": "string"
                },
                "includeOrExclude": {
                    "type": "string"
                },
                "toEndpoint": {
                    "type": "string"
                },
                "toOperator": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Counter": {
            "properties": {
                "appliesTo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomFlexibleVirtualDataSourceEx": {
            "properties": {
                "aggregateFunction": {
                    "type": "string"
                },
                "consolidateFunction": {
                    "type": "string"
                },
                "customGraphId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "$ref": "#/definitions/GlobMatchToggle"
                },
                "deviceGroupFullPath": {
                    "$ref": "#/definitions/GlobMatchToggle"
                },
                "display": {
                    "$ref": "#/definitions/GraphDisplay"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instanceName": {
                    "$ref": "#/definitions/GlobMatchToggle"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "deviceDisplayName",
                "deviceGroupFullPath",
                "display",
                "instanceName",
                "name"
            ],
            "type": "object"
        },
        "CustomGraph": {
            "properties": {
                "aggregate": {
                    "description": "true: You can set this field to true to aggregate results into one line.\nfalse: Results will not be aggregated\nthe default value is true",
                    "type": "boolean"
                },
                "dataPoints": {
                    "description": "The datapoints added to the widget (note that a datapoint must be referenced in a graph line to be displayed)",
                    "items": {
                        "$ref": "#/definitions/CustomFlexibleVirtualDataSourceEx"
                    },
                    "type": "array"
                },
                "desc": {
                    "description": "Whether the top X are displayed (false) or the bottom X are displayed (true), the default value is true",
                    "type": "boolean"
                },
                "globalConsolidateFunction": {
                    "description": "The function for global consolidate",
                    "type": "string"
                },
                "id": {
                    "description": "The unique id of the custom graph displayed by this widget (not to be confused with the widget id)",
                    "format": "int32",
                    "type": "integer"
                },
                "maxValue": {
                    "description": "The maximum value that should be displayed on the y-axis",
                    "type": "object"
                },
                "minValue": {
                    "description": "The minimum value that should be displayed on the y-axis",
                    "type": "object"
                },
                "scaleUnit": {
                    "description": "The base scale unit (1000 or 1024)",
                    "format": "int32",
                    "type": "integer"
                },
                "topX": {
                    "description": "The number of lines to display for each configured datapoint",
                    "format": "int32",
                    "type": "integer"
                },
                "verticalLabel": {
                    "description": "The label that will be display along the y axis",
                    "type": "string"
                },
                "virtualDataPoints": {
                    "description": "The virtual datapoints added to the widget (note that a virtual datapoint must be referenced in a graph line to be displayed)",
                    "items": {
                        "$ref": "#/definitions/CustomVirtualDataPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "dataPoints"
            ],
            "type": "object"
        },
        "CustomGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "graphInfo": {
                            "$ref": "#/definitions/CustomGraph"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "cgraph"
        },
        "CustomReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "type": "string"
                        },
                        "macros": {
                            "items": {
                                "$ref": "#/definitions/Macro"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "word template"
        },
        "CustomVirtualDataPoint": {
            "properties": {
                "customGraphId": {
                    "format": "int32",
                    "type": "integer"
                },
                "display": {
                    "$ref": "#/definitions/GraphDisplay"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rpn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Dashboard": {
            "properties": {
                "description": {
                    "description": "The description of the dashboard",
                    "example": "Windows Servers Performance",
                    "type": "string"
                },
                "fullName": {
                    "description": "Full name of the dashboard, including group path",
                    "example": "a new group//Collector Health/",
                    "readOnly": true,
                    "type": "string"
                },
                "groupFullPath": {
                    "description": "The full path (excluding root group) of the group the dashboard belongs to",
                    "readOnly": true,
                    "type": "string"
                },
                "groupId": {
                    "description": "The id of the group the dashboard belongs to",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "groupName": {
                    "description": "The name of group where created dashboard will reside",
                    "example": "Server Dashboard",
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the dashboard",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the dashboard",
                    "example": "Default Device Group",
                    "type": "string"
                },
                "owner": {
                    "description": "This field will be empty unless the dashboard is a private dashboard, in which case the owner will be listed",
                    "type": "string"
                },
                "sharable": {
                    "description": "Whether or not the dashboard is sharable. This value will always be true unless the dashboard is a private dashboard",
                    "example": true,
                    "type": "boolean"
                },
                "template": {
                    "description": "The template which is used for import dashboard",
                    "type": "object"
                },
                "userPermission": {
                    "description": "The permission of the user that made the API call",
                    "readOnly": true,
                    "type": "string"
                },
                "widgetsConfig": {
                    "description": "Information about widget configuration used by the UI",
                    "type": "object"
                },
                "widgetTokens": {
                    "description": "If useDynamicWidget=true, this field must at least contain tokens defaultDeviceGroup and defaultServiceGroup",
                    "example": "\"widgetTokens\":[{\"name\":\"defaultDeviceGroup\",\"value\":\"*\"},{\"name\":\"defaultServiceGroup\",\"value\":\"*\"}]",
                    "items": {
                        "$ref": "#/definitions/WidgetToken"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "DashboardData": {
            "properties": {
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "sharable": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "userPermission": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DashboardGroup": {
            "properties": {
                "dashboards": {
                    "description": "The dashboards that belong to the group",
                    "items": {
                        "$ref": "#/definitions/DashboardData"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "description": {
                    "description": "This is a description of the dashboard group",
                    "example": "Servers in LA DataCenter",
                    "type": "string"
                },
                "fullPath": {
                    "description": "The full path of the dashboard group",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the dashboard group ",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the dashboard group",
                    "example": "LogicMonitor Dashboards",
                    "type": "string"
                },
                "numOfDashboards": {
                    "description": "The number of dashboards that belong to the Dashboard Group and any sub-groups",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectDashboards": {
                    "description": "The number of dashboards that belong directly to the Dashboard Group",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectSubGroups": {
                    "description": "The number of groups directly under the Dashboard Group",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "parentId": {
                    "description": "The Id of the parent dashboard group",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "template": {
                    "description": "The template which is used for import dashboard group",
                    "type": "object"
                },
                "userPermission": {
                    "description": "The permission of the user that made the API call",
                    "readOnly": true,
                    "type": "string"
                },
                "widgetTokens": {
                    "description": "The tokens assigned at the group level",
                    "items": {
                        "$ref": "#/definitions/WidgetToken"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "DashboardGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DashboardGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DashboardPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Dashboard"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DashboardReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dashboardGroupFullPath": {
                            "description": "The full path name of the group of the source dashboard",
                            "readOnly": true,
                            "type": "string"
                        },
                        "dashboardId": {
                            "description": "The id of the source dashboard for the report",
                            "format": "int32",
                            "type": "integer"
                        },
                        "dashboardName": {
                            "description": "The name of the source dashboard for the report",
                            "readOnly": true,
                            "type": "string"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "displayLink": {
                            "description": "Whether need to display a link to the real dashboard",
                            "type": "boolean"
                        },
                        "displayName": {
                            "description": "The name of the dashboard report",
                            "type": "string"
                        }
                    },
                    "required": [
                        "dashboardId",
                        "dateRange"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "dashboard"
        },
        "DataPoint": {
            "properties": {
                "alertBody": {
                    "type": "string"
                },
                "alertClearTransitionInterval": {
                    "format": "int32",
                    "type": "integer"
                },
                "alertExpr": {
                    "type": "string"
                },
                "alertExprNote": {
                    "type": "string"
                },
                "alertForNoData": {
                    "format": "int32",
                    "type": "integer"
                },
                "alertSubject": {
                    "type": "string"
                },
                "alertTransitionInterval": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataSourceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataType": {
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "maxDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxValue": {
                    "type": "string"
                },
                "minValue": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postProcessorMethod": {
                    "type": "string"
                },
                "postProcessorParam": {
                    "type": "string"
                },
                "rawDataFieldName": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer"
                },
                "userParam1": {
                    "type": "string"
                },
                "userParam2": {
                    "type": "string"
                },
                "userParam3": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "DataPumpCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "datapump"
        },
        "DataSource": {
            "properties": {
                "appliesTo": {
                    "description": "The Applies To for the LMModule",
                    "type": "string"
                },
                "auditVersion": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "autoDiscoveryConfig": {
                    "$ref": "#/definitions/AutoDiscoveryConfiguration"
                },
                "collectInterval": {
                    "format": "int32",
                    "type": "integer"
                },
                "collectMethod": {
                    "type": "string"
                },
                "collectorAttribute": {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                "dataPoints": {
                    "items": {
                        "$ref": "#/definitions/DataPoint"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The description for the LMModule",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enableAutoDiscovery": {
                    "type": "boolean"
                },
                "enableEriDiscovery": {
                    "type": "boolean"
                },
                "eriDiscoveryConfig": {
                    "$ref": "#/definitions/ScriptERIDiscoveryAttributeV2"
                },
                "eriDiscoveryInterval": {
                    "format": "int32",
                    "type": "integer"
                },
                "group": {
                    "description": "The group the LMModule is in",
                    "type": "string"
                },
                "hasMultiInstances": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "The ID of the LMModule",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "description": "The Tags for the LMModule",
                    "type": "string"
                },
                "technology": {
                    "description": "The Technical Notes for the LMModule",
                    "type": "string"
                },
                "version": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "collectInterval",
                "collectMethod",
                "collectorAttribute",
                "id",
                "name"
            ],
            "type": "object"
        },
        "DataSourceAttribute": {
            "properties": {
                "comment": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "DataSourceOverviewGraph": {
            "properties": {
                "aggregated": {
                    "type": "boolean"
                },
                "base1024": {
                    "type": "boolean"
                },
                "dataPoints": {
                    "items": {
                        "$ref": "#/definitions/OverviewGraphDataPoint"
                    },
                    "type": "array"
                },
                "displayPrio": {
                    "format": "int32",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "lines": {
                    "items": {
                        "$ref": "#/definitions/GraphLine"
                    },
                    "type": "array"
                },
                "maxValue": {
                    "type": "object"
                },
                "minValue": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "rigid": {
                    "type": "boolean"
                },
                "timeScale": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "verticalLabel": {
                    "type": "string"
                },
                "virtualDataPoints": {
                    "items": {
                        "$ref": "#/definitions/GraphVirtualDataPoint"
                    },
                    "type": "array"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DatasourceOverviewGraphPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DataSourceOverviewGraph"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DatasourcePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DataSource"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DataSourceUpdateReasonsPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/UpdateReason"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DaysUntilAlert": {
            "properties": {
                "forecastDay": {
                    "format": "int32",
                    "type": "integer"
                },
                "forecastPeriodInDays": {
                    "format": "int32",
                    "type": "integer"
                },
                "isWaitingForecastResults": {
                    "type": "boolean"
                },
                "severity": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Debug": {
            "properties": {
                "cmdContext": {
                    "description": "The session prefix name",
                    "type": "string"
                },
                "cmdline": {
                    "description": "The debug command to execute",
                    "type": "string"
                },
                "output": {
                    "description": "The value of the debug command",
                    "readOnly": true,
                    "type": "string"
                },
                "sessionId": {
                    "description": "The session id",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Device": {
            "properties": {
                "autoBalancedCollectorGroupId": {
                    "description": "The Auto Balanced Collector Group id. 0 means not monitored by ABCG",
                    "format": "int32",
                    "type": "integer"
                },
                "autoProperties": {
                    "description": "Any auto properties assigned to the device",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "autoPropsAssignedOn": {
                    "description": "The time, in epoch seconds format, that properties were first discovered for this device",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "autoPropsUpdatedOn": {
                    "description": "The time, in epoch seconds, that auto properties last ran and updated the properties table for this device",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "awsState": {
                    "description": "The AWS instance state (if applicable): 1 indicates that the instance is running, 2 indicates that the instance is stopped and 3 the instance is terminated",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "azureState": {
                    "description": "The GCP instance state (if applicable): 1 indicates that the instance is running, 2 indicates that the instance is stopped and 3 the instance is terminated.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "collectorDescription": {
                    "description": "The description/name of the collector for this device",
                    "readOnly": true,
                    "type": "string"
                },
                "createdOn": {
                    "description": "The time, in epoch seconds format, that the device was added to your LogicMonitor account",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "currentCollectorId": {
                    "description": "The id of the collector currently monitoring the device and discovering instances",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "customProperties": {
                    "description": "Any non-system properties (aside from system.categories) defined for this device",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "deletedTimeInMs": {
                    "description": "The time in milliseconds that the device has been dead for, or since the AWS device was filtered out",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "description": {
                    "description": "The device description",
                    "example": "This is a Cisco Router",
                    "type": "string"
                },
                "deviceType": {
                    "description": "The type of device: 0 indicates a regular device, 2 indicates an AWS device, 4 indicates an Azure device",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                },
                "disableAlerting": {
                    "description": "Indicates whether alerting is disabled (true) or enabled (false) for this device",
                    "example": true,
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The display name of the device",
                    "example": "Cisco Router",
                    "type": "string"
                },
                "enableNetflow": {
                    "description": "Indicates whether Netflow is enabled (true) or disabled (false) for the device",
                    "example": true,
                    "type": "boolean"
                },
                "gcpState": {
                    "description": "The Azure instance state (if applicable): 1 indicates that the instance is running, 2 indicates that the instance is stopped and 3 the instance is terminated.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "hostGroupIds": {
                    "description": "The Id(s) of the groups the device is in, where multiple group ids are comma separated",
                    "example": "16,4,3",
                    "type": "string"
                },
                "hostStatus": {
                    "description": "The status of this device, where possible statuses are normal, dead and dead-collector",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the device",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inheritedProperties": {
                    "description": "Any properties inherit from parents",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "lastDataTime": {
                    "description": "The last time, in epoch seconds, that the device received Netflow data",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastRawdataTime": {
                    "description": "The last time, in epoch seconds, that raw Netflow data was reported",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "link": {
                    "description": "The URL link associated with the device",
                    "example": "www.ciscorouter.com",
                    "type": "string"
                },
                "name": {
                    "description": "The host name or IP address of the device",
                    "example": "Main Collector",
                    "type": "string"
                },
                "netflowCollectorDescription": {
                    "description": "The description/name of the netflow collector for this device",
                    "readOnly": true,
                    "type": "string"
                },
                "netflowCollectorGroupId": {
                    "description": "The id of the Collector Group associated with the device's netflow collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "netflowCollectorGroupName": {
                    "description": "The name of the Collector Group associated with the device's netflow collector",
                    "readOnly": true,
                    "type": "string"
                },
                "netflowCollectorId": {
                    "description": "The Id of the netflow collector associated with the device",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "preferredCollectorGroupId": {
                    "description": "The id of the Collector Group associated with the device's preferred collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "preferredCollectorGroupName": {
                    "description": "The name of the Collector Group associated with the device's preferred collector",
                    "readOnly": true,
                    "type": "string"
                },
                "preferredCollectorId": {
                    "description": "The Id of the preferred collector assigned to monitor the device",
                    "example": 2,
                    "format": "int32",
                    "type": "integer"
                },
                "relatedDeviceId": {
                    "description": "The Id of the AWS EC2 instance related to this device, if one exists in the LogicMonitor account. This value defaults to -1, which indicates that there are no related devices",
                    "example": -1,
                    "format": "int32",
                    "type": "integer"
                },
                "scanConfigId": {
                    "description": "The Id of the netscan configuration which was used to discover this device. 0 indicates that the device was not discovered by a scan",
                    "example": 0,
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "systemProperties": {
                    "description": "Any system properties (aside from system.categories) defined for this device",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "toDeleteTimeInMs": {
                    "description": "The number of milliseconds until the device will be automatically deleted from your LogicMonitor account (a value of zero indicates that a future delete time/date has not been scheduled)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "updatedOn": {
                    "description": "The time, in epoch seconds format, that the device was last updated",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "upTimeInSeconds": {
                    "description": "The uptime of the device in seconds. This value will always be the largest value reported by the following datasources:\nHost Uptime-\nSNMPUptime-\nSNMP_Engine_Uptime-\nWinSystemUptime-\nNimbleUptime-",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "userPermission": {
                    "description": "The read and/or write permissions for this device that are granted to the user who made the API request",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "name",
                "preferredCollectorId"
            ],
            "type": "object"
        },
        "DeviceBatchJobSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "batchJobName": {
                            "description": "The name of the batchjob that the SDT will apply to",
                            "type": "string"
                        },
                        "deviceBatchJobId": {
                            "description": "The id of the device batchjob that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceDisplayName": {
                            "description": "The display name of the device associated with the batchjob that the SDT will apply to",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "The id of the device associated with the batchjob that the SDT will apply to",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicebatchjobsdt"
        },
        "DeviceClusterAlertConfig": {
            "properties": {
                "alertExpr": {
                    "description": "The expression that indicates the number of objects (devices or instances) that need to be in alert to trigger the cluster alert. E.g. > 5",
                    "example": ">=2",
                    "type": "string"
                },
                "countBy": {
                    "description": "host | instance - Whether the cluster alert is based on an alert count across devices or instances",
                    "example": "host",
                    "type": "string"
                },
                "dataPointDescription": {
                    "description": "The description of the dataPoint you want to base the cluster alert on",
                    "example": "Inbound throughput, in megabits per second.\n\nBest choice for reports, etc.",
                    "readOnly": true,
                    "type": "string"
                },
                "dataPointId": {
                    "description": "The id of the dataPoint you want to base the cluster alert on",
                    "example": 2016,
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointName": {
                    "description": "The name of the dataPoint you want to base the cluster alert on",
                    "example": "InMbps",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceDisplayName": {
                    "description": "The display name of the dataSource you want to base the cluster alert on",
                    "example": "Interfaces (64 bit)-",
                    "type": "string"
                },
                "dataSourceId": {
                    "description": "The id of the dataSource you want to base the cluster alert on",
                    "example": 396,
                    "format": "int32",
                    "type": "integer"
                },
                "disableAlerting": {
                    "description": "Whether or not alerting will be disabled",
                    "example": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "The id of the cluster alert configuration",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "minAlertLevel": {
                    "description": "The alert level that must be present for the devices or instances to trigger the cluster alert. Acceptable values are: 2, 3, 4",
                    "example": 4,
                    "format": "int32",
                    "type": "integer"
                },
                "suppressIndAlert": {
                    "description": "Whether or not alerting will be suppressed for individual alerts, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "thresholdType": {
                    "description": "whether the alert expression should be evaluated as a total number of devices or instances (absolute) or as a percentage of devices or instances (percentage). Acceptable values are: absolute, percentage",
                    "example": "absolute",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceClusterAlertConfigPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceClusterAlertConfig"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceClusterAlertDefSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "dataSourceName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "deviceClusterAlertDefId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceGroupFullPath": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "deviceGroupId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "required": [
                        "deviceClusterAlertDefId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "deviceclusteralertdefsdt"
        },
        "DeviceDataSource": {
            "properties": {
                "alertDisableStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "alertingDisabledOn": {
                    "$ref": "#/definitions/TreeNode",
                    "readOnly": true
                },
                "alertStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "alertStatusPriority": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "assignedOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "autoDiscovery": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "collectMethod": {
                    "type": "string"
                },
                "createdOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataSourceDescription": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataSourceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceType": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "graphs": {
                    "items": {
                        "$ref": "#/definitions/DeviceDatasourceGraph"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "groupName": {
                    "readOnly": true,
                    "type": "string"
                },
                "groupsDisabledThisSource": {
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "instanceAutoGroupEnabled": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "instanceNumber": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "isMultiple": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "monitoringInstanceNumber": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nextAutoDiscoveryOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "overviewGraphs": {
                    "items": {
                        "$ref": "#/definitions/DeviceDatasourceGraph"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "sdtAt": {
                    "readOnly": true,
                    "type": "string"
                },
                "sdtStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stopMonitoring": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "updatedOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceAssociated": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "hasActiveInstance": {
                    "type": "boolean"
                },
                "hasMore": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "instance": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceAssociatedInstance"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceAssociatedInstance": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceAssociatedPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceAssociated"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceData": {
            "properties": {
                "dataPoints": {
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "dataSourceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "instances": {
                    "additionalProperties": {
                        "$ref": "#/definitions/RawDataValues"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "nextPageParams": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceDatasourceGraph": {
            "properties": {
                "displayPrio": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "title": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstance": {
            "properties": {
                "autoProperties": {
                    "description": "Any instance level auto properties assigned to the instance",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "customProperties": {
                    "description": "Any instance level properties assigned to the instance",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "dataSourceId": {
                    "description": "The id of the datasource definition that the instance represents",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataSourceType": {
                    "description": "The type of LogicModule, e.g. DS (datasource)",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "The description of the datasource instance",
                    "example": "Ping Test",
                    "type": "string"
                },
                "deviceDataSourceId": {
                    "description": "The id of the unique device-datasource the instance is associated with",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "description": "The display name of the device the datasource instance is associated with",
                    "readOnly": true,
                    "type": "string"
                },
                "deviceId": {
                    "description": "The id of the device the datasource instance is associated with",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "disableAlerting": {
                    "description": "Whether or not alerting is disabled for the instance",
                    "example": true,
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The instance alias. This is the descriptive name of the instance, and should be unique for the device/datasource combination",
                    "example": "Ping",
                    "type": "string"
                },
                "groupId": {
                    "description": "The id of the instance group associated with the datasource instance",
                    "example": 211,
                    "format": "int32",
                    "type": "integer"
                },
                "groupName": {
                    "description": "The name of the instance group associated with the datasource instance",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the datasource instance",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lockDescription": {
                    "description": "Whether or not Active Discovery is enabled, and thus whether or not the instance description is editable",
                    "example": true,
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the datasource instance, in the format of: datasourceName-instanceAlias",
                    "readOnly": true,
                    "type": "string"
                },
                "stopMonitoring": {
                    "description": "Whether or not monitoring is disabled for the instance",
                    "example": true,
                    "type": "boolean"
                },
                "systemProperties": {
                    "description": "Any instance level system properties assigned to the instance",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "wildValue": {
                    "description": "The variable part of the instance, used to query data from a device. For example, variable part of the SNMP OID tree. This value must be unique for the device/datasource combination, unless two-dimensional active discovery is used",
                    "example": "1",
                    "type": "string"
                },
                "wildValue2": {
                    "description": "Only used for two dimensional active discovery. When used, during Active Discovery runs, the token ##WILDVALUE## is replaces with the value of ALIAS and the token ##WILDVALUE2## is replaced with the value of the second part alias. This value must be unique for the device/datasource/WILDVALUE combination",
                    "example": "1",
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "wildValue"
            ],
            "type": "object"
        },
        "DeviceDataSourceInstanceAlertSetting": {
            "properties": {
                "alertClearInterval": {
                    "description": "The interval of alert clear transition",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "alertExpr": {
                    "description": "The thresholds that should be associated with the datapoint. Note that you need to have a space between the operator and each threshold (e.g. > 1 2 3)",
                    "example": ">= 70 90 95",
                    "type": "string"
                },
                "alertExprNote": {
                    "description": "The note associated with the current alert threshold settings",
                    "example": "Router 1 Ping Check",
                    "type": "string"
                },
                "alertingDisabledOn": {
                    "description": "The datapoint is effected alert disabled by which group",
                    "readOnly": true,
                    "type": "string"
                },
                "alertTransitionInterval": {
                    "description": "The interval of alert transition",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointDescription": {
                    "description": "The description of the datapoint the alert settings apply to",
                    "readOnly": true,
                    "type": "string"
                },
                "dataPointId": {
                    "description": "The id of the Datapoint alert settings apply to",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointName": {
                    "description": "The name of the datapoint the alert settings apply to",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceInstanceAlias": {
                    "description": "The alias (name) of the DataSource instance the alert settings apply to",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceInstanceId": {
                    "description": "The id of the DataSource instance alert settings apply to",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceGroupFullPath": {
                    "description": "The full path of the device group",
                    "readOnly": true,
                    "type": "string"
                },
                "deviceGroupId": {
                    "description": "The ID of the device group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "disableAlerting": {
                    "description": "Whether or not alerting will be disabled for the datapoint",
                    "example": true,
                    "type": "boolean"
                },
                "disableDpAlertHostGroups": {
                    "description": "The group full path lists who disable alert for this datapoint on devicegroup level",
                    "readOnly": true,
                    "type": "string"
                },
                "globalAlertExpr": {
                    "description": "The global alert expression for this datapoint",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The id of this alert setting",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "parentDeviceGroupAlertExprList": {
                    "description": "Device group alert expression list base on the priority. The first is the highest priority and effected on this instance",
                    "items": {
                        "$ref": "#/definitions/DeviceGroupAlertThresholdInfo"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceAlertSettingPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceConfig": {
            "properties": {
                "alerts": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstanceConfigAlert"
                    },
                    "type": "array"
                },
                "changeStatus": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "configErrMsg": {
                    "type": "string"
                },
                "configStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataSourceName": {
                    "type": "string"
                },
                "deltaConfig": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstanceConfigDiff"
                    },
                    "type": "array"
                },
                "deviceDataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "type": "string"
                },
                "deviceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "instanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "instanceName": {
                    "type": "string"
                },
                "pollTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceConfigAlert": {
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "alertLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "alertSummary": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceConfigDiff": {
            "properties": {
                "content": {
                    "type": "string"
                },
                "rowNo": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceDatasourceInstanceConfigPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstanceConfig"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceData": {
            "properties": {
                "dataSourceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "nextPageParams": {
                    "readOnly": true,
                    "type": "string"
                },
                "time": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceGroup": {
            "properties": {
                "createOn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "description": {
                    "description": "The description of the datasource instance group",
                    "example": "Test the availability of HQ",
                    "type": "string"
                },
                "deviceDataSourceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the datasource instance group",
                    "example": "Ping Checks at HQ",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "DeviceDatasourceInstanceGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceGroupSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "dataSourceName": {
                            "type": "string"
                        },
                        "deviceDataSourceId": {
                            "description": "The id of the device datasource instance group that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceDataSourceInstanceGroupId": {
                            "description": "The name of the device datasource instance group that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceDataSourceInstanceGroupName": {
                            "description": "The name of the instance group",
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "description": "The name of the device that the SDT will be associated with",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "The id of the device that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicedatasourceinstancegroupsdt"
        },
        "DeviceDatasourceInstancePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSourceInstance"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceInstanceSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "dataSourceInstanceId": {
                            "description": "The id of the datasource instance that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "dataSourceInstanceName": {
                            "description": "The name of the datasource instance that the SDT will be associated with",
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "description": "The name of the device that the SDT will be associated with",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "The id of the device that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DeviceDatasourcePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceDataSource"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceDataSourceSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "dataSourceName": {
                            "description": "The name of the datasource that the SDT will apply to",
                            "type": "string"
                        },
                        "deviceDataSourceId": {
                            "description": "The id of the device datasource that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceDisplayName": {
                            "description": "The display name of the device associated with the datasource that the SDT will apply to",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "The id of the device associated with the datasource that the SDT will apply to",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicedatasourcesdt"
        },
        "DeviceDataSourceSDTHistoryPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDTHistory"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceEventSourceSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "description": "The display name of the device associated with the eventsource that the SDT will apply to",
                            "type": "string"
                        },
                        "deviceEventSourceId": {
                            "description": "The id of the device eventsource that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceId": {
                            "description": "The id of the device associated with the eventsource that the SDT will apply to",
                            "format": "int32",
                            "type": "integer"
                        },
                        "eventSourceName": {
                            "description": "The name of the eventsource that the SDT will apply to",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "deviceeventsourcesdt"
        },
        "DeviceGroup": {
            "properties": {
                "appliesTo": {
                    "description": "The Applies to custom query for this group (only for dynamic groups)",
                    "example": "isLinux()",
                    "type": "string"
                },
                "awsRegionsInfo": {
                    "description": "The number of instances in each AWS region (only applies to AWS groups)",
                    "readOnly": true,
                    "type": "string"
                },
                "awsTestResult": {
                    "$ref": "#/definitions/AwsAccountTestResult",
                    "description": "The String result returned by the transaction that tests the AWS credentials associated with the AWS group",
                    "readOnly": true
                },
                "awsTestResultCode": {
                    "description": "The Status code result returned by the transaction that tests the AWS credentials associated with the AWS group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "azureRegionsInfo": {
                    "description": "The number of instances in each Azure region (only applies to Azure groups)",
                    "readOnly": true,
                    "type": "string"
                },
                "azureTestResult": {
                    "$ref": "#/definitions/AzureAccountTestResult",
                    "description": "The String result returned by the transaction that tests the Azure credentials associated with the Azure group",
                    "readOnly": true
                },
                "azureTestResultCode": {
                    "description": "The Status code result returned by the transaction that tests the Azure credentials associated with the Azure group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "createdOn": {
                    "description": "The time, in epoch seconds format, that the device group was created",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "customProperties": {
                    "description": "The properties associated with this device group",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "defaultCollectorDescription": {
                    "description": "The description of the default collector assigned to the device group",
                    "readOnly": true,
                    "type": "string"
                },
                "defaultCollectorId": {
                    "description": "The Id of the default collector assigned to the device group",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "The description of the device group",
                    "example": "Linux Servers",
                    "type": "string"
                },
                "disableAlerting": {
                    "description": "Indicates whether alerting is disabled (true) or enabled (false) for this device group",
                    "example": true,
                    "type": "boolean"
                },
                "effectiveAlertEnabled": {
                    "description": "Whether or not alerting is effectively disabled for this device group (alerting may be disabled at a higher level, e.g. parent group)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "enableNetflow": {
                    "description": "Indicates whether Netflow is enabled (true) or disabled (false) for the device group, the default value is true",
                    "example": "true",
                    "type": "boolean"
                },
                "extra": {
                    "description": "The extra setting for cloud group",
                    "type": "object"
                },
                "fullPath": {
                    "description": "The full path of the device group (i.e. if the group 'Dev' is under a parent group named 'Production', the fullPath would be 'Production/Dev'",
                    "readOnly": true,
                    "type": "string"
                },
                "gcpRegionsInfo": {
                    "readOnly": true,
                    "type": "string"
                },
                "gcpTestResult": {
                    "$ref": "#/definitions/GcpAccountTestResult",
                    "description": "The result returned by the transaction that tests the GCP credentials associated with the GCP group",
                    "readOnly": true
                },
                "gcpTestResultCode": {
                    "description": "The Status code result returned by the transaction that tests the GCP credentials associated with the GCP group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "groupStatus": {
                    "description": "normal | dead \nThe status of this device group, where possible statuses are normal and dead. A group with a status of dead may indicate that one or more devices are dead within the group",
                    "readOnly": true,
                    "type": "string"
                },
                "groupType": {
                    "description": "The type of device group: normal and dynamic device groups will have groupType=Normal, and AWS groups will have a groupType value of AWS/SERVICE (e.g. AWS/S3)",
                    "example": "Normal",
                    "type": "string"
                },
                "hasNetflowEnabledDevices": {
                    "description": "Whether if any Netflow enabled devices in this device group",
                    "readOnly": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "The id of the device group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the device group",
                    "example": "Linux Servers",
                    "type": "string"
                },
                "numOfAWSDevices": {
                    "description": "The number of AWS devices that belong to this device group (includes AWS devices in sub groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfAzureDevices": {
                    "description": "The number of Azure devices that belong to this device group (includes Azure devices in sub groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectDevices": {
                    "description": "The number of AWS and normal devices that belong only to this device group (doesn't include devices in sub-groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectSubGroups": {
                    "description": "The number of sub-groups that belong only to this device group (doesn't include groups under sub-groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfGcpDevices": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfHosts": {
                    "description": "The number of total devices, including both AWS and normal devices, that belong to this device group (includes normal devices in sub groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "parentId": {
                    "description": "The id of the parent group for this device group (the root device group has an Id of 1)",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "subGroups": {
                    "description": "The child device groups within this device group",
                    "items": {
                        "$ref": "#/definitions/DeviceGroupData"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "userPermission": {
                    "description": "The permissions for the device group that are granted to the user that made this API request",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "DeviceGroupAlertThresholdInfo": {
            "properties": {
                "alertEnabled": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "alertExpr": {
                    "readOnly": true,
                    "type": "string"
                },
                "groupFullPath": {
                    "readOnly": true,
                    "type": "string"
                },
                "groupId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userPermission": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceGroupData": {
            "properties": {
                "appliesTo": {
                    "description": "The Applies to custom query for this group (only for dynamic groups)",
                    "readOnly": true,
                    "type": "string"
                },
                "awsRegionsInfo": {
                    "description": "The number of instances in each AWS region (only applies to AWS groups)",
                    "readOnly": true,
                    "type": "string"
                },
                "azureRegionsInfo": {
                    "description": "The number of instances in each Azure region (only applies to Azure groups)",
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "description": "The description of the device group",
                    "readOnly": true,
                    "type": "string"
                },
                "fullPath": {
                    "description": "The full path of the device group (i.e. if the group 'Dev' is under a parent group named 'Production', the fullPath would be 'Production/Dev'",
                    "readOnly": true,
                    "type": "string"
                },
                "gcpRegionsInfo": {
                    "readOnly": true,
                    "type": "string"
                },
                "groupType": {
                    "description": "The type of device group: normal and dynamic device groups will have groupType=Normal, and AWS groups will have a groupType value of AWS/SERVICE (e.g. AWS/S3)",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "description": "The id of the device group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the device group",
                    "readOnly": true,
                    "type": "string"
                },
                "numOfDirectDevices": {
                    "description": "The number of AWS and normal devices that belong only to this device group (doesn't include devices in sub-groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectSubGroups": {
                    "description": "The number of sub-groups that belong only to this device group (doesn't include groups under sub-groups)",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfHosts": {
                    "description": "The number of total devices, including both AWS and normal devices, that belong to this device group (includes normal devices in sub groups)",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "userPermission": {
                    "description": "The permissions for the device group that are granted to the user that made this API request",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceGroupDataSource": {
            "properties": {
                "dataSourceDisplayName": {
                    "description": "The Display Name of the DataSource",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceGroupName": {
                    "description": "The DataSource Group name",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceId": {
                    "description": "The ID of the DataSource",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataSourceName": {
                    "description": "The Name of the DataSource",
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceType": {
                    "description": "The Type of the DataSource",
                    "readOnly": true,
                    "type": "string"
                },
                "deviceGroupId": {
                    "description": "The ID of the Device Group for the DataSource",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "disableAlerting": {
                    "description": "Boolean flag for enabling/disabling alerting for DataSource",
                    "readOnly": true,
                    "type": "boolean"
                },
                "stopMonitoring": {
                    "description": "Boolean flag for enabling/disabling monitoring of DataSource",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeviceGroupDataSourceAlertConfig": {
            "properties": {
                "datasourceType": {
                    "readOnly": true,
                    "type": "string"
                },
                "dpConfig": {
                    "items": {
                        "$ref": "#/definitions/DeviceGroupDataSourceDataPointConfig"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceGroupDataSourceDataPointConfig": {
            "properties": {
                "alertExpr": {
                    "type": "string"
                },
                "alertExprNote": {
                    "type": "string"
                },
                "dataPointDescription": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "disableAlerting": {
                    "type": "boolean"
                },
                "globalAlertExpr": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "alertExpr",
                "dataPointId",
                "dataPointName"
            ],
            "type": "object"
        },
        "DeviceGroupDatasourcePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceGroupDataSource"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceGroupSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "dataSourceId": {
                            "description": "The id of the datasource that this SDT will be associated with, for the specified group. dataSourceId 0 indicates all datasources",
                            "format": "int32",
                            "type": "integer"
                        },
                        "dataSourceName": {
                            "description": "The name of the datasource that this SDT will be associated with, for the specified group. dataSourceName \"All\" indicates all datasources",
                            "type": "string"
                        },
                        "deviceGroupFullPath": {
                            "description": "The full path of the device group that this SDT will be associated with",
                            "type": "string"
                        },
                        "deviceGroupId": {
                            "description": "The id of the device group that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicegroupsdt"
        },
        "DeviceGroupSDTHistoryPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDTHistory"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceInstanceData": {
            "properties": {
                "dataSourceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "errMsg": {
                    "readOnly": true,
                    "type": "string"
                },
                "instanceId": {
                    "readOnly": true,
                    "type": "string"
                },
                "nextPageParams": {
                    "readOnly": true,
                    "type": "string"
                },
                "time": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceInstanceDataPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/DeviceInstanceData"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceInstances": {
            "properties": {
                "instanceIds": {
                    "description": "the ids of the instances, separated by commas",
                    "example": "1,2,3,4,5",
                    "type": "string"
                }
            },
            "required": [
                "instanceIds"
            ],
            "type": "object"
        },
        "DeviceNOCItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/NOCItemBase"
                },
                {
                    "properties": {
                        "dataPointName": {
                            "type": "string"
                        },
                        "dataSourceDisplayName": {
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "deviceGroupFullPath": {
                            "type": "string"
                        },
                        "groupBy": {
                            "type": "string"
                        },
                        "instanceName": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "dataPointName",
                        "dataSourceDisplayName",
                        "deviceDisplayName",
                        "deviceGroupFullPath",
                        "instanceName",
                        "name"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "device"
        },
        "DevicePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Device"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "description": "The name of the device that this SDT will be associated with",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "The id of the device that the SDT will be associated with",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicesdt"
        },
        "DeviceSDTHistoryPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDTHistory"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceSLAWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "bottomLabel": {
                            "description": "The services that should be used to compute the SLA, where each service should include serviceGroup and service",
                            "type": "string"
                        },
                        "colorThresholds": {
                            "description": "The threshold of color changes",
                            "items": {
                                "$ref": "#/definitions/ColorThreshold"
                            },
                            "type": "array"
                        },
                        "daysInWeek": {
                            "description": "The days that SLA should be computed for, separated by commas. 1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, 5=Thursday, 6=Friday, 7=Saturday.",
                            "type": "string"
                        },
                        "displayType": {
                            "description": "Whether or not selected metrics should be combined into one number (displayType:0) or should be displayed individually, up to four metrics (displayType:1)",
                            "format": "int32",
                            "type": "integer"
                        },
                        "metrics": {
                            "description": "The metrics (datapoints) that should be used to compute the SLA, where each service should include groupName (can be *), deviceName (can be *), dataSourceId or dataSourceFullName, instances (can be *), metric (datapoint), threshold, and exclusionSDTType (empty string means SDT periods will not be excluded, \"group\" means SDT periods at the device group level will be excluded, and \"device\" means SDT periods at the device level will be excluded)",
                            "items": {
                                "$ref": "#/definitions/SlaMetric"
                            },
                            "type": "array"
                        },
                        "periodInOneDay": {
                            "description": "The period during the selected days that the SLA should be computed for. * = all day, or a time range can be specified in the format of \"hh:mm TO hh:mm\", e.g. \"01:15 TO 17:15\"",
                            "type": "string"
                        },
                        "timezone": {
                            "description": "The specific timezone for the widget",
                            "type": "string"
                        },
                        "topX": {
                            "description": "Top list size for each point, 1 means aggregate",
                            "format": "int32",
                            "type": "integer"
                        },
                        "unmonitoredTimeType": {
                            "description": "How no data should be treated: 0 = unmonitored time will be ignored & subtracted from the total possible time, 1 = unmonitored time will be subtracted from uptime and counted as a violation, 2 = unmonitored time will be added to uptime and counted as available",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "metrics"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicesla"
        },
        "DeviceSLAWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "resultList": {
                            "items": {
                                "$ref": "#/definitions/ResultItem"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicesla"
        },
        "DeviceStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "deviceId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "deviceId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicestatus"
        },
        "DNSCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "dns"
        },
        "DummyAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "generateCount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "getGenerateCount2": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "maxNumber": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "generateCount",
                        "getGenerateCount2",
                        "maxNumber"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_dummy"
        },
        "DynamicColumn": {
            "properties": {
                "isHidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DynamicTableWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "columns": {
                            "items": {
                                "$ref": "#/definitions/DynamicTableWidgetColumn"
                            },
                            "type": "array"
                        },
                        "dataSourceFullName": {
                            "description": "The full name of the selected datasource",
                            "readOnly": true,
                            "type": "string"
                        },
                        "dataSourceId": {
                            "description": "The id of the selected datasource",
                            "format": "int32",
                            "type": "integer"
                        },
                        "forecast": {
                            "$ref": "#/definitions/TableWidgetForecastConfiguration"
                        },
                        "rows": {
                            "items": {
                                "$ref": "#/definitions/DynamicTableWidgetRow"
                            },
                            "type": "array"
                        },
                        "sortOrder": {
                            "type": "string"
                        },
                        "topX": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "columns",
                        "dataSourceId",
                        "rows"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "dynamictable"
        },
        "DynamicTableWidgetColumn": {
            "properties": {
                "colorThresholds": {
                    "description": "The threshold of color changes",
                    "items": {
                        "$ref": "#/definitions/ColorThreshold"
                    },
                    "type": "array"
                },
                "columnName": {
                    "description": "The name for the column",
                    "type": "string"
                },
                "dataPointId": {
                    "description": "The id of the datapoint",
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "description": "The name of the datapoint",
                    "readOnly": true,
                    "type": "string"
                },
                "displayType": {
                    "description": "The display type, it includes three options: raw|percent|colorBar",
                    "type": "string"
                },
                "enableForecast": {
                    "description": "Whether or not forecasting is enabled",
                    "type": "boolean"
                },
                "maxValue": {
                    "description": "The maximum value of the table widget",
                    "format": "double",
                    "type": "number"
                },
                "minValue": {
                    "description": "The minimum value of the table widget",
                    "format": "double",
                    "type": "number"
                },
                "roundingDecimal": {
                    "description": "The number of decimal points to round the value to. Options are 0, 1 and 2",
                    "format": "int32",
                    "type": "integer"
                },
                "rpn": {
                    "description": "The expression in this field will be performed on the datapoint. The Column name should be referenced as the datapoint",
                    "type": "string"
                },
                "unitLabel": {
                    "description": "The unit label",
                    "type": "string"
                }
            },
            "required": [
                "columnName",
                "dataPointId"
            ],
            "type": "object"
        },
        "DynamicTableWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "columnHeaders": {
                            "items": {
                                "$ref": "#/definitions/ColumnHeader"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "rows": {
                            "items": {
                                "$ref": "#/definitions/RowData"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "dynamictable"
        },
        "DynamicTableWidgetRow": {
            "properties": {
                "deviceDisplayName": {
                    "description": "The display name of the device selected for the row",
                    "readOnly": true,
                    "type": "string"
                },
                "groupFullPath": {
                    "description": "The full path of the group selected for the row",
                    "readOnly": true,
                    "type": "string"
                },
                "instanceName": {
                    "description": "The instances for each column of the row",
                    "readOnly": true,
                    "type": "string"
                },
                "label": {
                    "description": "The label for the row",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EC2AutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "accessKeyId": {
                            "type": "string"
                        },
                        "secretAccessKey": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "accessKeyId",
                        "secretAccessKey"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_ec2"
        },
        "Ec2DDR": {
            "properties": {
                "assignment": {
                    "items": {
                        "$ref": "#/definitions/Assignment"
                    },
                    "type": "array"
                },
                "changeName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Ec2Netscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "accessibility": {
                            "description": "Which IP the EC2 instance should be monitored with for nec2 scans: private or public",
                            "example": "private",
                            "type": "string"
                        },
                        "credentials": {
                            "$ref": "#/definitions/EC2NetscanPolicyCredential",
                            "description": "The credentials to be used for the scan"
                        },
                        "ddr": {
                            "$ref": "#/definitions/Ec2DDR"
                        },
                        "deadOperation": {
                            "description": "How dead EC2 instances should be handled for nec2 scans. Must be Manually",
                            "example": "MANUALLY",
                            "type": "string"
                        },
                        "ports": {
                            "$ref": "#/definitions/NetscanPorts"
                        }
                    },
                    "required": [
                        "accessibility",
                        "credentials"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "nec2"
        },
        "EC2NetscanPolicyCredential": {
            "properties": {
                "custom": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom credentials that should be used for this scan",
                    "example": "[{\"snmp.community\":\"test\"}]",
                    "type": "object"
                },
                "deviceGroupId": {
                    "description": "The ID of the device group that credentials should be inherited from, for this scan",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "deviceGroupName": {
                    "description": "The name of the device group that credentials should be inherited from, for this scan",
                    "example": "Network Devices",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EC2ScheduledEventAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_awsec2scheduledevents"
        },
        "EchoEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "echo"
        },
        "EndpointPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/NetflowEndpoint"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EntityProperty": {
            "properties": {
                "inheritList": {
                    "items": {
                        "$ref": "#/definitions/InheritanceProp"
                    },
                    "type": "array"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ErrorResponse": {
            "properties": {
                "errorCode": {
                    "description": "The error code",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "errorDetail": {
                    "description": "The error detail",
                    "readOnly": true,
                    "type": "object"
                },
                "errorMessage": {
                    "description": "The error message",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EscalatingChain": {
            "properties": {
                "ccDestinations": {
                    "items": {
                        "$ref": "#/definitions/Recipient"
                    },
                    "type": "array"
                },
                "description": {
                    "example": "For alerts escalated to the NOC Team",
                    "type": "string"
                },
                "destinations": {
                    "items": {
                        "$ref": "#/definitions/Chain"
                    },
                    "type": "array"
                },
                "enableThrottling": {
                    "example": true,
                    "type": "boolean"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inAlerting": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "example": "NOC Team",
                    "type": "string"
                },
                "throttlingAlerts": {
                    "example": 40,
                    "format": "int32",
                    "type": "integer"
                },
                "throttlingPeriod": {
                    "example": 30,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "destinations",
                "name"
            ],
            "type": "object"
        },
        "EscalationChainPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/EscalatingChain"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ESXAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "entity": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "entity"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_esx"
        },
        "ESXCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "counters": {
                            "items": {
                                "$ref": "#/definitions/DataSourceAttribute"
                            },
                            "type": "array"
                        },
                        "entity": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "esx"
        },
        "EventSource": {
            "discriminator": "collector",
            "properties": {
                "alertBodyTemplate": {
                    "description": "The alert message body for the EventSource",
                    "type": "string"
                },
                "alertEffectiveIval": {
                    "description": "The time in minutes after which the alert should clear",
                    "format": "int32",
                    "type": "integer"
                },
                "alertLevel": {
                    "description": "The default alert level: warn | error |critical",
                    "type": "string"
                },
                "alertSubjectTemplate": {
                    "description": "The alert message subject for the EventSource",
                    "type": "string"
                },
                "appliesTo": {
                    "description": "The Applies To for the LMModule",
                    "type": "string"
                },
                "clearAfterAck": {
                    "description": "Whether or not the alert should clear after acknowledgement",
                    "type": "boolean"
                },
                "collector": {
                    "description": "The EventSource type: logfile | snmptrap | syslog | wineventlog | scriptevent",
                    "type": "string"
                },
                "description": {
                    "description": "The description for the LMModule",
                    "type": "string"
                },
                "filters": {
                    "description": "The filters for the EventSource",
                    "items": {
                        "$ref": "#/definitions/RestEventSourceFilter"
                    },
                    "type": "array"
                },
                "group": {
                    "description": "The group the LMModule is in",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the LMModule",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the EventSource",
                    "type": "string"
                },
                "suppressDuplicatesES": {
                    "description": "Whether or not duplicate alerts should be suppressed at eventsource level",
                    "type": "boolean"
                },
                "tags": {
                    "description": "The Tags for the LMModule",
                    "type": "string"
                },
                "technology": {
                    "description": "The Technical Notes for the LMModule",
                    "type": "string"
                },
                "version": {
                    "description": "The epoch time of the last update to the EventSource",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "alertEffectiveIval",
                "id",
                "name"
            ],
            "type": "object"
        },
        "EventSourcePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/EventSource"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ExcludeDuplicateIps": {
            "properties": {
                "collectors": {
                    "description": "The collectors for which monitored devices should be used to identify and exclude duplicate IPs, if duplicate type is 4",
                    "example": "[\"ip-172-31-45-179.us-west-2.compute.internal\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "groups": {
                    "description": "The groups for which devices should be used to identify and exclude duplicate IPs, if duplicate type is 3",
                    "example": "[\"Network Devices\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "What types of duplicate IPs should be excluded. Options are 1 (matching any monitored devices), 2 (matching devices already discovered by this scan), 3 (matching devices in these groups), and 4 (matching devices assigned to these collectors)",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FlashWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "height": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "url"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "flash"
        },
        "FlowRecordPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/NetFlowRecord"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GaugeDataPoint": {
            "properties": {
                "aggregateFunction": {
                    "type": "string"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSeries": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "type": "string"
                },
                "deviceGroupFullPath": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "rpn": {
                    "type": "string"
                }
            },
            "required": [
                "deviceDisplayName",
                "deviceGroupFullPath",
                "instanceName"
            ],
            "type": "object"
        },
        "GaugeWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "colorThresholds": {
                            "description": "The threshold of Gauge color changes",
                            "items": {
                                "$ref": "#/definitions/ColorThreshold"
                            },
                            "type": "array"
                        },
                        "dataPoint": {
                            "$ref": "#/definitions/GaugeDataPoint",
                            "description": "The datapoint whose value is displayed in the gauge widget"
                        },
                        "displayType": {
                            "description": "Display as \"Raw Value\" or \"Percent\"",
                            "format": "int32",
                            "type": "integer"
                        },
                        "displayUnit": {
                            "description": "The unit for the raw value",
                            "type": "string"
                        },
                        "legend": {
                            "description": "The legend for the widget, displayed underneath the gauge",
                            "type": "string"
                        },
                        "maxValue": {
                            "description": "The maximum value of the gauge widget, displayed on the right side of the gauge",
                            "format": "double",
                            "type": "number"
                        },
                        "minValue": {
                            "description": "The minimum value of the gauge widget, displayed on the left side of the gauge",
                            "format": "double",
                            "type": "number"
                        },
                        "peakTimeRange": {
                            "description": "The time range over which the peak value is determined",
                            "type": "string"
                        },
                        "showPeak": {
                            "description": "Whether or not the peak value is displayed on the gauge widget",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "dataPoint"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gauge"
        },
        "GaugeWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "colorLevel": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "currentValue": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "displayType": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "displayUnit": {
                            "type": "string"
                        },
                        "historyTimestamps": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "historyValues": {
                            "readOnly": true,
                            "type": "object"
                        },
                        "legend": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "maxValue": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "minValue": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "peakTime": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "peakTimeOnLocal": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "peakValue": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "showPeak": {
                            "readOnly": true,
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gauge"
        },
        "GcpAccountTestResult": {
            "properties": {
                "detailLink": {
                    "type": "string"
                },
                "nonPermissionErrors": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "noPermissionServices": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "GcpAppEngineDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "GcpAtomEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "schedule": {
                            "description": "The polling interval for the EventSource",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gcpatom"
        },
        "GcpBillingCollectorAttributeV2": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "GcpBillingDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "gcpBillingType": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "gcpBillingType"
                    ],
                    "type": "object"
                }
            ]
        },
        "GcpComputeServiceLimitsCollectorAttributeV2": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GCPNetscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "gcpRegion": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "gcpService": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "projectId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "rootName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "serviceAccountKey": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gcp"
        },
        "GcpStackDriverCollectorAttributeV2": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "period": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GenerateReportRequest": {
            "properties": {
                "receiveEmails": {
                    "description": "The email addresses that LogicMonitor should send the report to, separated by commas",
                    "example": "bob@logicmonitor.com",
                    "type": "string"
                },
                "reportId": {
                    "description": "The id of the report to run",
                    "example": 998,
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "withAdminId": {
                    "description": "Generate the report with the admin. 0 mean current user",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GenerateReportResult": {
            "properties": {
                "reportId": {
                    "description": "The id of the report",
                    "format": "int32",
                    "type": "integer"
                },
                "resulturl": {
                    "description": "The url of the generated report",
                    "readOnly": true,
                    "type": "string"
                },
                "taskId": {
                    "description": "The task id of the generating process",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "reportId",
                "taskId"
            ],
            "type": "object"
        },
        "GlobMatchToggle": {
            "properties": {
                "isGlob": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleMapWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "ackChecked": {
                            "description": "Whether ACKed alerts should be displayed, the default value is true",
                            "type": "boolean"
                        },
                        "displayCriticalAlert": {
                            "description": "Whether critical alerts should be displayed, the default value is true",
                            "type": "boolean"
                        },
                        "displayErrorAlert": {
                            "description": "Whether error alerts should be displayed, the default value is true",
                            "type": "boolean"
                        },
                        "displayWarnAlert": {
                            "description": "Whether warning alerts should be displayed, the default value is true",
                            "type": "boolean"
                        },
                        "mapPoints": {
                            "description": "The points info",
                            "items": {
                                "$ref": "#/definitions/PointSource"
                            },
                            "type": "array"
                        },
                        "sdtChecked": {
                            "description": "Whether alerts occuring during an SDT period should be displayed, the default value is true",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "mapPoints"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gmap"
        },
        "GoogleMapWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/MapItemInfo"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "gmap"
        },
        "GraphDisplay": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "legend": {
                    "type": "string"
                },
                "option": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GraphLine": {
            "properties": {
                "colorName": {
                    "type": "string"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "isVirtualDataPoint": {
                    "type": "boolean"
                },
                "legend": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GraphOpsNoteScope": {
            "properties": {
                "deviceGroupIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "deviceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "serviceGroupIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "serviceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GraphPlot": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "base": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "base1024": {
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "displayPrio": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "dsName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "endTime": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "endTZOffset": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "exportFileName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "height": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "id": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "instances": {
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "readOnly": true,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "lines": {
                            "items": {
                                "$ref": "#/definitions/GraphPlotLine"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "maxValue": {
                            "readOnly": true,
                            "type": "object"
                        },
                        "minValue": {
                            "readOnly": true,
                            "type": "object"
                        },
                        "missinglines": {
                            "items": {
                                "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "name": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "rigid": {
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "scopes": {
                            "items": {
                                "$ref": "#/definitions/GraphOpsNoteScope"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "startTime": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "startTZOffset": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "step": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "timeScale": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "timestamps": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "timeZone": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "timeZoneId": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "verticalLabel": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "width": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "xAxisName": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "graph"
        },
        "GraphPlotLine": {
            "properties": {
                "avg": {
                    "readOnly": true,
                    "type": "object"
                },
                "color": {
                    "readOnly": true,
                    "type": "string"
                },
                "colorName": {
                    "readOnly": true,
                    "type": "string"
                },
                "data": {
                    "items": {
                        "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "decimal": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "description": {
                    "readOnly": true,
                    "type": "string"
                },
                "label": {
                    "readOnly": true,
                    "type": "string"
                },
                "legend": {
                    "readOnly": true,
                    "type": "string"
                },
                "max": {
                    "readOnly": true,
                    "type": "object"
                },
                "min": {
                    "readOnly": true,
                    "type": "object"
                },
                "std": {
                    "readOnly": true,
                    "type": "object"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "useYMax": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "visible": {
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GraphVirtualDataPoint": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "rpn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupNetFlowRecord": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetflowDataBase"
                },
                {
                    "properties": {
                        "destinationMBytes": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "dstDNS": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "dstIP": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "dstPort": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "firstEpochInSec": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "ifIn": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "ifInDisplayName": {
                            "type": "string"
                        },
                        "ifOut": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "ifOutDisplayName": {
                            "type": "string"
                        },
                        "lastEpochInSec": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "percentUsage": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "protocol": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "sourceMBytes": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "srcDNS": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "srcIP": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "srcPort": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "usage": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "groupflowrecord"
        },
        "HostCpuReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "displayGraphs": {
                            "description": "true | false. Whether or not CPU graphs should be displayed at the end of the report",
                            "type": "boolean"
                        },
                        "hostsVal": {
                            "description": "The groups selected for the report, where multiple devices are separated by commas",
                            "type": "string"
                        },
                        "top10Only": {
                            "description": "true | false\nfalse: CPU metrics will be displayed for all selected devices or groups\ntrue: CPU metrics will only be displayed for the top ten device or groups",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "hostsVal"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "host cpu"
        },
        "HostGroupInventoryReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "hostGroups": {
                            "type": "string"
                        },
                        "includeSubGroups": {
                            "type": "boolean"
                        },
                        "properties": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "sortedBy": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "properties"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "host group inventory"
        },
        "HostInventoryMetric": {
            "properties": {
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "instances": {
                    "type": "string"
                }
            },
            "required": [
                "dataSourceId"
            ],
            "type": "object"
        },
        "HostInventoryReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "hostsVal": {
                            "description": "The devices OR groups (full path) selected for the report, where multiple entities are separated by commas",
                            "type": "string"
                        },
                        "hostsValType": {
                            "description": "host | group. The type of entities specified in the hostsVal field",
                            "type": "string"
                        },
                        "metrics": {
                            "description": "The instances will be included in the report",
                            "items": {
                                "$ref": "#/definitions/HostInventoryMetric"
                            },
                            "type": "array"
                        },
                        "properties": {
                            "description": "The properties that should be displayed in the report",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "sortedBy": {
                            "description": "Specify a property that is included in the 'properties' list that should be used to sort the devices/groups displayed in the report",
                            "type": "string"
                        }
                    },
                    "required": [
                        "properties"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "host inventory"
        },
        "HostMetricsReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns that will be displayed in the report. You should specify the columns in the order in which you'd like them to be displayed. All column names need to be included in this object, but each column should have an associated isHidden field that indicates whether it is displayed or not",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "hostsVal": {
                            "description": "The name of the devices OR groups selected for the report, where multiple entities are separated by commas. Glob expressions are supported",
                            "type": "string"
                        },
                        "hostsValType": {
                            "description": "host | group. The type of entities specified in the hostsVal field",
                            "type": "string"
                        },
                        "metrics": {
                            "description": "The datapoint or calculation on a datapoint that will be included in the report, where each datapoint/calculation is specified by three fields: dataSourceId, instances (glob is okay) and metric (no glob)",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            },
                            "type": "array"
                        },
                        "rowFormat": {
                            "description": "0 | 1 | 2 | 3\n0: Text only - metrics will be displayed in a tabular format.\n1: One graph per device - metrics will be displayed in a tabular format and one graph will be displayed per device.\n2: One graph per instance - metrics will be displayed in a tabular format and one graph will be displayed per instance.\n3: One graph per datapoint - metrics will be displayed in a tabular format and one graph will be displayed per datapoint.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "sortedBy": {
                            "description": "host | instance | metric\nhost: Information displayed in the report will be sorted by device\ninstance: Information displayed in the report will be sorted by instance\nmetric: Information displayed in the report will be sorted by datapoint (metric)",
                            "type": "string"
                        },
                        "top10Only": {
                            "description": "true | false\nfalse: Metrics will be displayed for all selected devices or groups\ntrue: Metrics will only be displayed for the top ten device or groups",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "hostsValType",
                        "metrics",
                        "rowFormat",
                        "sortedBy",
                        "top10Only"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "host metric trends"
        },
        "HtmlWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "isCustom": {
                            "type": "boolean"
                        },
                        "resources": {
                            "items": {
                                "$ref": "#/definitions/WebResource"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "required": [
                        "resources"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "html"
        },
        "HttpAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "caseSensitive": {
                            "type": "boolean"
                        },
                        "followRedirect": {
                            "type": "boolean"
                        },
                        "ports": {
                            "type": "string"
                        },
                        "regex": {
                            "type": "string"
                        },
                        "uri": {
                            "type": "string"
                        },
                        "useSSL": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "caseSensitive",
                        "followRedirect",
                        "ports",
                        "regex",
                        "uri",
                        "useSSL"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_http"
        },
        "ILP": {
            "properties": {
                "lmName": {
                    "type": "string"
                },
                "wmiName": {
                    "type": "string"
                }
            },
            "required": [
                "lmName",
                "wmiName"
            ],
            "type": "object"
        },
        "InheritanceProp": {
            "properties": {
                "fullpath": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InterfBandwidthReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "description": "The Time Range configured for the report. Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "hostsVal": {
                            "description": "The devices OR groups selected for the report, where multiple entities are separated by commas",
                            "type": "string"
                        },
                        "hostsValType": {
                            "description": "host | group. The type of entities specified in the hostsVal field",
                            "type": "string"
                        },
                        "rowFormat": {
                            "description": "0 | 1\n0: Text only - metrics will be displayed in a tabular format.\n1: One graph per instance - metrics will be displayed in a tabular format and one graph will be displayed per instance",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "interfaces bandwidth"
        },
        "InternalCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "internal"
        },
        "IPMIAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "method": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_ipmi"
        },
        "IPMICollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ipmiSensor": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ipmi"
        },
        "ItemData": {
            "properties": {
                "confirmedCriticalAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "confirmedErrorAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "confirmedWarnAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "criticalAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "entityId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "errorAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDT": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "inSDTAndConfirmedCriticalAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDTAndConfirmedErrorAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDTAndConfirmedWarnAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDTCriticalAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDTErrorAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "inSDTWarnAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "parentId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "resourceTemplateType": {
                    "readOnly": true,
                    "type": "string"
                },
                "subType": {
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "warnAlert": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JDBCAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "ports": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "separator": {
                            "type": "string"
                        },
                        "sid": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "ports",
                        "query",
                        "type",
                        "url"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_jdbc"
        },
        "JDBCCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "password": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "jdbc"
        },
        "JMXAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "path": {
                            "type": "string"
                        },
                        "ports": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "path",
                        "ports",
                        "url"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_jmx"
        },
        "JMXCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "queryUrl": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "jmx"
        },
        "LinkedWmiClass": {
            "properties": {
                "anchorClassWMIProperty": {
                    "type": "string"
                },
                "ILP": {
                    "items": {
                        "$ref": "#/definitions/ILP"
                    },
                    "type": "array"
                },
                "linkedWmiClass": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/PropertyMatchRule"
                },
                "myLinkWMIProperty": {
                    "type": "string"
                }
            },
            "required": [
                "anchorClassWMIProperty",
                "linkedWmiClass"
            ],
            "type": "object"
        },
        "LocationData": {
            "properties": {
                "geoInfo": {
                    "readOnly": true,
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "smgId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LogFile": {
            "properties": {
                "encoding": {
                    "description": "The file encoding: default | auto | UTF-8 | UTF-16",
                    "type": "string"
                },
                "excludes": {
                    "description": "The regex or plain text to look for in the file and not trigger alert if found",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "matches": {
                    "items": {
                        "$ref": "#/definitions/MatchPattern"
                    },
                    "type": "array"
                },
                "path": {
                    "description": "The path of the log file to monitor",
                    "type": "string"
                },
                "useGlob": {
                    "description": "Whether or not glob is used in the path",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LogFileEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "logFiles": {
                            "items": {
                                "$ref": "#/definitions/LogFile"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "logfile"
        },
        "Macro": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "variable": {
                    "type": "string"
                }
            },
            "required": [
                "value",
                "variable"
            ],
            "type": "object"
        },
        "MapItemInfo": {
            "properties": {
                "activeStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "alertStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "readOnly": true,
                    "type": "string"
                },
                "displayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "formattedLocation": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "latitude": {
                    "readOnly": true,
                    "type": "string"
                },
                "location": {
                    "readOnly": true,
                    "type": "string"
                },
                "longitude": {
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                },
                "sdtStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "subType": {
                    "readOnly": true,
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MatchPattern": {
            "properties": {
                "alertLevel": {
                    "description": "The level of alert to trigger: warn | error | critical",
                    "type": "string"
                },
                "pattern": {
                    "description": "The regex or plain text to look for in the file and trigger alert if found",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MemcachedCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "memcached"
        },
        "Metric": {
            "properties": {
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "instances": {
                    "type": "string"
                }
            },
            "required": [
                "dataSourceId"
            ],
            "type": "object"
        },
        "MongoAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "listDB": {
                            "type": "boolean"
                        },
                        "ports": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "listDB",
                        "ports"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_mongo"
        },
        "MongoCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "collection": {
                            "type": "string"
                        },
                        "database": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        },
                        "query": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "mongo"
        },
        "NameAndValue": {
            "properties": {
                "name": {
                    "description": "The name of a property",
                    "example": "addr",
                    "type": "string"
                },
                "value": {
                    "description": "The value of a property",
                    "example": "127.0.0.1",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "NetAppAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "instanceDescription": {
                            "type": "string"
                        },
                        "instanceGroupName": {
                            "type": "string"
                        },
                        "instanceLocator": {
                            "type": "string"
                        },
                        "instanceName": {
                            "type": "string"
                        },
                        "instanceValue": {
                            "type": "string"
                        },
                        "object": {
                            "type": "string"
                        },
                        "request": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_netapp"
        },
        "NetAppCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "netAppAggregate": {
                            "type": "string"
                        },
                        "netAppAPI": {
                            "type": "string"
                        },
                        "netAppIndex": {
                            "type": "string"
                        },
                        "netAppInstance": {
                            "type": "string"
                        },
                        "netAppObject": {
                            "type": "string"
                        },
                        "netAppType": {
                            "type": "string"
                        },
                        "netAppXML": {
                            "type": "string"
                        },
                        "netAppXMLBulk": {
                            "type": "string"
                        },
                        "netAppXMLBulkLocator": {
                            "type": "string"
                        },
                        "netAppXMLIndex": {
                            "type": "string"
                        },
                        "netAppXMLInstance": {
                            "type": "string"
                        },
                        "netAppXMLLocator": {
                            "type": "string"
                        },
                        "params": {
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "netapp"
        },
        "NetflowApplication": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetflowDataBase"
                },
                {
                    "properties": {
                        "clientCount": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "destinationMBytes": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "dns": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "firstEpochInSec": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "flowCount": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "IP": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "lastEpochInSec": {
                            "format": "int64",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "percentUsage": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "port": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "protocol": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "sourceMBytes": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "usage": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "application"
        },
        "NetflowBandwidth": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetflowDataBase"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "receive": {
                            "format": "double",
                            "type": "number"
                        },
                        "send": {
                            "format": "double",
                            "type": "number"
                        },
                        "usage": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "bandwidth"
        },
        "NetflowDataBase": {
            "discriminator": "dataType",
            "properties": {
                "dataType": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NetflowEndpoint": {
            "properties": {
                "dataType": {
                    "readOnly": true,
                    "type": "string"
                },
                "dns": {
                    "readOnly": true,
                    "type": "string"
                },
                "IP": {
                    "readOnly": true,
                    "type": "string"
                },
                "lastSeen": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "percentUsage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "usage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "type": "object",
            "x-discriminator-value": "endpoint"
        },
        "NetflowFilters": {
            "properties": {
                "conversation": {
                    "items": {
                        "$ref": "#/definitions/ConversationFilter"
                    },
                    "type": "array"
                },
                "direction": {
                    "type": "string"
                },
                "ifIdx": {
                    "format": "int32",
                    "type": "integer"
                },
                "ifName": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "nodeA": {
                    "type": "string"
                },
                "nodeB": {
                    "type": "string"
                },
                "ports": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "qosType": {
                    "type": "string"
                },
                "top": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NetflowGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "deviceId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "graph": {
                            "type": "string"
                        },
                        "netflowFilter": {
                            "$ref": "#/definitions/NetflowFilters"
                        }
                    },
                    "required": [
                        "deviceDisplayName"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "netflowgraph"
        },
        "NetflowGroupGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "deviceGroupId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceGroupName": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "groupnetflowgraph"
        },
        "NetflowGroupWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "dataType": {
                            "type": "string"
                        },
                        "deviceGroupId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceGroupName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "netflowFilter": {
                            "$ref": "#/definitions/NetflowFilters"
                        },
                        "rowFilters": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "deviceGroupId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "groupnetflow"
        },
        "NetflowGroupWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/NetflowDataBase"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "total": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "groupnetflow"
        },
        "NetflowPort": {
            "properties": {
                "dataType": {
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "readOnly": true,
                    "type": "string"
                },
                "percentUsage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "port": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "usage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "type": "object",
            "x-discriminator-value": "port"
        },
        "NetflowQoSReportTableRow": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetflowDataBase"
                },
                {
                    "properties": {
                        "received": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "sent": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "type": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "qosreporttablerow"
        },
        "NetFlowRecord": {
            "properties": {
                "dataType": {
                    "readOnly": true,
                    "type": "string"
                },
                "destinationMBytes": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "dstDNS": {
                    "readOnly": true,
                    "type": "string"
                },
                "dstIP": {
                    "readOnly": true,
                    "type": "string"
                },
                "dstPort": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "firstEpochInSec": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "ifIn": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "ifOut": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastEpochInSec": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "percentUsage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "protocol": {
                    "readOnly": true,
                    "type": "string"
                },
                "sourceMBytes": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                },
                "srcDNS": {
                    "readOnly": true,
                    "type": "string"
                },
                "srcIP": {
                    "readOnly": true,
                    "type": "string"
                },
                "srcPort": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "usage": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "type": "object",
            "x-discriminator-value": "flowrecord"
        },
        "NetflowReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "hostsVal": {
                            "description": "The devices OR groups (full path) selected for the report, where multiple entities are separated by commas. Glob is accepted",
                            "type": "string"
                        },
                        "includeDNSMappings": {
                            "description": "Whether include DNS mappings or not",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "hostsVal"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "netflow device metric"
        },
        "NetflowWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "dataType": {
                            "type": "string"
                        },
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "deviceId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "filter": {
                            "type": "string"
                        },
                        "netflowFilter": {
                            "$ref": "#/definitions/NetflowFilters"
                        }
                    },
                    "required": [
                        "deviceDisplayName"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "netflow"
        },
        "NetflowWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/NetflowDataBase"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "total": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "netflow"
        },
        "Netscan": {
            "discriminator": "method",
            "properties": {
                "collector": {
                    "description": "The ID of the Collector associated with this Netscan",
                    "example": 148,
                    "format": "int32",
                    "type": "integer"
                },
                "collectorDescription": {
                    "description": "The description of the Collector associated with this Netscan",
                    "example": "Prod CollectorA",
                    "type": "string"
                },
                "collectorGroup": {
                    "description": "The ID of the group of the Collector associated with this Netscan",
                    "example": 4,
                    "format": "int32",
                    "type": "integer"
                },
                "collectorGroupName": {
                    "description": "The name of the group of the Collector associated with this Netscan",
                    "example": "Prod",
                    "type": "string"
                },
                "creator": {
                    "description": "The user that created the policy",
                    "example": "sarah@logicmonitor.com",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the Netscan Policy",
                    "example": "Discovers devices within the office network for monitoring",
                    "type": "string"
                },
                "duplicate": {
                    "$ref": "#/definitions/ExcludeDuplicateIps",
                    "description": "Information that determines how duplicate discovered devices should be handled"
                },
                "group": {
                    "description": "The group the Netscan policy should belong to",
                    "example": "RT_check",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the Netscan Policy",
                    "example": 208,
                    "format": "int32",
                    "type": "integer"
                },
                "ignoreSystemIPsDuplicates": {
                    "description": "Ignore system.ips when checking for duplicate resources",
                    "type": "boolean"
                },
                "method": {
                    "description": "The method that should be used to discover devices. Options are nmap (ICMP Ping), nec2 (EC2), and script",
                    "example": "nmap",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the Netscan Policy",
                    "example": "Office Network",
                    "type": "string"
                },
                "nextStart": {
                    "description": "The date and time of the next start time of the scan - displayed as manual if the scan does not run on a schedule",
                    "example": "2018-09-07 15:12:00 PDT",
                    "type": "string"
                },
                "nextStartEpoch": {
                    "description": "The epoch of the next start time of the scan - displayed as 0 if the scan does not run on a schedule",
                    "example": 1536358320,
                    "format": "int64",
                    "type": "integer"
                },
                "nsgId": {
                    "description": "The ID of the group the policy belongs to",
                    "example": 47,
                    "format": "int32",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "#/definitions/RestSchedule",
                    "description": "Information related to the recurring execution schedule for the Netscan Policy"
                },
                "version": {
                    "description": "The Id of the device",
                    "example": 2,
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "collector",
                "duplicate",
                "method",
                "name"
            ],
            "type": "object"
        },
        "NetscanPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Netscan"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NetscanPorts": {
            "properties": {
                "isGlobalDefault": {
                    "description": "Whether or not default ports should be used",
                    "example": true,
                    "type": "boolean"
                },
                "value": {
                    "description": "The ports that should be used in the Netscan",
                    "example": "21,22,23",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NextUpgradeInfo": {
            "properties": {
                "majorVersion": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "mandatory": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "minorVersion": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "stable": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "upgradeTime": {
                    "readOnly": true,
                    "type": "string"
                },
                "upgradeTimeEpoch": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NMapDDR": {
            "properties": {
                "assignment": {
                    "description": "Information about how discovered devices are included in or excluded from monitoring. Assignment objects can be created for different types of discovered devices",
                    "items": {
                        "$ref": "#/definitions/Assignment"
                    },
                    "type": "array"
                },
                "changeName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NMapNetscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "credentials": {
                            "$ref": "#/definitions/NMapNetscanPolicyCredential",
                            "description": "The credentials to be used for the scan",
                            "example": "2"
                        },
                        "ddr": {
                            "$ref": "#/definitions/NMapDDR",
                            "description": "Information related to including / excluding discovered devices in / from monitoring"
                        },
                        "exclude": {
                            "description": "The subnet to exclude from scanning from nmap scans",
                            "example": "10.35.41.1-10.35.41.254",
                            "type": "string"
                        },
                        "ports": {
                            "$ref": "#/definitions/NetscanPorts",
                            "description": "The ports that should be used in the Netscan"
                        },
                        "subnet": {
                            "description": "The subnet to scan for nmap scans",
                            "example": "10.35.41.1-10.35.41.254",
                            "type": "string"
                        }
                    },
                    "required": [
                        "ports",
                        "subnet"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "nmap"
        },
        "NMapNetscanPolicyCredential": {
            "properties": {
                "custom": {
                    "description": "Custom credentials that should be used for this scan",
                    "example": "[{\"snmp.community\":\"test\"}]",
                    "items": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "deviceGroupId": {
                    "description": "The ID of the device group that credentials should be inherited from, for this scan",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "deviceGroupName": {
                    "description": "The name of the device group that credentials should be inherited from, for this scan",
                    "example": "Network Devices",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NOCItemBase": {
            "discriminator": "type",
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "NOCWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "ackChecked": {
                            "description": "Whether or not acknowledgements are displayed in the NOC widget, the default value is true",
                            "type": "boolean"
                        },
                        "displayColumn": {
                            "description": "The maximum number columns displayed in the NOC widget",
                            "format": "int32",
                            "type": "integer"
                        },
                        "displayCriticalAlert": {
                            "description": "Whether or not critical alerts are displayed in the NOC widget, the default value is true",
                            "type": "boolean"
                        },
                        "displayErrorAlert": {
                            "description": "Whether or not error alerts are displayed in the NOC widget, the default value is true",
                            "type": "boolean"
                        },
                        "displayWarnAlert": {
                            "description": "Whether or not warning alerts are displayed in the NOC widget, the default value is true",
                            "type": "boolean"
                        },
                        "items": {
                            "description": "The NOC items",
                            "items": {
                                "$ref": "#/definitions/NOCItemBase"
                            },
                            "type": "array"
                        },
                        "sdtChecked": {
                            "description": "Whether or not SDTs are displayed in the NOC widget, the default value is true",
                            "type": "boolean"
                        },
                        "sortBy": {
                            "description": "How NOC items are sorted",
                            "type": "string"
                        }
                    },
                    "required": [
                        "items"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "noc"
        },
        "NOCWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "ackChecked": {
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "items": {
                            "items": {
                                "$ref": "#/definitions/ItemData"
                            },
                            "readOnly": true,
                            "type": "array",
                            "uniqueItems": true
                        },
                        "sdtChecked": {
                            "readOnly": true,
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "noc"
        },
        "NormalGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "dsiId": {
                            "description": "The id of the datasource instance the graph was pinned from",
                            "format": "int32",
                            "type": "integer"
                        },
                        "dsiName": {
                            "description": "The name of the instance the graph was pinned from",
                            "readOnly": true,
                            "type": "string"
                        },
                        "dsName": {
                            "description": "The name (not display name) of the datasource the graph is associated with",
                            "readOnly": true,
                            "type": "string"
                        },
                        "graphId": {
                            "description": "The id of the datasource graph this widget was pinned from",
                            "format": "int32",
                            "type": "integer"
                        },
                        "graphName": {
                            "description": "The id of the datasource graph this widget was pinned from",
                            "readOnly": true,
                            "type": "string"
                        },
                        "hId": {
                            "description": "The id of the device the graph was pinned from",
                            "format": "int32",
                            "type": "integer"
                        },
                        "hostName": {
                            "description": "The display name of the device the graph was pinned from",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "dsiId",
                        "graphId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ngraph"
        },
        "NTLMAuthentication": {
            "allOf": [
                {
                    "$ref": "#/definitions/Authentication"
                },
                {
                    "properties": {
                        "domain": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ntlm"
        },
        "OnetimeUpgradeInfo": {
            "properties": {
                "createdBy": {
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "example": "regular MGD updates",
                    "type": "string"
                },
                "endEpoch": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "level": {
                    "readOnly": true,
                    "type": "string"
                },
                "majorVersion": {
                    "example": 27,
                    "format": "int32",
                    "type": "integer"
                },
                "minorVersion": {
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "startEpoch": {
                    "example": 1534888740,
                    "format": "int64",
                    "type": "integer"
                },
                "timezone": {
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "majorVersion",
                "minorVersion",
                "startEpoch"
            ],
            "type": "object"
        },
        "OpenMetricCollectorAttributeV2": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "connectTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "followRedirect": {
                            "type": "boolean"
                        },
                        "headers": {
                            "type": "string"
                        },
                        "readTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "OpenMetricDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "connectTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "followRedirect": {
                            "type": "boolean"
                        },
                        "groupLabel": {
                            "type": "string"
                        },
                        "headers": {
                            "type": "string"
                        },
                        "instanceLabel": {
                            "type": "string"
                        },
                        "metricName": {
                            "type": "string"
                        },
                        "readTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "followRedirect",
                        "headers",
                        "instanceLabel",
                        "metricName",
                        "url"
                    ],
                    "type": "object"
                }
            ]
        },
        "OpsNote": {
            "properties": {
                "createdBy": {
                    "description": "The user that created the Ops Note",
                    "readOnly": true,
                    "type": "string"
                },
                "happenOnInSec": {
                    "description": "The date and time associated with the note, in epoch seconds format",
                    "example": 1488826440,
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "description": "The id associated with the Ops Note",
                    "readOnly": true,
                    "type": "string"
                },
                "note": {
                    "description": "The note message",
                    "example": "software update from 1.0.0 to 1.2.4",
                    "type": "string"
                },
                "scopes": {
                    "description": "The scopes associated with the note. Each scope has a type of device, service, deviceGroup or serviceGroup. A note with no scope will show up for everything in the account",
                    "items": {
                        "$ref": "#/definitions/OpsNoteScope"
                    },
                    "type": "array"
                },
                "tags": {
                    "description": "The tags that should be associated with the note. Each tag has a unique id and a name - you can either include the name of a new or existing tag, or the id of an existing tag",
                    "items": {
                        "$ref": "#/definitions/OpsNoteTagBase"
                    },
                    "type": "array"
                }
            },
            "required": [
                "note"
            ],
            "type": "object"
        },
        "OpsNoteDeviceGroupScope": {
            "allOf": [
                {
                    "$ref": "#/definitions/OpsNoteScope"
                },
                {
                    "properties": {
                        "fullPath": {
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "devicegroup"
        },
        "OpsNoteDeviceScope": {
            "allOf": [
                {
                    "$ref": "#/definitions/OpsNoteScope"
                },
                {
                    "properties": {
                        "deviceId": {
                            "example": 56,
                            "format": "int32",
                            "type": "integer"
                        },
                        "deviceName": {
                            "type": "string"
                        },
                        "fullPath": {
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "device"
        },
        "OpsNoteGroupAllScope": {
            "allOf": [
                {
                    "$ref": "#/definitions/OpsNoteScope"
                },
                {
                    "properties": {
                        "groupId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "groupall"
        },
        "OpsNotePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/OpsNote"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "OpsNoteScope": {
            "discriminator": "type",
            "properties": {
                "type": {
                    "example": "device",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "OpsNoteTagBase": {
            "properties": {
                "createdOnInSec": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "release",
                    "type": "string"
                },
                "updateOnInSec": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "OpsNoteWebsiteGroupScope": {
            "allOf": [
                {
                    "$ref": "#/definitions/OpsNoteScope"
                },
                {
                    "properties": {
                        "fullPath": {
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitegroup"
        },
        "OpsNoteWebsiteScope": {
            "allOf": [
                {
                    "$ref": "#/definitions/OpsNoteScope"
                },
                {
                    "properties": {
                        "fullPath": {
                            "type": "string"
                        },
                        "groupId": {
                            "example": 74,
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteId": {
                            "example": 87,
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "website"
        },
        "OverviewGraphDataPoint": {
            "properties": {
                "aggregateMethod": {
                    "type": "string"
                },
                "consolidateFunc": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OverviewGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "dsId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "dsigId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "dsigName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "dsName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "graphId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "graphName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "hId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "hostName": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "dsigId",
                        "hId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ograph"
        },
        "PDHAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "category": {
                            "type": "string"
                        },
                        "objRegex": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "category",
                        "objRegex"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_pdh"
        },
        "PerfmonCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "counters": {
                            "items": {
                                "$ref": "#/definitions/PerfmonCounter"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "perfmon"
        },
        "PerfmonCounter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Period": {
            "properties": {
                "endMinutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "startMinutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "timezone": {
                    "type": "string"
                },
                "weekDays": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "endMinutes",
                "startMinutes",
                "timezone",
                "weekDays"
            ],
            "type": "object"
        },
        "PieChartData": {
            "properties": {
                "colorName": {
                    "readOnly": true,
                    "type": "string"
                },
                "dataPointName": {
                    "readOnly": true,
                    "type": "string"
                },
                "legend": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "readOnly": true,
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PieChartDataPoint": {
            "properties": {
                "aggregate": {
                    "type": "boolean"
                },
                "aggregateFunction": {
                    "type": "string"
                },
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deviceDisplayName": {
                    "type": "string"
                },
                "deviceGroupFullPath": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "top10": {
                    "type": "boolean"
                }
            },
            "required": [
                "deviceDisplayName",
                "deviceGroupFullPath",
                "instanceName",
                "name"
            ],
            "type": "object"
        },
        "PieChartInfo": {
            "properties": {
                "counters": {
                    "description": "The counter is used for saving applyTo expression, it's mainly used for count device",
                    "items": {
                        "$ref": "#/definitions/Counter"
                    },
                    "type": "array"
                },
                "dataPoints": {
                    "description": "The datapoints added to the widget. Note that datapoints must be included in the pieChartItems object to be displayed in the widget",
                    "items": {
                        "$ref": "#/definitions/PieChartDataPoint"
                    },
                    "type": "array"
                },
                "groupRemainingAsOthers": {
                    "description": "If the number of slices exceeds the maxSlicesCanBeShown, this value indicates whether the remaining slices should be grouped together",
                    "type": "boolean"
                },
                "hideZeroPercentSlices": {
                    "description": "Whether items at 0% should be hidden",
                    "type": "boolean"
                },
                "maxSlicesCanBeShown": {
                    "description": "The maximum number of slices you'd like displayed in the pie chart",
                    "format": "int32",
                    "type": "integer"
                },
                "pieChartItems": {
                    "description": "The datapoints and virtual datapoints that will be displayed in the pie chart",
                    "items": {
                        "$ref": "#/definitions/PieChartItem"
                    },
                    "type": "array"
                },
                "showLabelsAndLinesOnPC": {
                    "description": "Whether or not labels and lines should be displayed on the pie chart",
                    "type": "boolean"
                },
                "title": {
                    "description": "The title that will be displayed above the pie chart",
                    "type": "string"
                },
                "virtualDataPoints": {
                    "description": "The virtual datapoints added to the widget. Note that virtual datapoints must be included in the pieChartItems object to be displayed in the widget",
                    "items": {
                        "$ref": "#/definitions/VirtualDataPoint"
                    },
                    "type": "array"
                }
            },
            "required": [
                "pieChartItems"
            ],
            "type": "object"
        },
        "PieChartItem": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "dataPointName": {
                    "type": "string"
                },
                "legend": {
                    "type": "string"
                }
            },
            "required": [
                "dataPointName",
                "legend"
            ],
            "type": "object"
        },
        "PieChartWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "pieChartInfo": {
                            "$ref": "#/definitions/PieChartInfo"
                        }
                    },
                    "required": [
                        "pieChartInfo"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "piechart"
        },
        "PieChartWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/PieChartData"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "groupRemainingAsOthers": {
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "hideZeroPercentSlices": {
                            "type": "boolean"
                        },
                        "maxSlicesCanBeShown": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "piechart"
        },
        "PingCheck": {
            "allOf": [
                {
                    "$ref": "#/definitions/Website"
                },
                {
                    "properties": {
                        "count": {
                            "description": "The number of packets to send",
                            "format": "int32",
                            "type": "integer"
                        },
                        "host": {
                            "description": "The URL to check, without the scheme or protocol (e.g http or https)\nE.g. if the URL is \"http://www.google.com, then the host=\"www.google.com\"",
                            "type": "string"
                        },
                        "percentPktsNotReceiveInTime": {
                            "description": "The percentage of packets that should be returned in the time period specified by timeoutInMSPktsNotReceive for each ping check",
                            "format": "int32",
                            "type": "integer"
                        },
                        "timeoutInMSPktsNotReceive": {
                            "description": "The time period that the percentage of packets specified by percentPktsNotReceiveInTime must be returned in for each ping check",
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "host"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "pingcheck"
        },
        "PingCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "type": "string"
                        },
                        "sendPkts": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ping"
        },
        "PointSource": {
            "properties": {
                "deviceDisplayName": {
                    "description": "The display name of the device the map point represents (if type=device). This field supports Glob (*)",
                    "type": "string"
                },
                "deviceGroupFullPath": {
                    "description": "The full path of the device group associated with the map point. This may be the group the map point represents, or the group of the device that the map point represents",
                    "type": "string"
                },
                "hasLocation": {
                    "description": "Whether or not the specified group or device has a location property defined",
                    "readOnly": true,
                    "type": "boolean"
                },
                "type": {
                    "description": "Whether or not the mapPoint represents a device or a group",
                    "type": "string"
                }
            },
            "required": [
                "deviceGroupFullPath"
            ],
            "type": "object"
        },
        "PortAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "ports": {
                            "type": "string"
                        },
                        "timeout": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "ports"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_port"
        },
        "PortPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/NetflowPort"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Privilege": {
            "properties": {
                "objectId": {
                    "example": "123",
                    "type": "string"
                },
                "objectName": {
                    "readOnly": true,
                    "type": "string"
                },
                "objectType": {
                    "example": "dashboard group",
                    "type": "string"
                },
                "operation": {
                    "example": "write",
                    "type": "string"
                },
                "subOperation": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "objectId",
                "objectType",
                "operation"
            ],
            "type": "object"
        },
        "PropertyMatchRule": {
            "properties": {
                "caseInsensitive": {
                    "type": "boolean"
                },
                "underscore": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PropertyPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/EntityProperty"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RawDataValues": {
            "properties": {
                "nextPageParams": {
                    "readOnly": true,
                    "type": "string"
                },
                "time": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Recipient": {
            "properties": {
                "addr": {
                    "description": "the user name if method = admin, or the email address if method = arbitrary",
                    "example": "john.doe@logicmonitor.com",
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "method": {
                    "description": "Admin | Arbitrary, where Admin = a user, and Arbitrary = an arbitrary email",
                    "example": "EMAIL",
                    "type": "string"
                },
                "type": {
                    "description": "email | sms | voice, where type must be email if method = arbitrary",
                    "example": "Admin",
                    "type": "string"
                }
            },
            "required": [
                "method",
                "type"
            ],
            "type": "object"
        },
        "RecipientGroup": {
            "properties": {
                "description": {
                    "description": "The description of the recipient group",
                    "example": "Tier 1 Helpdesk",
                    "type": "string"
                },
                "groupName": {
                    "description": "The name of the recipient group",
                    "example": "Tier 1 Helpdesk",
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "recipients": {
                    "description": "The recipients in the group",
                    "items": {
                        "$ref": "#/definitions/Recipient"
                    },
                    "type": "array"
                }
            },
            "required": [
                "groupName"
            ],
            "type": "object"
        },
        "RecipientGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/RecipientGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReportBase": {
            "discriminator": "type",
            "properties": {
                "customReportTypeId": {
                    "description": "The id of the custom report template, if the report is a custom report. An id of 0 indicates that the report is not a custom report",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "customReportTypeName": {
                    "description": "The name of the custom report template",
                    "readOnly": true,
                    "type": "string"
                },
                "delivery": {
                    "description": "Whether or not the report is configured to be delivered via email. Acceptable values are: none, email",
                    "example": "email",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the report",
                    "example": "This is a daily alerts report",
                    "type": "string"
                },
                "enableViewAsOtherUser": {
                    "description": "Whether or not other users are allowed to view the report as the user who last modified the report",
                    "readOnly": true,
                    "type": "boolean"
                },
                "format": {
                    "description": "The format of the report. Allowable values are: HTML, PDF, CSV, WORD",
                    "example": "HTML",
                    "type": "string"
                },
                "groupId": {
                    "description": "The Id of the group the report is in, where Id=0 is the root report group",
                    "example": 5,
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The id of the report",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastGenerateOn": {
                    "description": "The time, in epoch format, that the report was last generated",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastGeneratePages": {
                    "description": "The number of pages in the report, the last time it was generated",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastGenerateSize": {
                    "description": "The size of the report, in Bytes, the last time it was generated",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastmodifyUserId": {
                    "description": "The Id of the user that last modified the report",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "lastmodifyUserName": {
                    "description": "The username of the user that last modified the report",
                    "readOnly": true,
                    "type": "string"
                },
                "name": {
                    "description": "The name of the report",
                    "example": "Daily Alerts Report",
                    "type": "string"
                },
                "recipients": {
                    "description": "If the report is configured to be delivered via email, this object provides the recipients that the report will be delivered to",
                    "items": {
                        "$ref": "#/definitions/ReportRecipient"
                    },
                    "type": "array"
                },
                "reportLinkNum": {
                    "description": "The number of links associated with the report, where each link corresponds to a generated report",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "schedule": {
                    "description": "A cron schedule that indicates when the report will be delivered via email",
                    "example": "0 7 * * 1",
                    "type": "string"
                },
                "scheduleTimezone": {
                    "description": "The sepecific timezone for the scheduled report",
                    "example": "America/Los_Angeles",
                    "type": "string"
                },
                "type": {
                    "description": "The report type. Acceptable values are: Alert,Alert SLA,Alert threshold,Alert trends,Host CPU,Host group inventory,Host inventory,Host metric trends,Interfaces Bandwidth,Netflow device metric,Service Level Agreement,Website Service Overview,Word template,Audit Log,Alert Forecasting,Dashboard,Website SLA,User,Role",
                    "example": "Alert",
                    "type": "string"
                },
                "userPermission": {
                    "description": "The permissions associated with the user who made the API call",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "type": "object"
        },
        "ReportGroup": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "matchedReportCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "reportsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "userPermission": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/ReportGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReportPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/ReportBase"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReportRecipient": {
            "properties": {
                "additionInfo": {
                    "description": "If the type is admin and the method is email, the field should indicate the actual email address of the admin",
                    "readOnly": true,
                    "type": "string"
                },
                "addr": {
                    "description": "This should be a username if type=admin, or an email address if type=arbitrary",
                    "example": "sarah",
                    "type": "string"
                },
                "method": {
                    "description": "This should always be email",
                    "example": "email",
                    "type": "string"
                },
                "type": {
                    "description": "Where admin refers to a user in the account and arbitrary refers to an email address not associated with a user account.Acceptable values are: admin, arbitrary",
                    "example": "admin",
                    "type": "string"
                }
            },
            "required": [
                "addr",
                "type"
            ],
            "type": "object"
        },
        "RestAppliesToFunctionPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/AppliesToFunction"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RestEventSourceFilter": {
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RestIPMIEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "checkInterval": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "RestSchedule": {
            "properties": {
                "cron": {
                    "description": "The cron schedule for when the scan should be run",
                    "example": "12 * * * *",
                    "type": "string"
                },
                "notify": {
                    "description": "Whether or not an email should be sent when the scan finishes",
                    "example": false,
                    "type": "boolean"
                },
                "recipients": {
                    "description": "The recipients that should receive the notification of the scan finish",
                    "example": "[\"sarah@logicmonitor.com\" ]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timezone": {
                    "description": "The timezone for the schedule",
                    "example": "America/Los_Angeles",
                    "type": "string"
                },
                "type": {
                    "description": "The type of schedule. Possible values are manual (no schedule), hourly, daily, weekly, monthly",
                    "example": "manual",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResultItem": {
            "properties": {
                "bottomLabel": {
                    "readOnly": true,
                    "type": "string"
                },
                "colorLevel": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "value": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Role": {
            "properties": {
                "acctRequireTwoFA": {
                    "description": "Whether Two-Factor Authentication should be required for the entire account",
                    "readOnly": true,
                    "type": "boolean"
                },
                "associatedUserCount": {
                    "description": "The count of the users which are belongs to the role",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "customHelpLabel": {
                    "description": "The label for the custom help URL as it will appear in the Help & Support dropdown menu",
                    "example": "Internal Support Resources",
                    "type": "string"
                },
                "customHelpURL": {
                    "description": "The URL that should be added to the Help & Support dropdown menu",
                    "example": "https://logicmonitor.com/support",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the role",
                    "example": "Administrator can do everything, including security-sensitive actions",
                    "type": "string"
                },
                "enableRemoteSessionInCompanyLevel": {
                    "description": "Whether Remote Session should be enabled at the account level",
                    "readOnly": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "The Id of the role",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the role",
                    "example": "administrator",
                    "type": "string"
                },
                "privileges": {
                    "description": "The account privileges associated with the role. Privileges can be added to a role for each area of your account",
                    "items": {
                        "$ref": "#/definitions/Privilege"
                    },
                    "type": "array"
                },
                "requireEULA": {
                    "description": "Whether or not users assigned this role should be required to acknowledge the EULA (end user license agreement)",
                    "example": true,
                    "type": "boolean"
                },
                "twoFARequired": {
                    "description": "Whether Two-Factor Authentication should be required for this role",
                    "example": true,
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "privileges"
            ],
            "type": "object"
        },
        "RolePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RoleReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns displayed in the report",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "displayFormat": {
                            "description": "The display format for the report. Acceptable values are: list, detail",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "role"
        },
        "RowData": {
            "properties": {
                "cells": {
                    "items": {
                        "$ref": "#/definitions/CellData"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "deviceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SaasNetScan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "accessKey": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "bearerToken": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "groupId": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        },
                        "rootName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "saasService": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "secretKey": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ScriptAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "type": "string"
                        },
                        "linuxCmdline": {
                            "type": "string"
                        },
                        "linuxScript": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "winCmdline": {
                            "type": "string"
                        },
                        "winScript": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_script"
        },
        "ScriptCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "type": "string"
                        },
                        "linuxCmdline": {
                            "type": "string"
                        },
                        "linuxScript": {
                            "type": "string"
                        },
                        "scriptType": {
                            "type": "string"
                        },
                        "windowsCmdline": {
                            "type": "string"
                        },
                        "windowsScript": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "script"
        },
        "ScriptERIDiscoveryAttributeV2": {
            "properties": {
                "groovyScript": {
                    "type": "string"
                },
                "linuxCmdline": {
                    "type": "string"
                },
                "linuxScript": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "winCmdline": {
                    "type": "string"
                },
                "winScript": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "ScriptEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "description": "The groovy script contents, if scriptType = embed",
                            "type": "string"
                        },
                        "linuxCmdline": {
                            "description": "Linux script arguments, if applicable",
                            "type": "string"
                        },
                        "linuxScript": {
                            "description": "The linux script name, if scriptType = file",
                            "type": "string"
                        },
                        "schedule": {
                            "description": "The polling interval for the EventSource",
                            "format": "int32",
                            "type": "integer"
                        },
                        "scriptType": {
                            "description": "The type of script: embed | file",
                            "type": "string"
                        },
                        "windowsCmdline": {
                            "description": "Windows script arguments, if applicable",
                            "type": "string"
                        },
                        "windowsScript": {
                            "description": "The windows script name, if scriptType = file",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "scriptevent"
        },
        "ScriptNetscan": {
            "allOf": [
                {
                    "$ref": "#/definitions/Netscan"
                },
                {
                    "properties": {
                        "defaultGroup": {
                            "description": "The ID of the default group to add discovered devices to",
                            "example": 1,
                            "format": "int32",
                            "type": "integer"
                        },
                        "defaultGroupFullPath": {
                            "description": "The full path of the default group to add discovered devices to",
                            "example": "lm/prod/servers",
                            "type": "string"
                        },
                        "groovyScript": {
                            "description": "For embedded script scans, the groovy script contents",
                            "example": "testing",
                            "type": "string"
                        },
                        "groovyScriptParams": {
                            "description": "For embedded script scans, the groovy script parameters",
                            "example": "prod=true",
                            "type": "string"
                        },
                        "linuxScript": {
                            "type": "string"
                        },
                        "linuxScriptParams": {
                            "type": "string"
                        },
                        "scriptParams": {
                            "description": "The parameters for an external script",
                            "example": "prod=true",
                            "type": "string"
                        },
                        "scriptPath": {
                            "description": "The script path for an external script",
                            "example": "C://scripts",
                            "type": "string"
                        },
                        "scriptType": {
                            "description": "For script scans, the type of script. Options are embeded and external",
                            "example": "embeded",
                            "type": "string"
                        },
                        "windowsScript": {
                            "type": "string"
                        },
                        "windowsScriptParams": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "scriptType"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "script"
        },
        "SDKScriptCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "type": "string"
                        },
                        "sdkName": {
                            "type": "string"
                        },
                        "sdkVersion": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "groovyScript",
                        "sdkName",
                        "sdkVersion"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "sdkscript"
        },
        "SDKScriptDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "groovyScript": {
                            "type": "string"
                        },
                        "sdkName": {
                            "type": "string"
                        },
                        "sdkVersion": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "groovyScript",
                        "sdkName",
                        "sdkVersion"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_sdkscript"
        },
        "SDT": {
            "discriminator": "type",
            "properties": {
                "admin": {
                    "description": "The name of the user that created the SDT",
                    "readOnly": true,
                    "type": "string"
                },
                "comment": {
                    "description": "The notes associated with the SDT",
                    "example": "Emergency prod deployment",
                    "type": "string"
                },
                "duration": {
                    "description": "The duration of the SDT in minutes",
                    "example": 138,
                    "format": "int32",
                    "type": "integer"
                },
                "endDateTime": {
                    "description": "The epoch time, in milliseconds, that the SDT will end",
                    "example": 1534554000000,
                    "format": "int64",
                    "type": "integer"
                },
                "endDateTimeOnLocal": {
                    "description": "The date, time and time zone that the SDT will end at",
                    "readOnly": true,
                    "type": "string"
                },
                "endHour": {
                    "description": "1 | 2....| 24 The hour that the SDT ends for a repeating SDT",
                    "example": 5,
                    "format": "int32",
                    "type": "integer"
                },
                "endMinute": {
                    "description": "1 | 2....| 60 The minute of the hour that the SDT ends for a repeating SDT",
                    "example": 18,
                    "format": "int32",
                    "type": "integer"
                },
                "hour": {
                    "description": "1 | 2....| 24 The hour that the SDT will start for a repeating SDT (daily, weekly, or monthly)",
                    "example": 3,
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The Id of the SDT. This value will be in the following format \"XX_##\" where XX will refer to the type of SDT and ## will refer to the number of SDTs of that type",
                    "readOnly": true,
                    "type": "string"
                },
                "isEffective": {
                    "description": "true: the SDT is currently actice\nfalse: the SDT is currently inactive",
                    "readOnly": true,
                    "type": "boolean"
                },
                "minute": {
                    "description": "1 | 2....| 60 The minute of the hour that the SDT should begin for a repeating SDT",
                    "example": 6,
                    "format": "int32",
                    "type": "integer"
                },
                "monthDay": {
                    "description": "1 | 2....| 31 The day of the month that the SDT will be active for a monthly SDT",
                    "example": 7,
                    "format": "int32",
                    "type": "integer"
                },
                "sdtType": {
                    "example": "oneTime",
                    "type": "string"
                },
                "startDateTime": {
                    "description": "The epoch time, in milliseconds, that the SDT will start",
                    "example": 1534460400000,
                    "format": "int64",
                    "type": "integer"
                },
                "startDateTimeOnLocal": {
                    "description": "The date, time and time zone that the SDT will end at",
                    "readOnly": true,
                    "type": "string"
                },
                "timezone": {
                    "description": "The specific timezone for SDT",
                    "example": "America/Los_Angeles",
                    "type": "string"
                },
                "type": {
                    "description": "The type resource that this SDT is for: ServiceSDT | CollectorSDT | DeviceDataSourceInstanceSDT | DeviceBatchJobSDT | DeviceClusterAlertDefSDT | DeviceDataSourceInstanceGroupSDT | DeviceDataSourceSDT | DeviceEventSourceSDT | DeviceGroupSDT | DeviceSDT | WebsiteCheckpointSDT | WebsiteGroupSDT | WebsiteSDT",
                    "example": "DeviceGroupSDT",
                    "type": "string"
                },
                "weekDay": {
                    "example": "Sunday",
                    "type": "string"
                },
                "weekOfMonth": {
                    "description": "The weel of the month that the SDT will be active for a monthly SDT",
                    "example": "1",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "SDTHistory": {
            "properties": {
                "admin": {
                    "description": "The user that added the SDT",
                    "example": "sarah@logicmonitor.com",
                    "readOnly": true,
                    "type": "string"
                },
                "comment": {
                    "description": "The comment associated with the SDT",
                    "example": "migrating devices to new network and new IP addresses",
                    "readOnly": true,
                    "type": "string"
                },
                "duration": {
                    "description": "The duration of the SDT, in minutes",
                    "example": 456,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "endEpoch": {
                    "description": "The end epoch for the SDT",
                    "example": 1475902808000,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the SDT",
                    "example": "b-nTH4ECTH2rZ-Q548GOKg",
                    "readOnly": true,
                    "type": "string"
                },
                "itemId": {
                    "description": "The ID of the resource in SDT, e.g. the group or device in SDT",
                    "example": 1,
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "startEpoch": {
                    "description": "The start epoch for the SDT",
                    "example": 1475875446000,
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "type": {
                    "description": "The SDT type",
                    "example": "DeviceGroupSDT",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SDTPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDT"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ServiceAlert": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "deviceId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "deviceId"
                    ],
                    "type": "object"
                }
            ]
        },
        "ServiceSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "deviceDisplayName": {
                            "type": "string"
                        },
                        "deviceId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "servicesdt"
        },
        "SiteMonitorCheckpoint": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayPrio": {
                    "format": "int32",
                    "type": "integer"
                },
                "geoInfo": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "isEnabledInRoot": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "name": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "description"
            ],
            "type": "object"
        },
        "SiteMonitorCheckPointPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SiteMonitorCheckpoint"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SlaMetric": {
            "properties": {
                "excludeSDT": {
                    "type": "boolean"
                },
                "groupName": {
                    "type": "string"
                },
                "websiteName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SLAReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns displayed in the report",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "dayInOneWeek": {
                            "description": "The days of the week that the SLA report should take into account, where multiple values are separated by commas and * refers to all days of the week",
                            "type": "string"
                        },
                        "displaySummary": {
                            "description": "If true, the SLA summary (total %) will be displayed",
                            "type": "boolean"
                        },
                        "displayWithAvailability": {
                            "description": "If true, only devices with less than 100% availability will be displayed in the report",
                            "type": "boolean"
                        },
                        "metrics": {
                            "description": "The datapoints and corresponding SLA thresholds that will be included in the report, where each metric includes seven fields: groupName, deviceName, dataSourceFullName, dataSourceId, instances, metric and threshold. Threshold should comprise of an operator and a number separated by a space, where valid operators are >, <, !=, =, >= and <=",
                            "items": {
                                "$ref": "#/definitions/SlaMetric"
                            },
                            "type": "array"
                        },
                        "periodInOneDay": {
                            "description": "The hours of each selected day that the SLA report should take into account, where * refers to all hours",
                            "type": "string"
                        },
                        "timezone": {
                            "description": "The specific timezone for the report",
                            "type": "string"
                        },
                        "unmonitoredTime": {
                            "description": "0|1|2 - How the time we have no data for the device should be counted, where 1 = ignore no data (subtract from total time), 2 = count as violation (subtract from uptime), 3 = count as available (add to uptime)",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "metrics"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "service level agreement"
        },
        "SNMPAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "descriptionOID": {
                            "type": "string"
                        },
                        "discoveryType": {
                            "type": "string"
                        },
                        "enableSNMPILP": {
                            "type": "boolean"
                        },
                        "externalResourceID": {
                            "type": "string"
                        },
                        "externalResourceType": {
                            "type": "string"
                        },
                        "ILP": {
                            "items": {
                                "$ref": "#/definitions/SNMPILP"
                            },
                            "type": "array"
                        },
                        "lookupOID": {
                            "type": "string"
                        },
                        "OID": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "OID",
                        "discoveryType",
                        "lookupOID"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_snmp"
        },
        "SNMPCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "snmp"
        },
        "SNMPILP": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "OID": {
                    "type": "string"
                }
            },
            "required": [
                "OID",
                "name"
            ],
            "type": "object"
        },
        "SnmpTrapEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "snmptrap"
        },
        "StatsDGraph": {
            "properties": {
                "maxValue": {
                    "format": "double",
                    "type": "number"
                },
                "metrics": {
                    "items": {
                        "$ref": "#/definitions/StatsDMetricDefinition"
                    },
                    "type": "array"
                },
                "minValue": {
                    "format": "double",
                    "type": "number"
                },
                "namespace": {
                    "type": "string"
                },
                "scaleUnit": {
                    "format": "int32",
                    "type": "integer"
                },
                "verticalLabel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatsDGraphDisplay": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "legend": {
                    "type": "string"
                },
                "option": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatsDMetricDefinition": {
            "properties": {
                "aggregateFunction": {
                    "type": "string"
                },
                "consolidateFunction": {
                    "format": "int32",
                    "type": "integer"
                },
                "display": {
                    "$ref": "#/definitions/StatsDGraphDisplay"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatsDWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "graphInfo": {
                            "$ref": "#/definitions/StatsDGraph"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "statsd"
        },
        "SysLogEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "syslog"
        },
        "TableWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "columns": {
                            "items": {
                                "$ref": "#/definitions/TableWidgetColumn"
                            },
                            "type": "array"
                        },
                        "forecast": {
                            "$ref": "#/definitions/TableWidgetForecastConfiguration"
                        },
                        "rows": {
                            "items": {
                                "$ref": "#/definitions/TableWidgetRow"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "columns",
                        "rows"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "table"
        },
        "TableWidgetColumn": {
            "properties": {
                "alternateDataPoints": {
                    "items": {
                        "$ref": "#/definitions/TableWidgetDataPoint"
                    },
                    "type": "array"
                },
                "columnName": {
                    "type": "string"
                },
                "dataPoint": {
                    "$ref": "#/definitions/TableWidgetDataPoint"
                },
                "enableForecast": {
                    "type": "boolean"
                },
                "roundingDecimal": {
                    "format": "int32",
                    "type": "integer"
                },
                "rpn": {
                    "type": "string"
                }
            },
            "required": [
                "columnName",
                "dataPoint"
            ],
            "type": "object"
        },
        "TableWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "columnHeaders": {
                            "items": {
                                "$ref": "#/definitions/ColumnHeader"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "rows": {
                            "items": {
                                "$ref": "#/definitions/RowData"
                            },
                            "readOnly": true,
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "table"
        },
        "TableWidgetDataPoint": {
            "properties": {
                "dataPointId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataPointName": {
                    "type": "string"
                },
                "dataSourceFullName": {
                    "type": "string"
                },
                "dataSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "isMultiple": {
                    "type": "boolean"
                }
            },
            "required": [
                "dataPointId",
                "dataSourceId"
            ],
            "type": "object"
        },
        "TableWidgetForecastConfiguration": {
            "properties": {
                "algorithm": {
                    "description": "Forecast method for the widget :Linear | ARIMA",
                    "readOnly": true,
                    "type": "string"
                },
                "confidence": {
                    "description": "The percent confidence that should be required for a forecasted alert.",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "severity": {
                    "description": "\tThe minimum alert severity the forecasting should include, one of warn | error | critical",
                    "readOnly": true,
                    "type": "string"
                },
                "timeRange": {
                    "description": "The training data time range (the data on which forecasting is calculated). Options are Last 7 days, Last 14 days, Last 30 days, Last calendar month, Last 365 days or a custom time range",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TableWidgetInstanceCell": {
            "properties": {
                "dataPointId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "dataPointName": {
                    "readOnly": true,
                    "type": "string"
                },
                "instanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "instanceName": {
                    "readOnly": true,
                    "type": "string"
                },
                "validationStatusCode": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "required": [
                "instanceId"
            ],
            "type": "object"
        },
        "TableWidgetRow": {
            "properties": {
                "deviceDisplayName": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "groupFullPath": {
                    "readOnly": true,
                    "type": "string"
                },
                "groupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "instances": {
                    "items": {
                        "$ref": "#/definitions/TableWidgetInstanceCell"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "label": {
                    "type": "string"
                }
            },
            "required": [
                "deviceId"
            ],
            "type": "object"
        },
        "TCPCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "encoding": {
                            "type": "string"
                        },
                        "payload": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        },
                        "timeout": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "tcp"
        },
        "TextWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "content": {
                            "description": "The html content that the text widget should display",
                            "type": "string"
                        }
                    },
                    "required": [
                        "content"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "text"
        },
        "TreeNode": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userPermission": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UDPCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "payload": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "udp"
        },
        "UnmonitoredDevicePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/UnmonitoredDevices"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UnmonitoredDevices": {
            "properties": {
                "collectorDescription": {
                    "readOnly": true,
                    "type": "string"
                },
                "collectorId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "deviceStatus": {
                    "readOnly": true,
                    "type": "string"
                },
                "deviceType": {
                    "readOnly": true,
                    "type": "string"
                },
                "displayAs": {
                    "readOnly": true,
                    "type": "string"
                },
                "dns": {
                    "readOnly": true,
                    "type": "string"
                },
                "endDate": {
                    "readOnly": true,
                    "type": "string"
                },
                "endTimestamp": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "forwardIp": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "ip": {
                    "readOnly": true,
                    "type": "string"
                },
                "manufacturer": {
                    "readOnly": true,
                    "type": "string"
                },
                "nseId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nseScanId": {
                    "readOnly": true,
                    "type": "string"
                },
                "nspId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "nspName": {
                    "readOnly": true,
                    "type": "string"
                },
                "ports": {
                    "readOnly": true,
                    "type": "string"
                },
                "status": {
                    "readOnly": true,
                    "type": "string"
                },
                "sysName": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateReason": {
            "properties": {
                "clientIp": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "timeEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "timeStr": {
                    "type": "string"
                },
                "updateReason": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Usage": {
            "properties": {
                "numberOfDevices": {
                    "description": "Sum of numOfStandardDevices, numOfCombinedAWSDevices, numOfCombinedAzureDevices, and numOfCombinedGCPDevices",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numberOfKubernetesDevices": {
                    "description": "Number of monitored Kubernetes Nodes, Pods, and Services",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numberOfStandardDevices": {
                    "description": "Number of standard devices",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfAWSDevices": {
                    "description": "Number of AWS resources not monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfAzureDevices": {
                    "description": "Number of Azure resources not monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfCombinedAWSDevices": {
                    "description": "Number of AWS resources monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfCombinedAzureDevices": {
                    "description": "Number of Azure resources monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfCombinedGcpDevices": {
                    "description": "Number of GCP resources monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfConfigSourceDevices": {
                    "description": "Number of devices with active ConfigSources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfGcpDevices": {
                    "description": "Number of GCP resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfServices": {
                    "description": "Number of services (created via LM Service Insight)",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfStoppedAWSDevices": {
                    "description": "Number of stopped AWS resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfStoppedAzureDevices": {
                    "description": "Number of stopped Azure resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfStoppedGcpDevices": {
                    "description": "Number of stopped GCP resources not monitored with a local Collector",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfTerminatedAWSDevices": {
                    "description": "Number of terminated AWS resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfTerminatedAzureDevices": {
                    "description": "Number of terminated Azure resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfTerminatedGcpCloudDevices": {
                    "description": "Number of terminated GCP resources",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfWebsites": {
                    "description": "Number of websites",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UserFilter": {
            "properties": {
                "apiOnlyUser": {
                    "description": "If the user is API only user. Acceptable values are: all, yes, no",
                    "type": "string"
                },
                "email": {
                    "description": "The emails of the user",
                    "type": "string"
                },
                "enable2fa": {
                    "description": "Whether does the user enabled 2FA. Acceptable values are: all, yes, no",
                    "type": "string"
                },
                "firstName": {
                    "description": "The first name of the user",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user",
                    "type": "string"
                },
                "roleAssignment": {
                    "description": "Which roles is the user belongs to",
                    "type": "string"
                },
                "status": {
                    "description": "The user status. Acceptable values are: all, active, suspended",
                    "type": "string"
                },
                "username": {
                    "description": "The username of the user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "columns": {
                            "description": "The columns displayed in the report",
                            "items": {
                                "$ref": "#/definitions/DynamicColumn"
                            },
                            "type": "array"
                        },
                        "sortedBy": {
                            "description": "The sort by method",
                            "type": "string"
                        },
                        "userFilter": {
                            "$ref": "#/definitions/UserFilter",
                            "description": "The filter for the report"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "user"
        },
        "VirtualDataPoint": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "rpn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebCheck": {
            "allOf": [
                {
                    "$ref": "#/definitions/Website"
                },
                {
                    "properties": {
                        "alertExpr": {
                            "description": "The threshold (in days) for triggering SSL certification alerts",
                            "example": "< 200 100 50",
                            "type": "string"
                        },
                        "domain": {
                            "description": "The domain of the service. This is the base URL of the service",
                            "example": "www.ebay.com",
                            "type": "string"
                        },
                        "ignoreSSL": {
                            "description": "Whether or not SSL should be ignored, the default value is true",
                            "example": "true",
                            "type": "boolean"
                        },
                        "pageLoadAlertTimeInMS": {
                            "description": "The time in milliseconds that the page must load within for each step to avoid triggering an alert",
                            "example": 30000,
                            "format": "int64",
                            "type": "integer"
                        },
                        "schema": {
                            "description": "The scheme or protocol associated with the URL to check. Acceptable values are: http, https",
                            "example": "https",
                            "type": "string"
                        },
                        "steps": {
                            "description": "An object comprising one or more steps, see the table below for the properties included in each step",
                            "items": {
                                "$ref": "#/definitions/WebCheckStep"
                            },
                            "type": "array"
                        },
                        "triggerSSLExpirationAlert": {
                            "description": "Whether or not SSL expiration alerts should be triggered",
                            "example": false,
                            "type": "boolean"
                        },
                        "triggerSSLStatusAlert": {
                            "description": "Whether or not SSL status alerts should be triggered",
                            "example": false,
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "domain"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "webcheck"
        },
        "WebCheckStep": {
            "properties": {
                "auth": {
                    "$ref": "#/definitions/Authentication"
                },
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "followRedirection": {
                    "example": "true",
                    "type": "boolean"
                },
                "fullpageLoad": {
                    "example": false,
                    "type": "boolean"
                },
                "HTTPBody": {
                    "type": "string"
                },
                "HTTPHeaders": {
                    "type": "string"
                },
                "HTTPMethod": {
                    "example": "GET",
                    "type": "string"
                },
                "HTTPVersion": {
                    "example": "1.1",
                    "type": "string"
                },
                "invertMatch": {
                    "example": false,
                    "type": "boolean"
                },
                "keyword": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "matchType": {
                    "example": "plain",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "postDataEditType": {
                    "example": "raw",
                    "type": "string"
                },
                "reqScript": {
                    "type": "string"
                },
                "reqType": {
                    "type": "string"
                },
                "requireAuth": {
                    "example": false,
                    "type": "boolean"
                },
                "respScript": {
                    "type": "string"
                },
                "respType": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "example": "config",
                    "readOnly": true,
                    "type": "string"
                },
                "url": {
                    "example": "/",
                    "type": "string"
                },
                "useDefaultRoot": {
                    "example": "true",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "WebPageCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "connectTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "followRedirect": {
                            "type": "boolean"
                        },
                        "ip": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        },
                        "readTimeout": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "request": {
                            "type": "string"
                        },
                        "useSSL": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "webpage"
        },
        "WebResource": {
            "properties": {
                "type": {
                    "description": "html | iframe",
                    "type": "string"
                },
                "URL": {
                    "description": "If type = html this should be a url, if type = iframe this should be an iframe",
                    "type": "string"
                }
            },
            "required": [
                "URL",
                "type"
            ],
            "type": "object"
        },
        "Website": {
            "discriminator": "type",
            "properties": {
                "checkpoints": {
                    "description": "The checkpoints from the which the website is monitored. This object should reference each location specified in testLocation in addition to an 'Overall' checkpoint",
                    "items": {
                        "$ref": "#/definitions/WebsiteCheckPoint"
                    },
                    "type": "array"
                },
                "collectors": {
                    "description": "The collectors that are monitoring the website, if the website is internal",
                    "items": {
                        "$ref": "#/definitions/WebsiteCollectorInfo"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "description": {
                    "description": "The description of the website",
                    "example": "Monitor Ebay site response times",
                    "type": "string"
                },
                "disableAlerting": {
                    "description": "true: alerting is disabled for the website\nfalse: alerting is enabled for the website\nIf stopMonitoring=true, then alerting will also by default be disabled for the website",
                    "type": "boolean"
                },
                "globalSmAlertCond": {
                    "description": "The number of test locations that checks must fail at to trigger an alert, where the alert triggered will be consistent with the value of overallAlertLevel. Possible values and corresponding number of Site Monitor locations are\n0 : all\n1 : half\n2 : more than one\n3 : any",
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                },
                "groupId": {
                    "description": "The id of the group the website is in",
                    "example": 1,
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "id": {
                    "description": "The id of the website",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "individualAlertLevel": {
                    "description": "warn | error | critical\nThe level of alert to trigger if the website fails a check from an individual test location",
                    "example": "warn",
                    "type": "string"
                },
                "individualSmAlertEnable": {
                    "description": "true: an alert will be triggered if a check fails from an individual test location\nfalse: an alert will not be triggered if a check fails from an individual test location",
                    "example": false,
                    "type": "boolean"
                },
                "isInternal": {
                    "description": "Whether or not the website is internal",
                    "example": false,
                    "type": "boolean"
                },
                "lastUpdated": {
                    "description": "The time (in epoch format) that the website was updated",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the website",
                    "example": "Ebay",
                    "type": "string"
                },
                "overallAlertLevel": {
                    "description": "warn | error | critical\nThe level of alert to trigger if the website fails the number of checks specified by transition from the test locations specified by globalSmAlertCond",
                    "example": "warn",
                    "type": "string"
                },
                "pollingInterval": {
                    "description": "1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\nThe polling interval for the website, in units of minutes. This value indicates how often the website is checked. The minimum is 1 minute, and the maximum is 10 minutes",
                    "example": 5,
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "description": "The properties associated with the website",
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "status": {
                    "description": "Whether is the website dead (the collector is down) or not",
                    "readOnly": true,
                    "type": "string"
                },
                "stopMonitoring": {
                    "description": "true: monitoring is disabled for the website\nfalse: monitoring is enabled for the website\nIf stopMonitoring=true, then alerting will also by default be disabled for the website",
                    "type": "boolean"
                },
                "stopMonitoringByFolder": {
                    "description": "true: monitoring is disabled for all services in the website's folder\nfalse: monitoring is not disabled for all services in website's folder",
                    "readOnly": true,
                    "type": "boolean"
                },
                "template": {
                    "description": "The website template",
                    "type": "object"
                },
                "testLocation": {
                    "$ref": "#/definitions/WebsiteLocation",
                    "description": "The locations from which the website is monitored. If the website is internal, this field should include Collectors. If Non-Internal, possible test locations are:\n1 : US - LA\n2 : US - DC\n3 : US - SF\n4 : Europe - Dublin\n5 : Asia - Singapore\n6 : Australia - Sydney\ntestLocation:\"{all:true}\" indicates that the service will be monitored from all checkpoint locations\ntestLocation:\"{smgIds:[1,2,3]}\" indicates that the service will be monitored from checkpoint locations 1, 2 and 3\ntestLocation:\"{collectorIds:[85,90]}\" indicates that the service will be monitored by Collectors 85 and 90"
                },
                "transition": {
                    "description": "1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 30 | 60\nThe number of checks that must fail before an alert is triggered",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of the website. Acceptable values are: pingcheck, webcheck",
                    "example": "webcheck",
                    "type": "string"
                },
                "useDefaultAlertSetting": {
                    "description": "true: The alert settings configured in the website Default Settings will be used\nfalse: Service Default Settings will not be used, and you will need to specify individualSMAlertEnable, individualAlertLevel, globalSmAlertConf, overallAlertLevel and pollingInterval",
                    "example": true,
                    "type": "boolean"
                },
                "useDefaultLocationSetting": {
                    "description": "true: The checkpoint locations configured in the website Default Settings will be used\nfalse: The checkpoint locations specified in the testLocation will be used",
                    "example": false,
                    "type": "boolean"
                },
                "userPermission": {
                    "description": "write | read | ack. The permission level of the user that made the API request",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "testLocation",
                "type"
            ],
            "type": "object"
        },
        "WebsiteCheckPoint": {
            "properties": {
                "geoInfo": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "smgId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebsiteCheckpointRawData": {
            "properties": {
                "nextPageParams": {
                    "readOnly": true,
                    "type": "string"
                },
                "time": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "values": {
                    "items": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WebsiteCheckpointSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "checkpointId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "checkpointName": {
                            "type": "string"
                        },
                        "websiteName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitecheckpointsdt"
        },
        "WebsiteCollectorInfo": {
            "properties": {
                "collectorGroupId": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "collectorGroupName": {
                    "readOnly": true,
                    "type": "string"
                },
                "description": {
                    "readOnly": true,
                    "type": "string"
                },
                "hostname": {
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "status": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebsiteGraphWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "checkpointId": {
                            "description": "The id of the checkpoint this graph is associated with",
                            "format": "int32",
                            "type": "integer"
                        },
                        "geoInfo": {
                            "description": "The checkpoint location this graph is associated with",
                            "readOnly": true,
                            "type": "string"
                        },
                        "graph": {
                            "description": "The name of the graph that was added as a widget",
                            "type": "string"
                        },
                        "websiteName": {
                            "description": "The name of the website this graph is associated with",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "checkpointId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "sgraph"
        },
        "WebsiteGroup": {
            "properties": {
                "description": {
                    "description": "The description of the group",
                    "example": "Amazon web and ping checks",
                    "type": "string"
                },
                "disableAlerting": {
                    "description": "true: alerting is disabled for the websites in the group\nfalse: alerting is enabled for the websites in the group\nIf stopMonitoring=true, then alerting will also by default be disabled for the websites in the group",
                    "example": false,
                    "type": "boolean"
                },
                "fullPath": {
                    "description": "The full path of the group",
                    "readOnly": true,
                    "type": "string"
                },
                "hasWebsitesDisabled": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "id": {
                    "description": "The Id of the group",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the group",
                    "example": "Amazon Website Checks",
                    "type": "string"
                },
                "numOfDirectSubGroups": {
                    "description": "The number of direct website groups in this group (exlcuding those in subgroups)",
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfDirectWebsites": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "numOfWebsites": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "parentId": {
                    "description": "The Id of the parent group. If parentId=1 then the group exists under the root  group",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/NameAndValue"
                    },
                    "type": "array"
                },
                "stopMonitoring": {
                    "description": "true: monitoring is disabled for the websites in the group\nfalse: monitoring is enabled for the websites in the group\nIf stopMonitoring=true, then alerting will also by default be disabled for the websites in the group",
                    "type": "boolean"
                },
                "testLocation": {
                    "$ref": "#/definitions/WebsiteLocation"
                },
                "userPermission": {
                    "description": "The permission level of the user that made the API request. Acceptable values are: write, read, ack",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "WebsiteGroupData": {
            "properties": {
                "websiteGroupName": {
                    "description": "The name of the group for which member website status should be displayed",
                    "type": "string"
                },
                "websiteName": {
                    "description": "The name of the website status should be displayed",
                    "type": "string"
                }
            },
            "required": [
                "websiteGroupName",
                "websiteName"
            ],
            "type": "object"
        },
        "WebsiteGroupPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/WebsiteGroup"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebsiteGroupSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "websiteGroupId": {
                            "description": "The Id of the service group that the SDT applies to",
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteGroupName": {
                            "description": "The name of the service group that the SDT applies to",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "websiteGroupId"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitegroupsdt"
        },
        "WebsiteGroupSDTHistoryPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDTHistory"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebsiteIndividualsStatusWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "graph": {
                            "description": "The website graph name - this should always be checkpointStatus",
                            "type": "string"
                        },
                        "isInternal": {
                            "description": "Whether it is an internal website check",
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "locations": {
                            "description": "The checkpoint locations for which data is displayed",
                            "items": {
                                "$ref": "#/definitions/LocationData"
                            },
                            "type": "array"
                        },
                        "websiteGroupId": {
                            "description": "The id of the group associated with the website that status is displayed for",
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteGroupName": {
                            "description": "The group associated with the website that status is displayed for",
                            "readOnly": true,
                            "type": "string"
                        },
                        "websiteId": {
                            "description": "The id of the website that status is displayed for",
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteName": {
                            "description": "The name of the website that status is displayed for",
                            "type": "string"
                        }
                    },
                    "required": [
                        "locations"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websiteindividualstatus"
        },
        "WebsiteItemConfig": {
            "properties": {
                "excludeSDT": {
                    "type": "boolean"
                },
                "website": {
                    "type": "string"
                },
                "websiteGroup": {
                    "type": "string"
                }
            },
            "required": [
                "website",
                "websiteGroup"
            ],
            "type": "object"
        },
        "WebsiteLocation": {
            "properties": {
                "all": {
                    "example": "true",
                    "type": "boolean"
                },
                "collectorIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "collectors": {
                    "items": {
                        "$ref": "#/definitions/WebsiteCollectorInfo"
                    },
                    "type": "array"
                },
                "smgIds": {
                    "example": "[1, 2, 4, 3, 5, 6]",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WebsiteNOCItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/NOCItemBase"
                },
                {
                    "properties": {
                        "groupBy": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "websiteGroupName": {
                            "type": "string"
                        },
                        "websiteName": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "websiteGroupName",
                        "websiteName"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "website"
        },
        "WebsiteOverallStatusWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/WebsiteGroupData"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "items"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websiteoverallstatus"
        },
        "WebsiteOverviewReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "description": "The Time Range configured for the report: Last 2 hours | Last 24 hours | Last calendar day | Last 7 days | Last 14 days | Last 30 days | Last calendar month | Last 365 days | Any custom date range in this format: YYYY-MM-dd hh:mm TO YYYY-MM-dd hh:mm",
                            "type": "string"
                        },
                        "displayType": {
                            "description": "1 | 2\n1: Display overall locations\n2: Display overall and individual locations",
                            "format": "int32",
                            "type": "integer"
                        },
                        "exclude100Availability": {
                            "description": "Whether or not websites with 100% availability should be ignored",
                            "type": "boolean"
                        },
                        "excludeSDT": {
                            "description": "Whether or not SDTs periods should be considered for the website's availability",
                            "type": "boolean"
                        },
                        "includeTypes": {
                            "description": "The information that should be included in the report. Options include 1: availability, 2: alerts, 3: graphs",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "items": {
                            "description": "The websites OR website groups (full path) selected for the report, where multiple entities are separated by commas",
                            "type": "string"
                        },
                        "itemsType": {
                            "description": "The type of entities specified in the servicesVal field. Acceptable values are: website, group",
                            "type": "string"
                        }
                    },
                    "required": [
                        "itemsType"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "website service overview"
        },
        "WebsiteOverviewWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "geoInfo": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "graph": {
                            "type": "string"
                        },
                        "websiteId": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteName": {
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "graph"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websiteoverview"
        },
        "WebsitePaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Website"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebsiteSDT": {
            "allOf": [
                {
                    "$ref": "#/definitions/SDT"
                },
                {
                    "properties": {
                        "websiteId": {
                            "description": "The Id of the website that the SDT applies to",
                            "format": "int32",
                            "type": "integer"
                        },
                        "websiteName": {
                            "description": "The name of the website that the SDT applies to",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitesdt"
        },
        "WebsiteSDTHistoryPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/SDTHistory"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WebsiteSLAReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBase"
                },
                {
                    "properties": {
                        "dateRange": {
                            "type": "string"
                        },
                        "dayInOneWeek": {
                            "type": "string"
                        },
                        "metrics": {
                            "items": {
                                "$ref": "#/definitions/SlaMetric"
                            },
                            "type": "array"
                        },
                        "periodInOneDay": {
                            "type": "string"
                        },
                        "timezone": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "metrics"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "website sla"
        },
        "WebsiteSLAWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/Widget"
                },
                {
                    "properties": {
                        "colorThresholds": {
                            "description": "The threshold of color changes",
                            "items": {
                                "$ref": "#/definitions/ColorThreshold"
                            },
                            "type": "array"
                        },
                        "daysInWeek": {
                            "description": "The days that SLA should be computed for, separated by commas. 1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, 5=Thursday, 6=Friday, 7=Saturday",
                            "type": "string"
                        },
                        "items": {
                            "description": "The websites that should be used to compute the SLA",
                            "items": {
                                "$ref": "#/definitions/WebsiteItemConfig"
                            },
                            "type": "array"
                        },
                        "periodInOneDay": {
                            "description": "The period during the selected days that the SLA should be computed for. * = all day, or a time range can be specified in the format of \"hh:mm TO hh:mm\", e.g. \"01:15 TO 17:15\"",
                            "type": "string"
                        },
                        "timezone": {
                            "description": "The specific timezone for the widget",
                            "type": "string"
                        }
                    },
                    "required": [
                        "items"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitesla"
        },
        "WebsiteSLAWidgetData": {
            "allOf": [
                {
                    "$ref": "#/definitions/WidgetData"
                },
                {
                    "properties": {
                        "availability": {
                            "format": "double",
                            "readOnly": true,
                            "type": "number"
                        },
                        "colorLevel": {
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "websitesla"
        },
        "Widget": {
            "discriminator": "type",
            "properties": {
                "dashboardId": {
                    "description": "The id of the dashboard the widget belongs to",
                    "example": 1,
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "The description of the widget",
                    "example": "Devices By Type",
                    "type": "string"
                },
                "id": {
                    "description": "The Id of the widget",
                    "format": "int32",
                    "type": "integer"
                },
                "interval": {
                    "description": "The refresh interval of the widget, in minutes",
                    "example": 5,
                    "format": "int32",
                    "type": "integer"
                },
                "lastUpdatedBy": {
                    "description": "The user that last updated the widget",
                    "readOnly": true,
                    "type": "string"
                },
                "lastUpdatedOn": {
                    "description": "The time that corresponds to when the widget was last updated, in epoch format",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the widget",
                    "example": "Test",
                    "type": "string"
                },
                "theme": {
                    "description": "The color scheme of the widget. Options are: borderPurple | borderGray | borderBlue | solidPurple | solidGray | solidBlue | simplePurple | simpleBlue | simpleGray | newBorderGray | newBorderBlue | newBorderDarkBlue | newSolidGray | newSolidBlue | newSolidDarkBlue | newSimpleGray | newSimpleBlue |newSimpleDarkBlue",
                    "example": "newBorderBlue",
                    "type": "string"
                },
                "timescale": {
                    "description": "The default timescale of the widget",
                    "type": "string"
                },
                "type": {
                    "description": "alert | batchjob | flash | gmap | ngraph | ograph | cgraph | sgraph | netflowgraph | groupNetflowGraph | netflow | groupNetflow | html | bigNumber | gauge | pieChart | table | dynamicTable | deviceSLA | text | statsd | deviceStatus | serviceAlert | noc | websiteOverview | websiteOverallStatus | websiteIndividualStatus | websiteSLA",
                    "example": "bigNumber",
                    "type": "string"
                },
                "userPermission": {
                    "description": "The permission level of the user who last modified the widget",
                    "example": "write",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "dashboardId",
                "name",
                "type"
            ],
            "type": "object"
        },
        "WidgetData": {
            "discriminator": "type",
            "properties": {
                "title": {
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WidgetPaginationResponse": {
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/Widget"
                    },
                    "type": "array"
                },
                "searchId": {
                    "readOnly": true,
                    "type": "string"
                },
                "total": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WidgetToken": {
            "properties": {
                "inheritList": {
                    "items": {
                        "$ref": "#/definitions/WidgetTokenInheritance"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "This is the name of the parent group of devices, if there is one established",
                    "example": "Default Device Group",
                    "type": "string"
                },
                "type": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "description": "this is the name of the child group of devices, if there is one",
                    "example": "Devices by Type/Network",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WidgetTokenInheritance": {
            "properties": {
                "fullpath": {
                    "readOnly": true,
                    "type": "string"
                },
                "value": {
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WindowsEventLogEventSource": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventSource"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "x-discriminator-value": "wineventlog"
        },
        "WMIAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "enableLinkedClassILP": {
                            "type": "boolean"
                        },
                        "enableWmiClassILP": {
                            "type": "boolean"
                        },
                        "externalResourceID": {
                            "type": "string"
                        },
                        "externalResourceType": {
                            "type": "string"
                        },
                        "ILP": {
                            "items": {
                                "$ref": "#/definitions/ILP"
                            },
                            "type": "array"
                        },
                        "linkedClasses": {
                            "items": {
                                "$ref": "#/definitions/LinkedWmiClass"
                            },
                            "type": "array"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "property": {
                            "type": "string"
                        },
                        "wmiClass": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "namespace",
                        "property",
                        "wmiClass"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_wmi"
        },
        "WMICollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "ip": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "methodInputs": {
                            "type": "string"
                        },
                        "methodName": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "queryClass": {
                            "type": "string"
                        },
                        "queryIndex": {
                            "type": "string"
                        },
                        "queryValue": {
                            "type": "string"
                        },
                        "targetPath": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "wmi"
        },
        "XENAutoDiscoveryMethod": {
            "allOf": [
                {
                    "$ref": "#/definitions/AutoDiscoveryMethod"
                },
                {
                    "properties": {
                        "entity": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "entity"
                    ],
                    "type": "object"
                }
            ],
            "x-discriminator-value": "ad_xen"
        },
        "XENCollectorAttribute": {
            "allOf": [
                {
                    "$ref": "#/definitions/CollectorAttribute"
                },
                {
                    "properties": {
                        "counters": {
                            "items": {
                                "$ref": "#/definitions/DataSourceAttribute"
                            },
                            "type": "array"
                        },
                        "xenEntity": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "x-discriminator-value": "xen"
        }
    },
    "externalDocs": {
        "description": "LogicMonitor Support Docs",
        "url": "https://www.logicmonitor.com/support/rest-api-developers-guide/"
    },
    "info": {
        "description": "LogicMonitor is a SaaS-based performance monitoring platform that provides full visibility into complex, hybrid infrastructures, offering granular performance monitoring and actionable data and insights. logicmonitor_sdk enables you to manage your LogicMonitor account programmatically. Note: For Python SDKs, the REQUEST parameters can contain camelCase or an underscore. However, the RESPONSE parameters will always contain an underscore. For example, the REQUEST parameter can be testLocation or test_location. The RESPONSE parameter will be test_location.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "LogicMonitor REST API",
        "version": "2.0.0"
    },
    "paths": {
        "/alert/alerts": {
            "get": {
                "description": "",
                "operationId": "getAlertList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alert list",
                "tags": [
                    "Alerts"
                ]
            }
        },
        "/alert/alerts/{id}": {
            "get": {
                "description": "",
                "operationId": "getAlertById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "needMessage",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "customColumns",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Alert"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alert",
                "tags": [
                    "Alerts"
                ]
            }
        },
        "/alert/alerts/{id}/ack": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ackAlertById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertAck"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "ack alert by id",
                "tags": [
                    "Alerts"
                ]
            }
        },
        "/alert/alerts/{id}/note": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addAlertNoteById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertAck"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add alert note",
                "tags": [
                    "Alerts"
                ]
            }
        },
        "/apiStats/externalApis": {
            "get": {
                "description": "",
                "operationId": "getExternalApiStats",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiPerfMetrics"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get external api stats info",
                "tags": [
                    "ApiPerfStats"
                ]
            }
        },
        "/aws/externalId": {
            "get": {
                "description": "",
                "operationId": "getAwsExternalId",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AwsExternalId"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Get AWS external id",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/dashboard/dashboards": {
            "get": {
                "description": "",
                "operationId": "getDashboardList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get dashboard list",
                "tags": [
                    "Dashboards"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDashboard",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add dashboard",
                "tags": [
                    "Dashboards"
                ]
            }
        },
        "/dashboard/dashboards/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDashboardById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete dashboard",
                "tags": [
                    "Dashboards"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDashboardById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "template",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get dashboard",
                "tags": [
                    "Dashboards"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "The template field works only for the POST API",
                "operationId": "patchDashboardById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "overwriteGroupFields",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update dashboard",
                "tags": [
                    "Dashboards"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "The template field works only for the POST API",
                "operationId": "updateDashboardById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "overwriteGroupFields",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update dashboard",
                "tags": [
                    "Dashboards"
                ]
            }
        },
        "/dashboard/dashboards/{id}/widgets": {
            "get": {
                "description": "",
                "operationId": "getWidgetListByDashboardId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WidgetPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get widget list by DashboardId",
                "tags": [
                    "Dashboards"
                ]
            }
        },
        "/dashboard/groups": {
            "get": {
                "description": "",
                "operationId": "getDashboardGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get dashboard group list",
                "tags": [
                    "Dashboard Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDashboardGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add dashboard group",
                "tags": [
                    "Dashboard Groups"
                ]
            }
        },
        "/dashboard/groups/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDashboardGroupById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "allowNonEmptyGroup",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete dashboard group",
                "tags": [
                    "Dashboard Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDashboardGroupById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "template",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get dashboard group",
                "tags": [
                    "Dashboard Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "The template field works only for the POST API",
                "operationId": "patchDashboardGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update dashboard group",
                "tags": [
                    "Dashboard Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "The template field works only for the POST API",
                "operationId": "updateDashboardGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DashboardGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update dashboard group",
                "tags": [
                    "Dashboard Groups"
                ]
            }
        },
        "/dashboard/widgets": {
            "get": {
                "description": "",
                "operationId": "getWidgetList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WidgetPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get widget list",
                "tags": [
                    "Widgets"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addWidget",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add widget",
                "tags": [
                    "Widgets"
                ]
            }
        },
        "/dashboard/widgets/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteWidgetById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete widget",
                "tags": [
                    "Widgets"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getWidgetById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get widget by id",
                "tags": [
                    "Widgets"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchWidgetById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update widget",
                "tags": [
                    "Widgets"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateWidgetById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Widget"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update widget",
                "tags": [
                    "Widgets"
                ]
            }
        },
        "/dashboard/widgets/{id}/data": {
            "get": {
                "description": "",
                "operationId": "getWidgetDataById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WidgetData"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get widget data",
                "tags": [
                    "Data"
                ]
            }
        },
        "/debug": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "executeDebugCommand",
                "parameters": [
                    {
                        "default": -1,
                        "format": "int32",
                        "in": "query",
                        "name": "collectorId",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Debug"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Debug"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Execute a Collector debug command",
                "tags": [
                    "Debug"
                ]
            }
        },
        "/debug/{id}": {
            "get": {
                "description": "",
                "operationId": "getDebugCommandResult",
                "parameters": [
                    {
                        "default": -1,
                        "format": "int32",
                        "in": "query",
                        "name": "collectorId",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": ".*",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Debug"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Get the result of a Collector debug command",
                "tags": [
                    "Debug"
                ]
            }
        },
        "/device/devicedatasourceinstances/{instanceId}/graphs/{graphId}/data": {
            "get": {
                "description": "",
                "operationId": "getDeviceInstanceGraphDataOnlyByInstanceId",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "graphId",
                        "pattern": "-?\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance data",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/devices": {
            "get": {
                "description": "",
                "operationId": "getDeviceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device list",
                "tags": [
                    "Devices"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDevice",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "addFromWizard",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add a new device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/alertsettings": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceAlertSettingListOfDevice",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSettingPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of alert settings for a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDatasourcePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device datasource list ",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDatasourceInstanceGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device datasource instance group list ",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceDatasourceInstanceGroup",
                "parameters": [
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add device datasource instance group ",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups/{dsigId}/graphs/{ographId}/data": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceGroupOverviewGraphData",
                "parameters": [
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsigId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "ographId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance group overview graph data ",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{deviceDsId}/groups/{id}": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceGroupById",
                "parameters": [
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device datasource instance group ",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceDatasourceInstanceGroupById",
                "parameters": [
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device datasource instance group ",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceDatasourceInstanceGroupById",
                "parameters": [
                    {
                        "description": "The device-datasource ID you'd like to add an instance group for",
                        "format": "int32",
                        "in": "path",
                        "name": "deviceDsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device datasource instance group ",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDatasourceInstancePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance list",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceDatasourceInstance",
                "parameters": [
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add device instance ",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDeviceDatasourceInstanceById",
                "parameters": [
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete a device instance",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceById",
                "parameters": [
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance ",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceDatasourceInstanceById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device instance",
                "tags": [
                    "Datasource Instances"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceDatasourceInstanceById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device instance",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}/data": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceData",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "format": "double",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "datapoints",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceData"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance data",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}/graphs/{graphId}/data": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceGraphData",
                "parameters": [
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "graphId",
                        "pattern": "-?\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance graph data ",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{id}/historysdts": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceSDTHistory",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "The device-datasource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance SDT history",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/alertsettings": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceAlertSettingListOfDSI",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Device-DataSource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSettingPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of alert settings for a device datasource instance",
                "tags": [
                    "Thresholds"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/alertsettings/{id}": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceInstanceAlertSettingById",
                "parameters": [
                    {
                        "description": "Device-DataSource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance alert setting",
                "tags": [
                    "Thresholds"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceDatasourceInstanceAlertSettingById",
                "parameters": [
                    {
                        "description": "Device-DataSource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device instance alert setting",
                "tags": [
                    "Thresholds"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceDatasourceInstanceAlertSettingById",
                "parameters": [
                    {
                        "description": "Device-DataSource ID",
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceAlertSetting"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device instance alert setting",
                "tags": [
                    "Thresholds"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/config": {
            "get": {
                "description": "",
                "operationId": "getDeviceConfigSourceConfigList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDatasourceInstanceConfigPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get detailed config information for the instance",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/config/collectNow": {
            "get": {
                "description": "",
                "operationId": "collectDeviceConfigSourceConfig",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "collect a config for a device",
                "tags": [
                    "Datasource Instances"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{hdsId}/instances/{instanceId}/config/{id}": {
            "get": {
                "description": "",
                "operationId": "getDeviceConfigSourceConfigById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "startEpoch",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "hdsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "instanceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": "[-_a-zA-Z0-9]+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceInstanceConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a config for a device",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{id}": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device datasource ",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{id}/data": {
            "get": {
                "description": "",
                "operationId": "getDeviceDatasourceDataById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": "none",
                        "description": "the aggregate option",
                        "enum": [
                            "average",
                            "first",
                            "last",
                            "max",
                            "min",
                            "none",
                            "sum"
                        ],
                        "in": "query",
                        "name": "aggregate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "format": "double",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "datapoints",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceData"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device datasource data ",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/devicedatasources/{id}/historysdts": {
            "get": {
                "description": "",
                "operationId": "getSDTHistoryByDeviceDataSourceId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT history for the device dataSource",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/properties": {
            "get": {
                "description": "",
                "operationId": "getDevicePropertyList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PropertyPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device properties",
                "tags": [
                    "Devices"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceProperty",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add device property",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{deviceId}/properties/{name}": {
            "delete": {
                "description": "",
                "operationId": "deleteDevicePropertyByName",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete device property",
                "tags": [
                    "Devices"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDevicePropertyByName",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device property by name",
                "tags": [
                    "Devices"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDevicePropertyByName",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device property",
                "tags": [
                    "Devices"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDevicePropertyByName",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device property",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDeviceById",
                "parameters": [
                    {
                        "default": true,
                        "in": "query",
                        "name": "deleteHard",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete a device",
                "tags": [
                    "Devices"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDeviceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device by id",
                "tags": [
                    "Devices"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDevice",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update a device",
                "tags": [
                    "Devices"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDevice",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/alerts": {
            "get": {
                "description": "",
                "operationId": "getAlertListByDeviceId",
                "parameters": [
                    {
                        "default": "instances",
                        "in": "query",
                        "name": "bound",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "needMessage",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "customColumns",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alerts",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/endpoints": {
            "get": {
                "description": "",
                "operationId": "getNetflowEndpointList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "port",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EndpointPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get netflow endpoint list",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/flows": {
            "get": {
                "description": "",
                "operationId": "getNetflowFlowList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FlowRecordPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get netflow flow list",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/historysdts": {
            "get": {
                "description": "",
                "operationId": "getSDTHistoryByDeviceId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT history for the device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/instances": {
            "get": {
                "description": "",
                "operationId": "getDeviceInstanceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDatasourceInstancePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device instance list",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/ports": {
            "get": {
                "description": "",
                "operationId": "getNetflowPortList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ip",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PortPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get netflow port list",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/scheduleAutoDiscovery": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "scheduleAutoDiscoveryByDeviceId",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "schedule active discovery for a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/sdts": {
            "get": {
                "description": "",
                "operationId": "getAllSDTListByDeviceId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDTPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDTs for a device",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/devices/{id}/topTalkersGraph": {
            "get": {
                "description": "",
                "operationId": "getTopTalkersGraph",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "netflowFilter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get top talkers graph",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/device/groups": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group list",
                "tags": [
                    "Device Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add device group",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{deviceGroupId}/clusterAlertConf": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupClusterAlertConfList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfigPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of cluster alert configurations for a device group",
                "tags": [
                    "Thresholds"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceGroupClusterAlertConf",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Add cluster alert configuration",
                "tags": [
                    "Thresholds"
                ]
            }
        },
        "/device/groups/{deviceGroupId}/clusterAlertConf/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDeviceGroupClusterAlertConfById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Delete cluster alert configuration",
                "tags": [
                    "Thresholds"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDeviceGroupClusterAlertConfById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Get cluster alert configuration by id",
                "tags": [
                    "Thresholds"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceGroupClusterAlertConfById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Update cluster alert configuration",
                "tags": [
                    "Thresholds"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceGroupClusterAlertConfById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceClusterAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Update cluster alert configuration",
                "tags": [
                    "Thresholds"
                ]
            }
        },
        "/device/groups/{deviceGroupId}/datasources": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupDatasourceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "includeDisabledDataSourceWithoutInstance",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDatasourcePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group datasource list",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{deviceGroupId}/datasources/{dsId}/alertsettings": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupDatasourceAlertSetting",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSourceAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group datasource alert setting ",
                "tags": [
                    "Thresholds"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceGroupDatasourceAlertSetting",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSourceAlertConfig"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSourceAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group datasource alert setting",
                "tags": [
                    "Thresholds"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceGroupDatasourceAlertSetting",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSourceAlertConfig"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSourceAlertConfig"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group datasource alert setting",
                "tags": [
                    "Thresholds"
                ]
            }
        },
        "/device/groups/{deviceGroupId}/datasources/{id}": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupDatasourceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group datasource",
                "tags": [
                    "Device Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceGroupDatasourceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSource"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group datasource",
                "tags": [
                    "Device Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceGroupDatasourceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "deviceGroupId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSource"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupDataSource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group datasource",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{gid}/properties": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupPropertyList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PropertyPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group properties",
                "tags": [
                    "Device Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addDeviceGroupProperty",
                "parameters": [
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add device group property",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{gid}/properties/{name}": {
            "delete": {
                "description": "",
                "operationId": "deleteDeviceGroupPropertyByName",
                "parameters": [
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete device group property",
                "tags": [
                    "Device Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDeviceGroupPropertyByName",
                "parameters": [
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group property by name",
                "tags": [
                    "Device Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceGroupPropertyByName",
                "parameters": [
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group property",
                "tags": [
                    "Device Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceGroupPropertyByName",
                "parameters": [
                    {
                        "description": "group ID",
                        "format": "int32",
                        "in": "path",
                        "name": "gid",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EntityProperty"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group property",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDeviceGroupById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "deleteChildren",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": true,
                        "in": "query",
                        "name": "deleteHard",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete device group",
                "tags": [
                    "Device Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDeviceGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group",
                "tags": [
                    "Device Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchDeviceGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group",
                "tags": [
                    "Device Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateDeviceGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update device group",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{id}/alerts": {
            "get": {
                "description": "",
                "operationId": "getAlertListByDeviceGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "needMessage",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "customColumns",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group alerts",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{id}/devices": {
            "get": {
                "description": "",
                "operationId": "getImmediateDeviceListByDeviceGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DevicePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get immediate devices under group",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{id}/historysdts": {
            "get": {
                "description": "",
                "operationId": "getSDTHistoryByDeviceGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceGroupSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT history for the group",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/groups/{id}/sdts": {
            "get": {
                "description": "",
                "operationId": "getDeviceGroupSDTList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDTPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get device group SDTs",
                "tags": [
                    "Device Groups"
                ]
            }
        },
        "/device/instances/datafetch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "fetchDeviceInstancesData",
                "parameters": [
                    {
                        "default": "none",
                        "description": "the aggregate option",
                        "enum": [
                            "average",
                            "first",
                            "last",
                            "max",
                            "min",
                            "none",
                            "sum"
                        ],
                        "in": "query",
                        "name": "aggregate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "format": "double",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceInstances"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceInstanceDataPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "fetch device instances data",
                "tags": [
                    "Data"
                ]
            }
        },
        "/device/unmonitoreddevices": {
            "get": {
                "description": "",
                "operationId": "getUnmonitoredDeviceList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UnmonitoredDevicePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get unmonitored device list",
                "tags": [
                    "Devices"
                ]
            }
        },
        "/metrics/usage": {
            "get": {
                "description": "",
                "operationId": "getMetricsUsage",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Usage"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get metrics usage",
                "tags": [
                    "Metrics"
                ]
            }
        },
        "/report/groups": {
            "get": {
                "description": "",
                "operationId": "getReportGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get report group list",
                "tags": [
                    "Report Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addReportGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add report group",
                "tags": [
                    "Report Groups"
                ]
            }
        },
        "/report/groups/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteReportGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete report group",
                "tags": [
                    "Report Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getReportGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get report group by id",
                "tags": [
                    "Report Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchReportGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update report group",
                "tags": [
                    "Report Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateReportGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update report group",
                "tags": [
                    "Report Groups"
                ]
            }
        },
        "/report/reports": {
            "get": {
                "description": "",
                "operationId": "getReportList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get report list",
                "tags": [
                    "Report"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addReport",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add report",
                "tags": [
                    "Report"
                ]
            }
        },
        "/report/reports/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteReportById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete report",
                "tags": [
                    "Report"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getReportById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get report by id",
                "tags": [
                    "Report"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchReportById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update report",
                "tags": [
                    "Report"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateReportById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ReportBase"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update report",
                "tags": [
                    "Report"
                ]
            }
        },
        "/report/reports/{id}/executions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "generateReportById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GenerateReportRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenerateReportResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "run a report",
                "tags": [
                    "Report"
                ]
            }
        },
        "/sdt/sdts": {
            "get": {
                "description": "",
                "operationId": "getSDTList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDTPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT list",
                "tags": [
                    "SDTs"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addSDT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add SDT",
                "tags": [
                    "SDTs"
                ]
            }
        },
        "/sdt/sdts/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteSDTById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete SDT",
                "tags": [
                    "SDTs"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getSDTById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT by id",
                "tags": [
                    "SDTs"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchSDTById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update SDT",
                "tags": [
                    "SDTs"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateSDTById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDT"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update SDT",
                "tags": [
                    "SDTs"
                ]
            }
        },
        "/setting/accesslogs": {
            "get": {
                "description": "",
                "operationId": "getAuditLogList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccessLogPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Get audit logs",
                "tags": [
                    "Audit Logs"
                ]
            }
        },
        "/setting/accesslogs/{id}": {
            "get": {
                "description": "",
                "operationId": "getAuditLogById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AuditLog"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "Get audit log by id",
                "tags": [
                    "Audit Logs"
                ]
            }
        },
        "/setting/admins": {
            "get": {
                "description": "",
                "operationId": "getAdminList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AdminPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get user list",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addAdmin",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/setting/admins/apitokens": {
            "get": {
                "description": "",
                "operationId": "getApiTokenList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of api tokens across users",
                "tags": [
                    "API Tokens"
                ]
            }
        },
        "/setting/admins/{adminId}/apitokens": {
            "get": {
                "description": "",
                "operationId": "getApiTokenListByAdminId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "adminId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get api tokens for a user",
                "tags": [
                    "API Tokens"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addApiTokenByAdminId",
                "parameters": [
                    {
                        "default": "API Token",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "adminId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add api tokens for a user",
                "tags": [
                    "API Tokens"
                ]
            }
        },
        "/setting/admins/{adminId}/apitokens/{apitokenId}": {
            "delete": {
                "description": "",
                "operationId": "deleteApiTokenById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "adminId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "apitokenId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete apiToken",
                "tags": [
                    "API Tokens"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchApiTokenByAdminId",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "adminId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "apitokenId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update api tokens for a user",
                "tags": [
                    "API Tokens"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateApiTokenByAdminId",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "adminId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "apitokenId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/APIToken"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update api tokens for a user",
                "tags": [
                    "API Tokens"
                ]
            }
        },
        "/setting/admins/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteAdminById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete user",
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getAdminById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get user",
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchAdminById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "changePassword",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update user",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateAdminById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "changePassword",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/setting/alert/chains": {
            "get": {
                "description": "",
                "operationId": "getEscalationChainList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EscalationChainPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get escalation chain list",
                "tags": [
                    "Escalation Chains"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addEscalationChain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add escalation chain",
                "tags": [
                    "Escalation Chains"
                ]
            }
        },
        "/setting/alert/chains/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteEscalationChainById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete escalation chain",
                "tags": [
                    "Escalation Chains"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getEscalationChainById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get escalation chain by id",
                "tags": [
                    "Escalation Chains"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchEscalationChainById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update escalation chain",
                "tags": [
                    "Escalation Chains"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateEscalationChainById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EscalatingChain"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update escalation chain",
                "tags": [
                    "Escalation Chains"
                ]
            }
        },
        "/setting/alert/rules": {
            "get": {
                "description": "",
                "operationId": "getAlertRuleList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertRulePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alert rule list",
                "tags": [
                    "Alert Rules"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addAlertRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add alert rule",
                "tags": [
                    "Alert Rules"
                ]
            }
        },
        "/setting/alert/rules/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteAlertRuleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete alert rule",
                "tags": [
                    "Alert Rules"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getAlertRuleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alert rule by id",
                "tags": [
                    "Alert Rules"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchAlertRuleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update alert rule",
                "tags": [
                    "Alert Rules"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateAlertRuleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertRule"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update alert rule",
                "tags": [
                    "Alert Rules"
                ]
            }
        },
        "/setting/batchjobs/importxml": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "importBatchJob",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "import batch job via xml",
                "tags": [
                    "BatchJobs"
                ]
            }
        },
        "/setting/collector/collectors": {
            "get": {
                "description": "",
                "operationId": "getCollectorList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector list",
                "tags": [
                    "Collectors"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addCollector",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add collector",
                "tags": [
                    "Collectors"
                ]
            }
        },
        "/setting/collector/collectors/versions": {
            "get": {
                "description": "",
                "operationId": "getCollectorVersionList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorVersionPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector version list",
                "tags": [
                    "CollectorVersions"
                ]
            }
        },
        "/setting/collector/collectors/{collectorId}/installers/{osAndArch}": {
            "get": {
                "description": "",
                "operationId": "getCollectorInstaller",
                "parameters": [
                    {
                        "default": "medium",
                        "description": "The size of the Collector you'd like to install. Options are nano, small (requires 2GB memory), medium (requires 4GB memory), large (requires 8GB memory), extra large (requires 16GB memory), double extra large (requires 32GB memory). Requires collector version 22.180 or higher. Defaults to small",
                        "in": "query",
                        "name": "collectorSize",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "If true, the latest EA Collector version will be used. Defaults to false",
                        "in": "query",
                        "name": "useEA",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": true,
                        "in": "query",
                        "name": "monitorOthers",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The version of the installer you'd like to download. This defaults to the latest GD Collector, unless useEA is true",
                        "format": "int32",
                        "in": "query",
                        "name": "collectorVersion",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "collectorId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "osAndArch",
                        "pattern": ".+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector installer",
                "tags": [
                    "Collectors"
                ]
            }
        },
        "/setting/collector/collectors/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteCollectorById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete collector",
                "tags": [
                    "Collectors"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getCollectorById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector",
                "tags": [
                    "Collectors"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchCollectorById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "forceUpdateFailedOverDevices",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update collector",
                "tags": [
                    "Collectors"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateCollectorById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "forceUpdateFailedOverDevices",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Collector"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update collector",
                "tags": [
                    "Collectors"
                ]
            }
        },
        "/setting/collector/collectors/{id}/ackdown": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ackCollectorDownAlertById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AckCollectorDown"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "ack collector down alert",
                "tags": [
                    "Collectors"
                ]
            }
        },
        "/setting/collector/groups": {
            "get": {
                "description": "",
                "operationId": "getCollectorGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector group list",
                "tags": [
                    "Collector Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addCollectorGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add collector group",
                "tags": [
                    "Collector Groups"
                ]
            }
        },
        "/setting/collector/groups/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteCollectorGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete collector group",
                "tags": [
                    "Collector Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getCollectorGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get collector group",
                "tags": [
                    "Collector Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchCollectorGroupById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "forceUpdateFailedOverDevices",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update collector group",
                "tags": [
                    "Collector Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateCollectorGroupById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "forceUpdateFailedOverDevices",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CollectorGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update collector group",
                "tags": [
                    "Collector Groups"
                ]
            }
        },
        "/setting/configsources/importxml": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "importConfigSource",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "import config source via xml",
                "tags": [
                    "ConfigSources"
                ]
            }
        },
        "/setting/datasources": {
            "get": {
                "description": "",
                "operationId": "getDatasourceList",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DatasourcePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get datasource list",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/importxml": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "importDataSource",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "import datasource via xml",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/{dsId}/ographs": {
            "get": {
                "description": "",
                "operationId": "getDataSourceOverviewGraphList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DatasourceOverviewGraphPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get datasource overview graph list",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/{dsId}/ographs/{id}": {
            "get": {
                "description": "",
                "operationId": "getDataSourceOverviewGraphById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "dsId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSourceOverviewGraph"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get datasource overview graph by id",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteDatasourceById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete datasource",
                "tags": [
                    "Datasources"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getDatasourceById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get datasource by id",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/{id}/devices": {
            "get": {
                "description": "",
                "operationId": "getAssociatedDeviceListByDataSourceId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeviceDataSourceAssociatedPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get devices associated with a datasource",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/datasources/{id}/updatereasons": {
            "get": {
                "description": "",
                "operationId": "getUpdateReasonListByDataSourceId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DataSourceUpdateReasonsPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get update history for a datasource",
                "tags": [
                    "Datasources"
                ]
            }
        },
        "/setting/dnsmappings": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "importDNSMapping",
                "parameters": [
                    {
                        "description": "the csv mapping to be uploaded",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "import DNS mapping via CSV",
                "tags": [
                    "DNSMappings"
                ]
            }
        },
        "/setting/eventsources": {
            "get": {
                "description": "",
                "operationId": "getEventSourceList",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/EventSourcePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get eventSource list",
                "tags": [
                    "EventSources"
                ]
            }
        },
        "/setting/eventsources/importxml": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "importEventSource",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "import eventsource via xml",
                "tags": [
                    "EventSources"
                ]
            }
        },
        "/setting/functions": {
            "get": {
                "description": "",
                "operationId": "getAppliesToFunctionList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RestAppliesToFunctionPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get applies to function list",
                "tags": [
                    "AppliesToFunctions"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addAppliesToFunction",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add applies to function",
                "tags": [
                    "AppliesToFunctions"
                ]
            }
        },
        "/setting/functions/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteAppliesToFunctionById",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "ignoreReference",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete applies to function",
                "tags": [
                    "AppliesToFunctions"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getAppliesToFunctionById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get applies to function",
                "tags": [
                    "AppliesToFunctions"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchAppliesToFunction",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "ignoreReference",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update applies to function",
                "tags": [
                    "AppliesToFunctions"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateAppliesToFunction",
                "parameters": [
                    {
                        "default": false,
                        "in": "query",
                        "name": "ignoreReference",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AppliesToFunction"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update applies to function",
                "tags": [
                    "AppliesToFunctions"
                ]
            }
        },
        "/setting/netscans": {
            "get": {
                "description": "",
                "operationId": "getNetscanList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NetscanPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get netscan list",
                "tags": [
                    "Netscans"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addNetscan",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add a new netscan",
                "tags": [
                    "Netscans"
                ]
            }
        },
        "/setting/netscans/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteNetscanById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete a netscan",
                "tags": [
                    "Netscans"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getNetscanById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get netscan by id",
                "tags": [
                    "Netscans"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchNetscan",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update a netscan",
                "tags": [
                    "Netscans"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateNetscan",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Netscan"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update a netscan",
                "tags": [
                    "Netscans"
                ]
            }
        },
        "/setting/opsnotes": {
            "get": {
                "description": "",
                "operationId": "getOpsNoteList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter the response based on tags, createdBy, happenedOn, monitorObjectGroups, monitorObjectNames, or _all field values",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OpsNotePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get opsnote list",
                "tags": [
                    "Ops Notes"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addOpsNote",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add opsnote",
                "tags": [
                    "Ops Notes"
                ]
            }
        },
        "/setting/opsnotes/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteOpsNoteById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete opsnote",
                "tags": [
                    "Ops Notes"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getOpsNoteById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get opsnote by id",
                "tags": [
                    "Ops Notes"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchOpsNoteById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update opsnote",
                "tags": [
                    "Ops Notes"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateOpsNoteById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "pattern": "[^/]+",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OpsNote"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update opsnote",
                "tags": [
                    "Ops Notes"
                ]
            }
        },
        "/setting/recipientgroups": {
            "get": {
                "description": "",
                "operationId": "getRecipientGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecipientGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get recipient group List",
                "tags": [
                    "Recipient Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addRecipientGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add recipient group",
                "tags": [
                    "Recipient Groups"
                ]
            }
        },
        "/setting/recipientgroups/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteRecipientGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete recipient group",
                "tags": [
                    "Recipient Groups"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getRecipientGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get recipient group by id",
                "tags": [
                    "Recipient Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchRecipientGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update recipient group",
                "tags": [
                    "Recipient Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateRecipientGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RecipientGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update recipient group",
                "tags": [
                    "Recipient Groups"
                ]
            }
        },
        "/setting/roles": {
            "get": {
                "description": "",
                "operationId": "getRoleList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RolePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get role list",
                "tags": [
                    "Roles"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add role",
                "tags": [
                    "Roles"
                ]
            }
        },
        "/setting/roles/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteRoleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete role",
                "tags": [
                    "Roles"
                ]
            },
            "get": {
                "description": "",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get role by id",
                "tags": [
                    "Roles"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchRoleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update role",
                "tags": [
                    "Roles"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateRoleById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update role",
                "tags": [
                    "Roles"
                ]
            }
        },
        "/website/groups": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getWebsiteGroupList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroupPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website group list",
                "tags": [
                    "Website Groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addWebsiteGroup",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add website group",
                "tags": [
                    "Website Groups"
                ]
            }
        },
        "/website/groups/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "deleteWebsiteGroupById",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "deleteChildren",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete website group",
                "tags": [
                    "Website Groups"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getWebsiteGroupById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website group",
                "tags": [
                    "Website Groups"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchWebsiteGroupById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update website group",
                "tags": [
                    "Website Groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateWebsiteGroupById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroup"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update website group",
                "tags": [
                    "Website Groups"
                ]
            }
        },
        "/website/groups/{id}/historysdts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getSDTHistoryByWebsiteGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteGroupSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT history for the website group",
                "tags": [
                    "Website Groups"
                ]
            }
        },
        "/website/groups/{id}/sdts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getAllSDTListByWebsiteGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDTPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of SDTs for a website group",
                "tags": [
                    "Website Groups"
                ]
            }
        },
        "/website/groups/{id}/websites": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getImmediateWebsiteListByWebsiteGroupId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsitePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of websites for a group",
                "tags": [
                    "Website Groups"
                ]
            }
        },
        "/website/smcheckpoints": {
            "get": {
                "description": "",
                "operationId": "getSiteMonitorCheckPointList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SiteMonitorCheckPointPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website checkpoint list",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getWebsiteList",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "collectorIds",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsitePaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website list",
                "tags": [
                    "Websites"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "addWebsite",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "add website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}": {
            "delete": {
                "description": "",
                "operationId": "deleteWebsiteById",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "delete website",
                "tags": [
                    "Websites"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getWebsiteById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website by id",
                "tags": [
                    "Websites"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "patchWebsiteById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update website",
                "tags": [
                    "Websites"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateWebsiteById",
                "parameters": [
                    {
                        "default": "refresh",
                        "in": "query",
                        "name": "opType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Website"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "update website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}/alerts": {
            "get": {
                "description": "",
                "operationId": "getWebsiteAlertListByWebsiteId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "needMessage",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "customColumns",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AlertPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get alerts for a website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}/graphs/{graphName}/data": {
            "get": {
                "description": "",
                "operationId": "getWebsiteDataByGraphName",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "graphName",
                        "pattern": ".+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website data by graph name",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}/historysdts": {
            "get": {
                "description": "",
                "operationId": "getSDTHistoryByWebsiteId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteSDTHistoryPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get SDT history for the website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}/properties": {
            "get": {
                "description": "",
                "operationId": "getWebsitePropertyListByWebsiteId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PropertyPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of properties for a website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{id}/sdts": {
            "get": {
                "description": "",
                "operationId": "getWebsiteSDTListByWebsiteId",
                "parameters": [
                    {
                        "default": 0,
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 50,
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "id",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SDTPaginationResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get a list of SDTs for a website",
                "tags": [
                    "Websites"
                ]
            }
        },
        "/website/websites/{srvId}/checkpoints/{checkId}/data": {
            "get": {
                "description": "",
                "operationId": "getWebsiteCheckpointDataById",
                "parameters": [
                    {
                        "default": "json",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": "none",
                        "description": "the aggregate option",
                        "enum": [
                            "average",
                            "first",
                            "last",
                            "max",
                            "min",
                            "none",
                            "sum"
                        ],
                        "in": "query",
                        "name": "aggregate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "format": "double",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "checkId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "srvId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "datapoints",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WebsiteCheckpointRawData"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get data for a website checkpoint",
                "tags": [
                    "Data"
                ]
            }
        },
        "/website/websites/{websiteId}/checkpoints/{checkpointId}/graphs/{graphName}/data": {
            "get": {
                "description": "",
                "operationId": "getWebsiteGraphData",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "checkpointId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "path",
                        "name": "websiteId",
                        "pattern": "\\d+",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "graphName",
                        "pattern": ".+",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GraphPlot"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "LMv1": []
                    }
                ],
                "summary": "get website graph data",
                "tags": [
                    "Data"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "LMv1": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "name": "API Tokens"
        },
        {
            "name": "Alert Rules"
        },
        {
            "name": "Alerts"
        },
        {
            "name": "ApiPerfStats"
        },
        {
            "name": "AppliesToFunctions"
        },
        {
            "name": "Audit Logs"
        },
        {
            "name": "BatchJobs"
        },
        {
            "name": "Collector Groups"
        },
        {
            "name": "CollectorVersions"
        },
        {
            "name": "Collectors"
        },
        {
            "name": "ConfigSources"
        },
        {
            "name": "DNSMappings"
        },
        {
            "name": "Dashboard Groups"
        },
        {
            "name": "Dashboards"
        },
        {
            "name": "Data"
        },
        {
            "name": "Datasource Instances"
        },
        {
            "name": "Datasources"
        },
        {
            "name": "Debug"
        },
        {
            "name": "Device Groups"
        },
        {
            "name": "Devices"
        },
        {
            "name": "Escalation Chains"
        },
        {
            "name": "EventSources"
        },
        {
            "name": "Metrics"
        },
        {
            "name": "Netscans"
        },
        {
            "name": "Ops Notes"
        },
        {
            "name": "Recipient Groups"
        },
        {
            "name": "Report Groups"
        },
        {
            "name": "Report"
        },
        {
            "name": "Roles"
        },
        {
            "name": "SDTs"
        },
        {
            "name": "Thresholds"
        },
        {
            "name": "Users"
        },
        {
            "name": "Website Groups"
        },
        {
            "name": "Websites"
        },
        {
            "name": "Widgets"
        }
    ]
}